<?xml version="1.0"?>
<Module version="0" name="QtWidgets">
  <Class name="QWidget" inherits="QObject QPaintDevice">
    <Function name="QWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QWidget.RenderFlag">
      <EnumMember name="QWidget.DrawWindowBackground"/>
      <EnumMember name="QWidget.DrawChildren"/>
      <EnumMember name="QWidget.IgnoreMask"/>
    </Enum>
    <Signal default="1" name="QWidget.windowIconTextChanged" sig="void windowIconTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QWidget.windowIconChanged" sig="void windowIconChanged(const  ::QIcon&amp;)"/>
    <Signal default="1" name="QWidget.windowTitleChanged" sig="void windowTitleChanged(const QString&amp;)"/>
    <Function name="QWidget.toolTipDuration">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.setToolTipDuration">
      <Argument typename="int" name="msec"/>
    </Function>
    <Function name="QWidget.initPainter" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Function name="QWidget.sharedPainter" virtual="1">
      <Argument typename="QPainter" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.nativeEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QByteArray" typetype="class" name="eventType"/>
      <Argument typename="sip.voidptr" name="message"/>
      <Argument typename="int" name="result" dir="out"/>
    </Function>
    <Function name="QWidget.windowHandle">
      <Argument typename="QWindow" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.createWindowContainer" static="1">
      <Argument typename="object" dir="out"/>
      <Argument typename="QWindow" typetype="class" name="window"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="0"/>
    </Function>
    <Function name="QWidget.grab">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QRect" typetype="class" name="rectangle" default="QRect(QPoint(0,0),QSize(-1,-1))"/>
    </Function>
    <Function name="QWidget.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.setInputMethodHints">
      <Argument typename="Qt.InputMethodHints" typetype="class" name="hints"/>
    </Function>
    <Function name="QWidget.inputMethodHints">
      <Argument typename="Qt.InputMethodHints" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.previousInFocusChain">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.contentsMargins">
      <Argument typename="QMargins" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.ungrabGesture">
      <Argument typename="Qt.GestureType" typetype="enum" name="type"/>
    </Function>
    <Function name="QWidget.grabGesture">
      <Argument typename="Qt.GestureType" typetype="enum" name="type"/>
      <Argument typename="Qt.GestureFlags" typetype="class" name="flags" default="Qt.GestureFlags()"/>
    </Function>
    <Function name="QWidget.setGraphicsEffect">
      <Argument typename="QGraphicsEffect" typetype="class" name="effect" transfer="to"/>
    </Function>
    <Function name="QWidget.graphicsEffect">
      <Argument typename="QGraphicsEffect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.graphicsProxyWidget">
      <Argument typename="QGraphicsProxyWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.windowFilePath">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowFilePath">
      <Argument typename="QString" typetype="mappedtype" name="filePath"/>
    </Function>
    <Function name="QWidget.nativeParentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.effectiveWinId">
      <Argument typename="quintptr" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.unsetLocale"/>
    <Function name="QWidget.locale">
      <Argument typename="QLocale" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setLocale">
      <Argument typename="QLocale" typetype="class" name="locale"/>
    </Function>
    <Function name="QWidget.render">
      <Argument typename="QPaintDevice" typetype="class" name="target"/>
      <Argument typename="QPoint" typetype="class" name="targetOffset" default="QPoint()"/>
      <Argument typename="QRegion" typetype="class" name="sourceRegion" default="QRegion()"/>
      <Argument typename="QWidget.RenderFlags" typetype="class" name="flags" default="QWidget.RenderFlags(QWidget.DrawWindowBackground|QWidget.DrawChildren)"/>
    </Function>
    <Function name="QWidget.render">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QPoint" typetype="class" name="targetOffset" default="QPoint()"/>
      <Argument typename="QRegion" typetype="class" name="sourceRegion" default="QRegion()"/>
      <Argument typename="QWidget.RenderFlags" typetype="class" name="flags" default="QWidget.RenderFlags(QWidget.DrawWindowBackground|QWidget.DrawChildren)"/>
    </Function>
    <Function name="QWidget.restoreGeometry">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QByteArray" typetype="class" name="geometry"/>
    </Function>
    <Function name="QWidget.saveGeometry">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setShortcutAutoRepeat">
      <Argument typename="int" name="id"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QWidget.styleSheet">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setStyleSheet">
      <Argument typename="QString" typetype="mappedtype" name="styleSheet"/>
    </Function>
    <Function name="QWidget.setAutoFillBackground">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QWidget.autoFillBackground">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowModality">
      <Argument typename="Qt.WindowModality" typetype="enum" name="windowModality"/>
    </Function>
    <Function name="QWidget.windowModality">
      <Argument typename="Qt.WindowModality" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.testAttribute">
      <Argument typename="bool" dir="out"/>
      <Argument typename="Qt.WidgetAttribute" typetype="enum" name="attribute"/>
    </Function>
    <Function name="QWidget.parentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.height">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.width">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.size">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.geometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.rect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.isHidden">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.updatesEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.underMouse">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.hasMouseTracking">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.setMouseTracking">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QWidget.fontInfo">
      <Argument typename="QFontInfo" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.fontMetrics">
      <Argument typename="QFontMetrics" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.maximumHeight">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.maximumWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.minimumHeight">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.minimumWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.isModal">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isWindow">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.winId">
      <Argument typename="quintptr" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.windowFlags">
      <Argument typename="Qt.WindowFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.windowType">
      <Argument typename="Qt.WindowType" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.focusPreviousChild">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.focusNextChild">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QWidget.destroy">
      <Argument typename="bool" name="destroyWindow" default="True"/>
      <Argument typename="bool" name="destroySubWindows" default="True"/>
    </Function>
    <Function name="QWidget.create">
      <Argument typename="quintptr" typetype="mappedtype" name="window" default="0"/>
      <Argument typename="bool" name="initializeWindow" default="True"/>
      <Argument typename="bool" name="destroyOldWindow" default="True"/>
    </Function>
    <Function name="QWidget.updateMicroFocus"/>
    <Function name="QWidget.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum"/>
    </Function>
    <Function name="QWidget.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.metric" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPaintDevice.PaintDeviceMetric" typetype="enum"/>
    </Function>
    <Function name="QWidget.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.actionEvent" virtual="1">
      <Argument typename="QActionEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.tabletEvent" virtual="1">
      <Argument typename="QTabletEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.moveEvent" virtual="1">
      <Argument typename="QMoveEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.leaveEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.enterEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Signal default="1" name="QWidget.customContextMenuRequested" sig="void customContextMenuRequested(const  ::QPoint&amp;)"/>
    <Function name="QWidget.isAncestorOf">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="child"/>
    </Function>
    <Function name="QWidget.ensurePolished"/>
    <Function name="QWidget.paintEngine" virtual="1">
      <Argument typename="QPaintEngine" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setAttribute">
      <Argument typename="Qt.WidgetAttribute" typetype="enum" name="attribute"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QWidget.childAt">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QWidget.childAt">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QWidget.find" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="quintptr" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.overrideWindowFlags">
      <Argument typename="Qt.WindowFlags" typetype="class" name="type"/>
    </Function>
    <Function name="QWidget.setWindowFlags">
      <Argument typename="Qt.WindowFlags" typetype="class" name="type"/>
    </Function>
    <Function name="QWidget.actions">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.removeAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QWidget.insertActions">
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="actions"/>
    </Function>
    <Function name="QWidget.insertAction">
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QWidget.addActions">
      <Argument typename="unknown-type" typetype="mappedtype" name="actions"/>
    </Function>
    <Function name="QWidget.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QWidget.setAcceptDrops">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QWidget.acceptDrops">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.nextInFocusChain">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.focusWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.scroll">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QWidget.scroll">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QWidget.setParent">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QWidget.setParent">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QWidget.updateGeometry"/>
    <Function name="QWidget.setLayout">
      <Argument typename="QLayout" typetype="class" transfer="to"/>
    </Function>
    <Function name="QWidget.layout">
      <Argument typename="QLayout" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.contentsRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.getContentsMargins">
      <Argument typename="int" name="left" dir="out"/>
      <Argument typename="int" name="top" dir="out"/>
      <Argument typename="int" name="right" dir="out"/>
      <Argument typename="int" name="bottom" dir="out"/>
    </Function>
    <Function name="QWidget.setContentsMargins">
      <Argument typename="int" name="left"/>
      <Argument typename="int" name="top"/>
      <Argument typename="int" name="right"/>
      <Argument typename="int" name="bottom"/>
    </Function>
    <Function name="QWidget.setContentsMargins">
      <Argument typename="QMargins" typetype="class" name="margins"/>
    </Function>
    <Function name="QWidget.visibleRegion">
      <Argument typename="QRegion" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QWidget.setSizePolicy">
      <Argument typename="QSizePolicy" typetype="class"/>
    </Function>
    <Function name="QWidget.setSizePolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="hor"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="ver"/>
    </Function>
    <Function name="QWidget.sizePolicy">
      <Argument typename="QSizePolicy" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.overrideWindowState">
      <Argument typename="Qt.WindowStates" typetype="class" name="state"/>
    </Function>
    <Function name="QWidget.setWindowState">
      <Argument typename="Qt.WindowStates" typetype="class" name="state"/>
    </Function>
    <Function name="QWidget.windowState">
      <Argument typename="Qt.WindowStates" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.isFullScreen">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isMaximized">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isMinimized">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isVisibleTo">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QWidget.adjustSize"/>
    <Function name="QWidget.setGeometry">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QWidget.setGeometry">
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
      <Argument typename="int" name="aw"/>
      <Argument typename="int" name="ah"/>
    </Function>
    <Function name="QWidget.resize">
      <Argument typename="QSize" typetype="class"/>
    </Function>
    <Function name="QWidget.resize">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QWidget.move">
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.move">
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QWidget.stackUnder">
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QWidget.lower" slot="void lower()"/>
    <Function name="QWidget.raise_" slot="void raise()"/>
    <Function name="QWidget.close" slot="bool close()">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.showNormal" slot="void showNormal()"/>
    <Function name="QWidget.showFullScreen" slot="void showFullScreen()"/>
    <Function name="QWidget.showMaximized" slot="void showMaximized()"/>
    <Function name="QWidget.showMinimized" slot="void showMinimized()"/>
    <Function name="QWidget.hide" slot="void hide()"/>
    <Function name="QWidget.show" slot="void show()"/>
    <Function name="QWidget.setHidden" slot="void setHidden(bool)">
      <Argument typename="bool" name="hidden"/>
    </Function>
    <Function name="QWidget.setVisible" slot="void setVisible(bool)" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QWidget.repaint" slot="void repaint()"/>
    <Function name="QWidget.repaint">
      <Argument typename="int" name="x"/>
      <Argument typename="int" name="y"/>
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QWidget.repaint">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QWidget.repaint">
      <Argument typename="QRegion" typetype="class"/>
    </Function>
    <Function name="QWidget.update" slot="void update()"/>
    <Function name="QWidget.update">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QWidget.update">
      <Argument typename="QRegion" typetype="class"/>
    </Function>
    <Function name="QWidget.update">
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
      <Argument typename="int" name="aw"/>
      <Argument typename="int" name="ah"/>
    </Function>
    <Function name="QWidget.setUpdatesEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QWidget.keyboardGrabber" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.mouseGrabber" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setShortcutEnabled">
      <Argument typename="int" name="id"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QWidget.releaseShortcut">
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWidget.grabShortcut">
      <Argument typename="int" dir="out"/>
      <Argument typename="QKeySequence" typetype="class" name="key"/>
      <Argument typename="Qt.ShortcutContext" typetype="enum" name="context" default="Qt.WindowShortcut"/>
    </Function>
    <Function name="QWidget.releaseKeyboard"/>
    <Function name="QWidget.grabKeyboard"/>
    <Function name="QWidget.releaseMouse"/>
    <Function name="QWidget.grabMouse"/>
    <Function name="QWidget.grabMouse">
      <Argument typename="QCursor" typetype="class"/>
    </Function>
    <Function name="QWidget.setContextMenuPolicy">
      <Argument typename="Qt.ContextMenuPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QWidget.contextMenuPolicy">
      <Argument typename="Qt.ContextMenuPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.focusProxy">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setFocusProxy">
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QWidget.setTabOrder" static="1">
      <Argument typename="QWidget" typetype="class"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QWidget.hasFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.setFocusPolicy">
      <Argument typename="Qt.FocusPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QWidget.focusPolicy">
      <Argument typename="Qt.FocusPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.clearFocus"/>
    <Function name="QWidget.activateWindow"/>
    <Function name="QWidget.isActiveWindow">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.setFocus" slot="void setFocus()"/>
    <Function name="QWidget.setFocus">
      <Argument typename="Qt.FocusReason" typetype="enum" name="reason"/>
    </Function>
    <Function name="QWidget.isLeftToRight">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.isRightToLeft">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.unsetLayoutDirection"/>
    <Function name="QWidget.layoutDirection">
      <Argument typename="Qt.LayoutDirection" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.setLayoutDirection">
      <Argument typename="Qt.LayoutDirection" typetype="enum" name="direction"/>
    </Function>
    <Function name="QWidget.setAccessibleDescription">
      <Argument typename="QString" typetype="mappedtype" name="description"/>
    </Function>
    <Function name="QWidget.accessibleDescription">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setAccessibleName">
      <Argument typename="QString" typetype="mappedtype" name="name"/>
    </Function>
    <Function name="QWidget.accessibleName">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.whatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setWhatsThis">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.statusTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setStatusTip">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setToolTip">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.isWindowModified">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidget.windowOpacity">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowOpacity">
      <Argument typename="float" name="level"/>
    </Function>
    <Function name="QWidget.windowRole">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowRole">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.windowIconText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowIconText">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.windowIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowIcon">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QWidget.windowTitle">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowTitle">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QWidget.clearMask"/>
    <Function name="QWidget.mask">
      <Argument typename="QRegion" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setMask">
      <Argument typename="QBitmap" typetype="class"/>
    </Function>
    <Function name="QWidget.setMask">
      <Argument typename="QRegion" typetype="class"/>
    </Function>
    <Function name="QWidget.unsetCursor"/>
    <Function name="QWidget.setCursor">
      <Argument typename="QCursor" typetype="class"/>
    </Function>
    <Function name="QWidget.cursor">
      <Argument typename="QCursor" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setFont">
      <Argument typename="QFont" typetype="class"/>
    </Function>
    <Function name="QWidget.foregroundRole">
      <Argument typename="QPalette.ColorRole" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.setForegroundRole">
      <Argument typename="QPalette.ColorRole" typetype="enum"/>
    </Function>
    <Function name="QWidget.backgroundRole">
      <Argument typename="QPalette.ColorRole" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWidget.setBackgroundRole">
      <Argument typename="QPalette.ColorRole" typetype="enum"/>
    </Function>
    <Function name="QWidget.setPalette">
      <Argument typename="QPalette" typetype="class"/>
    </Function>
    <Function name="QWidget.palette">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.window">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.mapFrom">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.mapTo">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.mapFromParent">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.mapToParent">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.mapFromGlobal">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.mapToGlobal">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QWidget.setFixedHeight">
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QWidget.setFixedWidth">
      <Argument typename="int" name="w"/>
    </Function>
    <Function name="QWidget.setFixedSize">
      <Argument typename="QSize" typetype="class"/>
    </Function>
    <Function name="QWidget.setFixedSize">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QWidget.setBaseSize">
      <Argument typename="int" name="basew"/>
      <Argument typename="int" name="baseh"/>
    </Function>
    <Function name="QWidget.setBaseSize">
      <Argument typename="QSize" typetype="class" name="s"/>
    </Function>
    <Function name="QWidget.baseSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setSizeIncrement">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QWidget.setSizeIncrement">
      <Argument typename="QSize" typetype="class" name="s"/>
    </Function>
    <Function name="QWidget.sizeIncrement">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setMaximumHeight">
      <Argument typename="int" name="maxh"/>
    </Function>
    <Function name="QWidget.setMaximumWidth">
      <Argument typename="int" name="maxw"/>
    </Function>
    <Function name="QWidget.setMinimumHeight">
      <Argument typename="int" name="minh"/>
    </Function>
    <Function name="QWidget.setMinimumWidth">
      <Argument typename="int" name="minw"/>
    </Function>
    <Function name="QWidget.setMaximumSize">
      <Argument typename="int" name="maxw"/>
      <Argument typename="int" name="maxh"/>
    </Function>
    <Function name="QWidget.setMaximumSize">
      <Argument typename="QSize" typetype="class" name="s"/>
    </Function>
    <Function name="QWidget.setMinimumSize">
      <Argument typename="int" name="minw"/>
      <Argument typename="int" name="minh"/>
    </Function>
    <Function name="QWidget.setMinimumSize">
      <Argument typename="QSize" typetype="class" name="s"/>
    </Function>
    <Function name="QWidget.maximumSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.minimumSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.childrenRegion">
      <Argument typename="QRegion" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.childrenRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.frameSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.pos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.y">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.x">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.normalGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.frameGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.setWindowModified" slot="void setWindowModified(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QWidget.setDisabled" slot="void setDisabled(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QWidget.setEnabled" slot="void setEnabled(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QWidget.isEnabledTo">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QWidget.setStyle">
      <Argument typename="QStyle" typetype="class"/>
    </Function>
    <Function name="QWidget.style">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.devType" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractButton" inherits="QWidget">
    <Function name="QAbstractButton.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QAbstractButton.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractButton.nextCheckState" virtual="1"/>
    <Function name="QAbstractButton.checkStateSet" virtual="1"/>
    <Function name="QAbstractButton.hitButton" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QAbstractButton.paintEvent" abstract="1" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QAbstractButton.toggled" sig="void toggled(bool)"/>
    <Signal default="1" name="QAbstractButton.clicked" sig="void clicked(bool = 0)"/>
    <Signal default="1" name="QAbstractButton.released" sig="void released()"/>
    <Signal default="1" name="QAbstractButton.pressed" sig="void pressed()"/>
    <Function name="QAbstractButton.setChecked" slot="void setChecked(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractButton.toggle" slot="void toggle()"/>
    <Function name="QAbstractButton.click" slot="void click()"/>
    <Function name="QAbstractButton.animateClick" slot="void animateClick(int = 100)">
      <Argument typename="int" name="msecs" default="100"/>
    </Function>
    <Function name="QAbstractButton.setIconSize" slot="void setIconSize(const  ::QSize&amp;)">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QAbstractButton.group">
      <Argument typename="QButtonGroup" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractButton.autoExclusive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setAutoExclusive">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractButton.autoRepeat">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setAutoRepeat">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractButton.isDown">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setDown">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractButton.isChecked">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractButton.isCheckable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setCheckable">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractButton.shortcut">
      <Argument typename="QKeySequence" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setShortcut">
      <Argument typename="QKeySequence" typetype="class" name="key"/>
    </Function>
    <Function name="QAbstractButton.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractButton.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setIcon">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QAbstractButton.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QAbstractButton.autoRepeatInterval">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setAutoRepeatInterval">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractButton.autoRepeatDelay">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractButton.setAutoRepeatDelay">
      <Argument typename="int"/>
    </Function>
  </Class>
  <Class name="QAbstractItemDelegate" inherits="QObject">
    <Function name="QAbstractItemDelegate.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QAbstractItemDelegate.EndEditHint">
      <EnumMember name="QAbstractItemDelegate.NoHint"/>
      <EnumMember name="QAbstractItemDelegate.EditNextItem"/>
      <EnumMember name="QAbstractItemDelegate.EditPreviousItem"/>
      <EnumMember name="QAbstractItemDelegate.SubmitModelCache"/>
      <EnumMember name="QAbstractItemDelegate.RevertModelCache"/>
    </Enum>
    <Signal default="1" name="QAbstractItemDelegate.sizeHintChanged" sig="void sizeHintChanged(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QAbstractItemDelegate.closeEditor" sig="void closeEditor( ::QWidget*, ::QAbstractItemDelegate::EndEditHint = QAbstractItemDelegate.NoHint)"/>
    <Signal default="1" name="QAbstractItemDelegate.commitData" sig="void commitData( ::QWidget*)"/>
    <Function name="QAbstractItemDelegate.helpEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QHelpEvent" typetype="class" name="event"/>
      <Argument typename="QAbstractItemView" typetype="class" name="view"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.editorEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.destroyEditor" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.updateEditorGeometry" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.setModelData" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.setEditorData" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.createEditor" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.sizeHint" abstract="1" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemDelegate.paint" abstract="1" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
  </Class>
  <Class name="QFrame" inherits="QWidget">
    <Function name="QFrame.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QFrame.StyleMask">
      <EnumMember name="QFrame.Shadow_Mask"/>
      <EnumMember name="QFrame.Shape_Mask"/>
    </Enum>
    <Enum name="QFrame.Shape">
      <EnumMember name="QFrame.NoFrame"/>
      <EnumMember name="QFrame.Box"/>
      <EnumMember name="QFrame.Panel"/>
      <EnumMember name="QFrame.WinPanel"/>
      <EnumMember name="QFrame.HLine"/>
      <EnumMember name="QFrame.VLine"/>
      <EnumMember name="QFrame.StyledPanel"/>
    </Enum>
    <Enum name="QFrame.Shadow">
      <EnumMember name="QFrame.Plain"/>
      <EnumMember name="QFrame.Raised"/>
      <EnumMember name="QFrame.Sunken"/>
    </Enum>
    <Function name="QFrame.drawFrame">
      <Argument typename="QPainter" typetype="class"/>
    </Function>
    <Function name="QFrame.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QFrame.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QFrame.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QFrame.setFrameRect">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QFrame.frameRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QFrame.setMidLineWidth">
      <Argument typename="int"/>
    </Function>
    <Function name="QFrame.midLineWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFrame.setLineWidth">
      <Argument typename="int"/>
    </Function>
    <Function name="QFrame.lineWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFrame.setFrameShadow">
      <Argument typename="QFrame.Shadow" typetype="enum"/>
    </Function>
    <Function name="QFrame.frameShadow">
      <Argument typename="QFrame.Shadow" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFrame.setFrameShape">
      <Argument typename="QFrame.Shape" typetype="enum"/>
    </Function>
    <Function name="QFrame.frameShape">
      <Argument typename="QFrame.Shape" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFrame.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QFrame.frameWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFrame.setFrameStyle">
      <Argument typename="int"/>
    </Function>
    <Function name="QFrame.frameStyle">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractScrollArea" inherits="QFrame">
    <Function name="QAbstractScrollArea.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QAbstractScrollArea.SizeAdjustPolicy">
      <EnumMember name="QAbstractScrollArea.AdjustIgnored"/>
      <EnumMember name="QAbstractScrollArea.AdjustToContentsOnFirstShow"/>
      <EnumMember name="QAbstractScrollArea.AdjustToContents"/>
    </Enum>
    <Function name="QAbstractScrollArea.setSizeAdjustPolicy">
      <Argument typename="QAbstractScrollArea.SizeAdjustPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QAbstractScrollArea.sizeAdjustPolicy">
      <Argument typename="QAbstractScrollArea.SizeAdjustPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.setupViewport" virtual="1">
      <Argument typename="QWidget" typetype="class" name="viewport"/>
    </Function>
    <Function name="QAbstractScrollArea.setViewport">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QAbstractScrollArea.scrollBarWidgets">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QAbstractScrollArea.addScrollBarWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QAbstractScrollArea.setCornerWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QAbstractScrollArea.cornerWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.setHorizontalScrollBar">
      <Argument typename="QScrollBar" typetype="class" name="scrollbar" transfer="to"/>
    </Function>
    <Function name="QAbstractScrollArea.setVerticalScrollBar">
      <Argument typename="QScrollBar" typetype="class" name="scrollbar" transfer="to"/>
    </Function>
    <Function name="QAbstractScrollArea.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QAbstractScrollArea.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.viewportEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractScrollArea.viewportSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.setViewportMargins">
      <Argument typename="int" name="left"/>
      <Argument typename="int" name="top"/>
      <Argument typename="int" name="right"/>
      <Argument typename="int" name="bottom"/>
    </Function>
    <Function name="QAbstractScrollArea.setViewportMargins">
      <Argument typename="QMargins" typetype="class" name="margins"/>
    </Function>
    <Function name="QAbstractScrollArea.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.maximumViewportSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.viewport">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.horizontalScrollBar">
      <Argument typename="QScrollBar" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.setHorizontalScrollBarPolicy">
      <Argument typename="Qt.ScrollBarPolicy" typetype="enum"/>
    </Function>
    <Function name="QAbstractScrollArea.horizontalScrollBarPolicy">
      <Argument typename="Qt.ScrollBarPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.verticalScrollBar">
      <Argument typename="QScrollBar" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractScrollArea.setVerticalScrollBarPolicy">
      <Argument typename="Qt.ScrollBarPolicy" typetype="enum"/>
    </Function>
    <Function name="QAbstractScrollArea.verticalScrollBarPolicy">
      <Argument typename="Qt.ScrollBarPolicy" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractItemView" inherits="QAbstractScrollArea">
    <Function name="QAbstractItemView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QAbstractItemView.DropIndicatorPosition">
      <EnumMember name="QAbstractItemView.OnItem"/>
      <EnumMember name="QAbstractItemView.AboveItem"/>
      <EnumMember name="QAbstractItemView.BelowItem"/>
      <EnumMember name="QAbstractItemView.OnViewport"/>
    </Enum>
    <Enum name="QAbstractItemView.State">
      <EnumMember name="QAbstractItemView.NoState"/>
      <EnumMember name="QAbstractItemView.DraggingState"/>
      <EnumMember name="QAbstractItemView.DragSelectingState"/>
      <EnumMember name="QAbstractItemView.EditingState"/>
      <EnumMember name="QAbstractItemView.ExpandingState"/>
      <EnumMember name="QAbstractItemView.CollapsingState"/>
      <EnumMember name="QAbstractItemView.AnimatingState"/>
    </Enum>
    <Enum name="QAbstractItemView.CursorAction">
      <EnumMember name="QAbstractItemView.MoveUp"/>
      <EnumMember name="QAbstractItemView.MoveDown"/>
      <EnumMember name="QAbstractItemView.MoveLeft"/>
      <EnumMember name="QAbstractItemView.MoveRight"/>
      <EnumMember name="QAbstractItemView.MoveHome"/>
      <EnumMember name="QAbstractItemView.MoveEnd"/>
      <EnumMember name="QAbstractItemView.MovePageUp"/>
      <EnumMember name="QAbstractItemView.MovePageDown"/>
      <EnumMember name="QAbstractItemView.MoveNext"/>
      <EnumMember name="QAbstractItemView.MovePrevious"/>
    </Enum>
    <Enum name="QAbstractItemView.SelectionMode">
      <EnumMember name="QAbstractItemView.NoSelection"/>
      <EnumMember name="QAbstractItemView.SingleSelection"/>
      <EnumMember name="QAbstractItemView.MultiSelection"/>
      <EnumMember name="QAbstractItemView.ExtendedSelection"/>
      <EnumMember name="QAbstractItemView.ContiguousSelection"/>
    </Enum>
    <Enum name="QAbstractItemView.SelectionBehavior">
      <EnumMember name="QAbstractItemView.SelectItems"/>
      <EnumMember name="QAbstractItemView.SelectRows"/>
      <EnumMember name="QAbstractItemView.SelectColumns"/>
    </Enum>
    <Enum name="QAbstractItemView.ScrollMode">
      <EnumMember name="QAbstractItemView.ScrollPerItem"/>
      <EnumMember name="QAbstractItemView.ScrollPerPixel"/>
    </Enum>
    <Enum name="QAbstractItemView.ScrollHint">
      <EnumMember name="QAbstractItemView.EnsureVisible"/>
      <EnumMember name="QAbstractItemView.PositionAtTop"/>
      <EnumMember name="QAbstractItemView.PositionAtBottom"/>
      <EnumMember name="QAbstractItemView.PositionAtCenter"/>
    </Enum>
    <Enum name="QAbstractItemView.EditTrigger">
      <EnumMember name="QAbstractItemView.NoEditTriggers"/>
      <EnumMember name="QAbstractItemView.CurrentChanged"/>
      <EnumMember name="QAbstractItemView.DoubleClicked"/>
      <EnumMember name="QAbstractItemView.SelectedClicked"/>
      <EnumMember name="QAbstractItemView.EditKeyPressed"/>
      <EnumMember name="QAbstractItemView.AnyKeyPressed"/>
      <EnumMember name="QAbstractItemView.AllEditTriggers"/>
    </Enum>
    <Enum name="QAbstractItemView.DragDropMode">
      <EnumMember name="QAbstractItemView.NoDragDrop"/>
      <EnumMember name="QAbstractItemView.DragOnly"/>
      <EnumMember name="QAbstractItemView.DropOnly"/>
      <EnumMember name="QAbstractItemView.DragDrop"/>
      <EnumMember name="QAbstractItemView.InternalMove"/>
    </Enum>
    <Function name="QAbstractItemView.defaultDropAction">
      <Argument typename="Qt.DropAction" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setDefaultDropAction">
      <Argument typename="Qt.DropAction" typetype="enum" name="dropAction"/>
    </Function>
    <Function name="QAbstractItemView.viewportSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QAbstractItemView.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QAbstractItemView.autoScrollMargin">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setAutoScrollMargin">
      <Argument typename="int" name="margin"/>
    </Function>
    <Function name="QAbstractItemView.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
    </Function>
    <Function name="QAbstractItemView.itemDelegateForColumn">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QAbstractItemView.setItemDelegateForColumn">
      <Argument typename="int" name="column"/>
      <Argument typename="QAbstractItemDelegate" typetype="class" name="delegate"/>
    </Function>
    <Function name="QAbstractItemView.itemDelegateForRow">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QAbstractItemView.setItemDelegateForRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QAbstractItemDelegate" typetype="class" name="delegate"/>
    </Function>
    <Function name="QAbstractItemView.dragDropMode">
      <Argument typename="QAbstractItemView.DragDropMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setDragDropMode">
      <Argument typename="QAbstractItemView.DragDropMode" typetype="enum" name="behavior"/>
    </Function>
    <Function name="QAbstractItemView.dragDropOverwriteMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setDragDropOverwriteMode">
      <Argument typename="bool" name="overwrite"/>
    </Function>
    <Function name="QAbstractItemView.horizontalScrollMode">
      <Argument typename="QAbstractItemView.ScrollMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setHorizontalScrollMode">
      <Argument typename="QAbstractItemView.ScrollMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QAbstractItemView.verticalScrollMode">
      <Argument typename="QAbstractItemView.ScrollMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setVerticalScrollMode">
      <Argument typename="QAbstractItemView.ScrollMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QAbstractItemView.dropIndicatorPosition">
      <Argument typename="QAbstractItemView.DropIndicatorPosition" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.viewportEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractItemView.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QAbstractItemView.dirtyRegionOffset">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setDirtyRegion">
      <Argument typename="QRegion" typetype="class" name="region"/>
    </Function>
    <Function name="QAbstractItemView.scrollDirtyRegion">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QAbstractItemView.executeDelayedItemsLayout"/>
    <Function name="QAbstractItemView.scheduleDelayedItemsLayout"/>
    <Function name="QAbstractItemView.setState">
      <Argument typename="QAbstractItemView.State" typetype="enum" name="state"/>
    </Function>
    <Function name="QAbstractItemView.state">
      <Argument typename="QAbstractItemView.State" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.viewOptions" virtual="1">
      <Argument typename="QStyleOptionViewItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.startDrag" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" name="supportedActions"/>
    </Function>
    <Function name="QAbstractItemView.selectionCommand" virtual="1">
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QEvent" typetype="class" name="event" default="None"/>
    </Function>
    <Function name="QAbstractItemView.selectedIndexes" virtual="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.visualRegionForSelection" abstract="1" virtual="1">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QItemSelection" typetype="class" name="selection"/>
    </Function>
    <Function name="QAbstractItemView.setSelection" abstract="1" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QAbstractItemView.isIndexHidden" abstract="1" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.verticalOffset" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.horizontalOffset" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.moveCursor" abstract="1" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QAbstractItemView.CursorAction" typetype="enum" name="cursorAction"/>
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Signal default="1" name="QAbstractItemView.viewportEntered" sig="void viewportEntered()"/>
    <Signal default="1" name="QAbstractItemView.entered" sig="void entered(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QAbstractItemView.activated" sig="void activated(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QAbstractItemView.doubleClicked" sig="void doubleClicked(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QAbstractItemView.clicked" sig="void clicked(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QAbstractItemView.pressed" sig="void pressed(const  ::QModelIndex&amp;)"/>
    <Function name="QAbstractItemView.editorDestroyed" slot="void editorDestroyed( ::QObject*)" virtual="1">
      <Argument typename="QObject" typetype="class" name="editor"/>
    </Function>
    <Function name="QAbstractItemView.commitData" slot="void commitData( ::QWidget*)" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
    </Function>
    <Function name="QAbstractItemView.closeEditor" slot="void closeEditor( ::QWidget*, ::QAbstractItemDelegate::EndEditHint)" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QAbstractItemDelegate.EndEditHint" typetype="enum" name="hint"/>
    </Function>
    <Function name="QAbstractItemView.horizontalScrollbarValueChanged" slot="void horizontalScrollbarValueChanged(int)" virtual="1">
      <Argument typename="int" name="value"/>
    </Function>
    <Function name="QAbstractItemView.verticalScrollbarValueChanged" slot="void verticalScrollbarValueChanged(int)" virtual="1">
      <Argument typename="int" name="value"/>
    </Function>
    <Function name="QAbstractItemView.horizontalScrollbarAction" slot="void horizontalScrollbarAction(int)" virtual="1">
      <Argument typename="int" name="action"/>
    </Function>
    <Function name="QAbstractItemView.verticalScrollbarAction" slot="void verticalScrollbarAction(int)" virtual="1">
      <Argument typename="int" name="action"/>
    </Function>
    <Function name="QAbstractItemView.updateGeometries" slot="void updateGeometries()" virtual="1"/>
    <Function name="QAbstractItemView.updateEditorGeometries" slot="void updateEditorGeometries()" virtual="1"/>
    <Function name="QAbstractItemView.updateEditorData" slot="void updateEditorData()" virtual="1"/>
    <Function name="QAbstractItemView.currentChanged" slot="void currentChanged(const  ::QModelIndex&amp;,const  ::QModelIndex&amp;)" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="current"/>
      <Argument typename="QModelIndex" typetype="class" name="previous"/>
    </Function>
    <Function name="QAbstractItemView.selectionChanged" slot="void selectionChanged(const  ::QItemSelection&amp;,const  ::QItemSelection&amp;)" virtual="1">
      <Argument typename="QItemSelection" typetype="class" name="selected"/>
      <Argument typename="QItemSelection" typetype="class" name="deselected"/>
    </Function>
    <Function name="QAbstractItemView.rowsAboutToBeRemoved" slot="void rowsAboutToBeRemoved(const  ::QModelIndex&amp;,int,int)" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QAbstractItemView.rowsInserted" slot="void rowsInserted(const  ::QModelIndex&amp;,int,int)" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QAbstractItemView.dataChanged" slot="void dataChanged(const  ::QModelIndex&amp;,const  ::QModelIndex&amp;,const QVector&lt;int&gt;&amp; = QVector&lt;int&gt;())" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="topLeft"/>
      <Argument typename="QModelIndex" typetype="class" name="bottomRight"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="roles" default="[]"/>
    </Function>
    <Function name="QAbstractItemView.update" slot="void update()"/>
    <Function name="QAbstractItemView.update" slot="void update(const  ::QModelIndex&amp;)">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.scrollToBottom" slot="void scrollToBottom()"/>
    <Function name="QAbstractItemView.scrollToTop" slot="void scrollToTop()"/>
    <Function name="QAbstractItemView.setCurrentIndex" slot="void setCurrentIndex(const  ::QModelIndex&amp;)">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.clearSelection" slot="void clearSelection()"/>
    <Function name="QAbstractItemView.edit" slot="void edit(const  ::QModelIndex&amp;)">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.edit" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.EditTrigger" typetype="enum" name="trigger"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QAbstractItemView.selectAll" slot="void selectAll()" virtual="1"/>
    <Function name="QAbstractItemView.setRootIndex" slot="void setRootIndex(const  ::QModelIndex&amp;)" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.reset" slot="void reset()" virtual="1"/>
    <Function name="QAbstractItemView.indexWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.setIndexWidget">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QAbstractItemView.closePersistentEditor">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.openPersistentEditor">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.sizeHintForColumn" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QAbstractItemView.sizeHintForRow" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QAbstractItemView.sizeHintForIndex">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.indexAt" abstract="1" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QAbstractItemView.scrollTo" abstract="1" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QAbstractItemView.visualRect" abstract="1" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.keyboardSearch" virtual="1">
      <Argument typename="QString" typetype="mappedtype" name="search"/>
    </Function>
    <Function name="QAbstractItemView.textElideMode">
      <Argument typename="Qt.TextElideMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setTextElideMode">
      <Argument typename="Qt.TextElideMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QAbstractItemView.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setIconSize">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QAbstractItemView.alternatingRowColors">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setAlternatingRowColors">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QAbstractItemView.dragEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setDragEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QAbstractItemView.showDropIndicator">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setDropIndicatorShown">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QAbstractItemView.tabKeyNavigation">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setTabKeyNavigation">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QAbstractItemView.hasAutoScroll">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setAutoScroll">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QAbstractItemView.editTriggers">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setEditTriggers">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" name="triggers"/>
    </Function>
    <Function name="QAbstractItemView.rootIndex">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.currentIndex">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.selectionBehavior">
      <Argument typename="QAbstractItemView.SelectionBehavior" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setSelectionBehavior">
      <Argument typename="QAbstractItemView.SelectionBehavior" typetype="enum" name="behavior"/>
    </Function>
    <Function name="QAbstractItemView.selectionMode">
      <Argument typename="QAbstractItemView.SelectionMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setSelectionMode">
      <Argument typename="QAbstractItemView.SelectionMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QAbstractItemView.itemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.itemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QAbstractItemView.setItemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" name="delegate"/>
    </Function>
    <Function name="QAbstractItemView.selectionModel">
      <Argument typename="QItemSelectionModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setSelectionModel" virtual="1">
      <Argument typename="QItemSelectionModel" typetype="class" name="selectionModel"/>
    </Function>
    <Function name="QAbstractItemView.model">
      <Argument typename="QAbstractItemModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.setModel" virtual="1">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
  </Class>
  <Class name="QAbstractItemView.EditTriggers" convert="1">
    <Function name="QAbstractItemView.EditTriggers.__init__"/>
    <Function name="QAbstractItemView.EditTriggers.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__init__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__ixor__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__xor__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__ior__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__or__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__iand__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__and__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__invert__">
      <Argument typename="QAbstractItemView.EditTriggers" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractItemView.EditTriggers.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractSlider" inherits="QWidget">
    <Function name="QAbstractSlider.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QAbstractSlider.SliderChange">
      <EnumMember name="QAbstractSlider.SliderRangeChange"/>
      <EnumMember name="QAbstractSlider.SliderOrientationChange"/>
      <EnumMember name="QAbstractSlider.SliderStepsChange"/>
      <EnumMember name="QAbstractSlider.SliderValueChange"/>
    </Enum>
    <Enum name="QAbstractSlider.SliderAction">
      <EnumMember name="QAbstractSlider.SliderNoAction"/>
      <EnumMember name="QAbstractSlider.SliderSingleStepAdd"/>
      <EnumMember name="QAbstractSlider.SliderSingleStepSub"/>
      <EnumMember name="QAbstractSlider.SliderPageStepAdd"/>
      <EnumMember name="QAbstractSlider.SliderPageStepSub"/>
      <EnumMember name="QAbstractSlider.SliderToMinimum"/>
      <EnumMember name="QAbstractSlider.SliderToMaximum"/>
      <EnumMember name="QAbstractSlider.SliderMove"/>
    </Enum>
    <Function name="QAbstractSlider.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSlider.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSlider.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class"/>
    </Function>
    <Function name="QAbstractSlider.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QAbstractSlider.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSlider.sliderChange" virtual="1">
      <Argument typename="QAbstractSlider.SliderChange" typetype="enum" name="change"/>
    </Function>
    <Function name="QAbstractSlider.repeatAction">
      <Argument typename="QAbstractSlider.SliderAction" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setRepeatAction">
      <Argument typename="QAbstractSlider.SliderAction" typetype="enum" name="action"/>
      <Argument typename="int" name="thresholdTime" default="500"/>
      <Argument typename="int" name="repeatTime" default="50"/>
    </Function>
    <Signal default="1" name="QAbstractSlider.actionTriggered" sig="void actionTriggered(int)"/>
    <Signal default="1" name="QAbstractSlider.rangeChanged" sig="void rangeChanged(int,int)"/>
    <Signal default="1" name="QAbstractSlider.sliderReleased" sig="void sliderReleased()"/>
    <Signal default="1" name="QAbstractSlider.sliderMoved" sig="void sliderMoved(int)"/>
    <Signal default="1" name="QAbstractSlider.sliderPressed" sig="void sliderPressed()"/>
    <Signal default="1" name="QAbstractSlider.valueChanged" sig="void valueChanged(int)"/>
    <Function name="QAbstractSlider.setOrientation" slot="void setOrientation( ::Qt::Orientation)">
      <Argument typename="Qt.Orientation" typetype="enum"/>
    </Function>
    <Function name="QAbstractSlider.setValue" slot="void setValue(int)">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractSlider.triggerAction">
      <Argument typename="QAbstractSlider.SliderAction" typetype="enum" name="action"/>
    </Function>
    <Function name="QAbstractSlider.value">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.invertedControls">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setInvertedControls">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractSlider.invertedAppearance">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setInvertedAppearance">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractSlider.sliderPosition">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setSliderPosition">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractSlider.isSliderDown">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setSliderDown">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractSlider.hasTracking">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setTracking">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QAbstractSlider.pageStep">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setPageStep">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractSlider.singleStep">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setSingleStep">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractSlider.setRange">
      <Argument typename="int" name="min"/>
      <Argument typename="int" name="max"/>
    </Function>
    <Function name="QAbstractSlider.maximum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setMaximum">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractSlider.minimum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSlider.setMinimum">
      <Argument typename="int"/>
    </Function>
    <Function name="QAbstractSlider.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractSpinBox" inherits="QWidget">
    <Function name="QAbstractSpinBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QAbstractSpinBox.CorrectionMode">
      <EnumMember name="QAbstractSpinBox.CorrectToPreviousValue"/>
      <EnumMember name="QAbstractSpinBox.CorrectToNearestValue"/>
    </Enum>
    <Enum name="QAbstractSpinBox.ButtonSymbols">
      <EnumMember name="QAbstractSpinBox.UpDownArrows"/>
      <EnumMember name="QAbstractSpinBox.PlusMinus"/>
      <EnumMember name="QAbstractSpinBox.NoButtons"/>
    </Enum>
    <Enum name="QAbstractSpinBox.StepEnabledFlag">
      <EnumMember name="QAbstractSpinBox.StepNone"/>
      <EnumMember name="QAbstractSpinBox.StepUpEnabled"/>
      <EnumMember name="QAbstractSpinBox.StepDownEnabled"/>
    </Enum>
    <Function name="QAbstractSpinBox.isGroupSeparatorShown">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setGroupSeparatorShown">
      <Argument typename="bool" name="shown"/>
    </Function>
    <Function name="QAbstractSpinBox.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum"/>
    </Function>
    <Function name="QAbstractSpinBox.keyboardTracking">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setKeyboardTracking">
      <Argument typename="bool" name="kt"/>
    </Function>
    <Function name="QAbstractSpinBox.isAccelerated">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setAccelerated">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QAbstractSpinBox.hasAcceptableInput">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.correctionMode">
      <Argument typename="QAbstractSpinBox.CorrectionMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setCorrectionMode">
      <Argument typename="QAbstractSpinBox.CorrectionMode" typetype="enum" name="cm"/>
    </Function>
    <Function name="QAbstractSpinBox.initStyleOption">
      <Argument typename="QStyleOptionSpinBox" typetype="class" name="option"/>
    </Function>
    <Function name="QAbstractSpinBox.stepEnabled" virtual="1">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setLineEdit">
      <Argument typename="QLineEdit" typetype="class" name="e" transfer="to"/>
    </Function>
    <Function name="QAbstractSpinBox.lineEdit">
      <Argument typename="QLineEdit" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QAbstractSpinBox.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QAbstractSpinBox.editingFinished" sig="void editingFinished()"/>
    <Function name="QAbstractSpinBox.clear" slot="void clear()" virtual="1"/>
    <Function name="QAbstractSpinBox.selectAll" slot="void selectAll()"/>
    <Function name="QAbstractSpinBox.stepDown" slot="void stepDown()"/>
    <Function name="QAbstractSpinBox.stepUp" slot="void stepUp()"/>
    <Function name="QAbstractSpinBox.stepBy" virtual="1">
      <Argument typename="int" name="steps"/>
    </Function>
    <Function name="QAbstractSpinBox.fixup" virtual="1">
      <Argument typename="QString" typetype="mappedtype" name="input" dir="inout"/>
    </Function>
    <Function name="QAbstractSpinBox.validate" virtual="1">
      <Argument typename="QValidator.State" typetype="enum" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="input" dir="inout"/>
      <Argument typename="int" name="pos" dir="inout"/>
    </Function>
    <Function name="QAbstractSpinBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QAbstractSpinBox.interpretText"/>
    <Function name="QAbstractSpinBox.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.hasFrame">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setFrame">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAbstractSpinBox.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="flag"/>
    </Function>
    <Function name="QAbstractSpinBox.isReadOnly">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setReadOnly">
      <Argument typename="bool" name="r"/>
    </Function>
    <Function name="QAbstractSpinBox.setWrapping">
      <Argument typename="bool" name="w"/>
    </Function>
    <Function name="QAbstractSpinBox.wrapping">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setSpecialValueText">
      <Argument typename="QString" typetype="mappedtype" name="s"/>
    </Function>
    <Function name="QAbstractSpinBox.specialValueText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.setButtonSymbols">
      <Argument typename="QAbstractSpinBox.ButtonSymbols" typetype="enum" name="bs"/>
    </Function>
    <Function name="QAbstractSpinBox.buttonSymbols">
      <Argument typename="QAbstractSpinBox.ButtonSymbols" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractSpinBox.StepEnabled" convert="1">
    <Function name="QAbstractSpinBox.StepEnabled.__init__"/>
    <Function name="QAbstractSpinBox.StepEnabled.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__init__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__ixor__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__xor__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__ior__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__or__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__iand__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__and__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__invert__">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractSpinBox.StepEnabled.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QAction" inherits="QObject">
    <Function name="QAction.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QAction.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QAction.__init__">
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Enum name="QAction.Priority">
      <EnumMember name="QAction.LowPriority"/>
      <EnumMember name="QAction.NormalPriority"/>
      <EnumMember name="QAction.HighPriority"/>
    </Enum>
    <Enum name="QAction.MenuRole">
      <EnumMember name="QAction.NoRole"/>
      <EnumMember name="QAction.TextHeuristicRole"/>
      <EnumMember name="QAction.ApplicationSpecificRole"/>
      <EnumMember name="QAction.AboutQtRole"/>
      <EnumMember name="QAction.AboutRole"/>
      <EnumMember name="QAction.PreferencesRole"/>
      <EnumMember name="QAction.QuitRole"/>
    </Enum>
    <Enum name="QAction.ActionEvent">
      <EnumMember name="QAction.Trigger"/>
      <EnumMember name="QAction.Hover"/>
    </Enum>
    <Function name="QAction.priority">
      <Argument typename="QAction.Priority" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAction.setPriority">
      <Argument typename="QAction.Priority" typetype="enum" name="priority"/>
    </Function>
    <Function name="QAction.isIconVisibleInMenu">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.setIconVisibleInMenu">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QAction.associatedGraphicsWidgets">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.associatedWidgets">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.menuRole">
      <Argument typename="QAction.MenuRole" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAction.setMenuRole">
      <Argument typename="QAction.MenuRole" typetype="enum" name="menuRole"/>
    </Function>
    <Function name="QAction.autoRepeat">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.setAutoRepeat">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAction.shortcuts">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.setShortcuts">
      <Argument typename="unknown-type" typetype="mappedtype" name="shortcuts"/>
    </Function>
    <Function name="QAction.setShortcuts">
      <Argument typename="QKeySequence.StandardKey" typetype="enum"/>
    </Function>
    <Signal default="1" name="QAction.toggled" sig="void toggled(bool)"/>
    <Signal default="1" name="QAction.hovered" sig="void hovered()"/>
    <Signal default="1" name="QAction.triggered" sig="void triggered(bool = 0)"/>
    <Signal default="1" name="QAction.changed" sig="void changed()"/>
    <Function name="QAction.setVisible" slot="void setVisible(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAction.setDisabled" slot="void setDisabled(bool)">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QAction.setEnabled" slot="void setEnabled(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAction.toggle" slot="void toggle()"/>
    <Function name="QAction.setChecked" slot="void setChecked(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAction.hover" slot="void hover()"/>
    <Function name="QAction.trigger" slot="void trigger()"/>
    <Function name="QAction.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QAction.parentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.showStatusText">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QAction.activate">
      <Argument typename="QAction.ActionEvent" typetype="enum" name="event"/>
    </Function>
    <Function name="QAction.isVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.isChecked">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.setData">
      <Argument typename="QVariant" typetype="class" name="var"/>
    </Function>
    <Function name="QAction.data">
      <Argument typename="QVariant" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.isCheckable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.setCheckable">
      <Argument typename="bool"/>
    </Function>
    <Function name="QAction.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.setFont">
      <Argument typename="QFont" typetype="class" name="font"/>
    </Function>
    <Function name="QAction.shortcutContext">
      <Argument typename="Qt.ShortcutContext" typetype="enum" dir="out"/>
    </Function>
    <Function name="QAction.setShortcutContext">
      <Argument typename="Qt.ShortcutContext" typetype="enum" name="context"/>
    </Function>
    <Function name="QAction.shortcut">
      <Argument typename="QKeySequence" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.setShortcut">
      <Argument typename="QKeySequence" typetype="class" name="shortcut"/>
    </Function>
    <Function name="QAction.isSeparator">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QAction.setSeparator">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QAction.setMenu">
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QAction.menu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.whatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.setWhatsThis">
      <Argument typename="QString" typetype="mappedtype" name="what"/>
    </Function>
    <Function name="QAction.statusTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.setStatusTip">
      <Argument typename="QString" typetype="mappedtype" name="statusTip"/>
    </Function>
    <Function name="QAction.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.setToolTip">
      <Argument typename="QString" typetype="mappedtype" name="tip"/>
    </Function>
    <Function name="QAction.iconText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.setIconText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QAction.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QAction.setText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QAction.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.setIcon">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QAction.actionGroup">
      <Argument typename="QActionGroup" typetype="class" dir="out"/>
    </Function>
    <Function name="QAction.setActionGroup">
      <Argument typename="QActionGroup" typetype="class" name="group"/>
    </Function>
  </Class>
  <Class name="QActionGroup" inherits="QObject">
    <Function name="QActionGroup.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Signal default="1" name="QActionGroup.hovered" sig="void hovered( ::QAction*)"/>
    <Signal default="1" name="QActionGroup.triggered" sig="void triggered( ::QAction*)"/>
    <Function name="QActionGroup.setExclusive" slot="void setExclusive(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QActionGroup.setVisible" slot="void setVisible(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QActionGroup.setDisabled" slot="void setDisabled(bool)">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QActionGroup.setEnabled" slot="void setEnabled(bool)">
      <Argument typename="bool"/>
    </Function>
    <Function name="QActionGroup.isVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QActionGroup.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QActionGroup.isExclusive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QActionGroup.checkedAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QActionGroup.actions">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QActionGroup.removeAction">
      <Argument typename="QAction" typetype="class" name="a" transfer="back"/>
    </Function>
    <Function name="QActionGroup.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="a" transfer="to"/>
    </Function>
    <Function name="QActionGroup.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QActionGroup.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
  </Class>
  <Class name="QApplication" inherits="QGuiApplication">
    <Function name="QApplication.__init__">
      <Argument typename="list" name="argv"/>
    </Function>
    <Enum name="QApplication.ColorSpec">
      <EnumMember name="QApplication.NormalColor"/>
      <EnumMember name="QApplication.CustomColor"/>
      <EnumMember name="QApplication.ManyColor"/>
    </Enum>
    <Function name="QApplication.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QApplication.setStyleSheet" slot="void setStyleSheet(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="sheet"/>
    </Function>
    <Function name="QApplication.setAutoSipEnabled" slot="void setAutoSipEnabled(const bool)">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QApplication.closeAllWindows" static="1" slot="void closeAllWindows()"/>
    <Function name="QApplication.aboutQt" static="1" slot="void aboutQt()"/>
    <Signal default="1" name="QApplication.focusChanged" sig="void focusChanged( ::QWidget*, ::QWidget*)"/>
    <Function name="QApplication.styleSheet">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QApplication.autoSipEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QApplication.notify" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QApplication.exec" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.exec_" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setEffectEnabled" static="1">
      <Argument typename="Qt.UIEffect" typetype="enum"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QApplication.isEffectEnabled" static="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="Qt.UIEffect" typetype="enum"/>
    </Function>
    <Function name="QApplication.startDragDistance" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setStartDragDistance" static="1">
      <Argument typename="int" name="l"/>
    </Function>
    <Function name="QApplication.startDragTime" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setStartDragTime" static="1">
      <Argument typename="int" name="ms"/>
    </Function>
    <Function name="QApplication.globalStrut" static="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.setGlobalStrut" static="1">
      <Argument typename="QSize" typetype="class"/>
    </Function>
    <Function name="QApplication.wheelScrollLines" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setWheelScrollLines" static="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QApplication.keyboardInputInterval" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setKeyboardInputInterval" static="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QApplication.doubleClickInterval" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setDoubleClickInterval" static="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QApplication.cursorFlashTime" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setCursorFlashTime" static="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QApplication.alert" static="1">
      <Argument typename="QWidget" typetype="class" name="widget"/>
      <Argument typename="int" name="msecs" default="0"/>
    </Function>
    <Function name="QApplication.beep" static="1"/>
    <Function name="QApplication.topLevelAt" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QApplication.topLevelAt" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="x"/>
      <Argument typename="int" name="y"/>
    </Function>
    <Function name="QApplication.widgetAt" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QApplication.widgetAt" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="x"/>
      <Argument typename="int" name="y"/>
    </Function>
    <Function name="QApplication.setActiveWindow" static="1">
      <Argument typename="QWidget" typetype="class" name="act"/>
    </Function>
    <Function name="QApplication.activeWindow" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.focusWidget" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.activeModalWidget" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.activePopupWidget" static="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.desktop" static="1">
      <Argument typename="QDesktopWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.topLevelWidgets" static="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QApplication.allWidgets" static="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QApplication.windowIcon" static="1">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.setWindowIcon" static="1">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QApplication.fontMetrics" static="1">
      <Argument typename="QFontMetrics" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.setFont" static="1">
      <Argument typename="QFont" typetype="class"/>
      <Argument typename="str" name="className" default="None"/>
    </Function>
    <Function name="QApplication.font" static="1">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.font" static="1">
      <Argument typename="QFont" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QApplication.font" static="1">
      <Argument typename="QFont" typetype="class" dir="out"/>
      <Argument typename="str" name="className"/>
    </Function>
    <Function name="QApplication.setPalette" static="1">
      <Argument typename="QPalette" typetype="class"/>
      <Argument typename="str" name="className" default="None"/>
    </Function>
    <Function name="QApplication.palette" static="1">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QApplication.palette" static="1">
      <Argument typename="QPalette" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QApplication.palette" static="1">
      <Argument typename="QPalette" typetype="class" dir="out"/>
      <Argument typename="str" name="className"/>
    </Function>
    <Function name="QApplication.setColorSpec" static="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QApplication.colorSpec" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QApplication.setStyle" static="1">
      <Argument typename="QStyle" typetype="class" transfer="to"/>
    </Function>
    <Function name="QApplication.setStyle" static="1">
      <Argument typename="QStyle" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QApplication.style" static="1">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QLayoutItem">
    <Function name="QLayoutItem.__init__">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="Qt.Alignment()"/>
    </Function>
    <Function name="QLayoutItem.__init__">
      <Argument typename="QLayoutItem" typetype="class"/>
    </Function>
    <Function name="QLayoutItem.controlTypes" virtual="1">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="a"/>
    </Function>
    <Function name="QLayoutItem.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.spacerItem" virtual="1">
      <Argument typename="QSpacerItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.layout" virtual="1">
      <Argument typename="QLayout" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.widget" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.invalidate" virtual="1"/>
    <Function name="QLayoutItem.minimumHeightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QLayoutItem.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QLayoutItem.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLayoutItem.isEmpty" abstract="1" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLayoutItem.geometry" abstract="1" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.setGeometry" abstract="1" virtual="1">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QLayoutItem.expandingDirections" abstract="1" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.maximumSize" abstract="1" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.minimumSize" abstract="1" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayoutItem.sizeHint" abstract="1" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QLayout" inherits="QObject QLayoutItem">
    <Function name="QLayout.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QLayout.__init__"/>
    <Enum name="QLayout.SizeConstraint">
      <EnumMember name="QLayout.SetDefaultConstraint"/>
      <EnumMember name="QLayout.SetNoConstraint"/>
      <EnumMember name="QLayout.SetMinimumSize"/>
      <EnumMember name="QLayout.SetFixedSize"/>
      <EnumMember name="QLayout.SetMaximumSize"/>
      <EnumMember name="QLayout.SetMinAndMaxSize"/>
    </Enum>
    <Function name="QLayout.replaceWidget">
      <Argument typename="QLayoutItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="QWidget" typetype="class" name="from"/>
      <Argument typename="QWidget" typetype="class" name="to" transfer="to"/>
      <Argument typename="Qt.FindChildOptions" typetype="class" name="options" default="Qt.FindChildrenRecursively"/>
    </Function>
    <Function name="QLayout.controlTypes" virtual="1">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.contentsMargins">
      <Argument typename="QMargins" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.contentsRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.getContentsMargins">
      <Argument typename="int" name="left" dir="out"/>
      <Argument typename="int" name="top" dir="out"/>
      <Argument typename="int" name="right" dir="out"/>
      <Argument typename="int" name="bottom" dir="out"/>
    </Function>
    <Function name="QLayout.setContentsMargins">
      <Argument typename="int" name="left"/>
      <Argument typename="int" name="top"/>
      <Argument typename="int" name="right"/>
      <Argument typename="int" name="bottom"/>
    </Function>
    <Function name="QLayout.setContentsMargins">
      <Argument typename="QMargins" typetype="class" name="margins"/>
    </Function>
    <Function name="QLayout.alignmentRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QLayout.addChildWidget">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QLayout.addChildLayout">
      <Argument typename="QLayout" typetype="class" name="l" transfer="to"/>
    </Function>
    <Function name="QLayout.childEvent" virtual="1">
      <Argument typename="QChildEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QLayout.widgetEvent">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QLayout.closestAcceptableSize" static="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
      <Argument typename="QSize" typetype="class" name="s"/>
    </Function>
    <Function name="QLayout.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLayout.setEnabled">
      <Argument typename="bool"/>
    </Function>
    <Function name="QLayout.layout" virtual="1">
      <Argument typename="QLayout" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.totalSizeHint">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.totalMaximumSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.totalMinimumSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.totalHeightForWidth">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="w"/>
    </Function>
    <Function name="QLayout.isEmpty" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLayout.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLayout.count" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLayout.indexOf" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QLayout.takeAt" abstract="1" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QLayout.itemAt" abstract="1" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QLayout.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QLayout.maximumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.expandingDirections" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.removeItem">
      <Argument typename="QLayoutItem" typetype="class" transfer="back"/>
    </Function>
    <Function name="QLayout.removeWidget">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QLayout.addItem" abstract="1" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" transfer="to"/>
    </Function>
    <Function name="QLayout.addWidget">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QLayout.update"/>
    <Function name="QLayout.activate">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLayout.geometry" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.invalidate" virtual="1"/>
    <Function name="QLayout.parentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.menuBar">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QLayout.setMenuBar">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QLayout.sizeConstraint">
      <Argument typename="QLayout.SizeConstraint" typetype="enum" dir="out"/>
    </Function>
    <Function name="QLayout.setSizeConstraint">
      <Argument typename="QLayout.SizeConstraint" typetype="enum"/>
    </Function>
    <Function name="QLayout.setAlignment">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QLayout.setAlignment">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QLayout" typetype="class" name="l"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QLayout.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QLayout.setSpacing">
      <Argument typename="int"/>
    </Function>
    <Function name="QLayout.spacing">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QBoxLayout" inherits="QLayout">
    <Function name="QBoxLayout.__init__">
      <Argument typename="QBoxLayout.Direction" typetype="enum" name="direction"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QBoxLayout.Direction">
      <EnumMember name="QBoxLayout.LeftToRight"/>
      <EnumMember name="QBoxLayout.RightToLeft"/>
      <EnumMember name="QBoxLayout.TopToBottom"/>
      <EnumMember name="QBoxLayout.BottomToTop"/>
      <EnumMember name="QBoxLayout.Down"/>
      <EnumMember name="QBoxLayout.Up"/>
    </Enum>
    <Function name="QBoxLayout.insertItem">
      <Argument typename="int" name="index"/>
      <Argument typename="QLayoutItem" typetype="class" transfer="this"/>
    </Function>
    <Function name="QBoxLayout.stretch">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QBoxLayout.setStretch">
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QBoxLayout.insertSpacerItem">
      <Argument typename="int" name="index"/>
      <Argument typename="QSpacerItem" typetype="class" name="spacerItem" transfer="to"/>
    </Function>
    <Function name="QBoxLayout.addSpacerItem">
      <Argument typename="QSpacerItem" typetype="class" name="spacerItem" transfer="to"/>
    </Function>
    <Function name="QBoxLayout.setSpacing">
      <Argument typename="int" name="spacing"/>
    </Function>
    <Function name="QBoxLayout.spacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QBoxLayout.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QBoxLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QBoxLayout.takeAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QBoxLayout.itemAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QBoxLayout.invalidate" virtual="1"/>
    <Function name="QBoxLayout.expandingDirections" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QBoxLayout.minimumHeightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QBoxLayout.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QBoxLayout.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QBoxLayout.maximumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QBoxLayout.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QBoxLayout.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QBoxLayout.setStretchFactor">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QBoxLayout.setStretchFactor">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QLayout" typetype="class" name="l"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QBoxLayout.insertLayout">
      <Argument typename="int" name="index"/>
      <Argument typename="QLayout" typetype="class" name="layout" transfer="to"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QBoxLayout.insertWidget">
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
      <Argument typename="int" name="stretch" default="0"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="0"/>
    </Function>
    <Function name="QBoxLayout.insertStretch">
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QBoxLayout.insertSpacing">
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="size"/>
    </Function>
    <Function name="QBoxLayout.addItem" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" transfer="to"/>
    </Function>
    <Function name="QBoxLayout.addStrut">
      <Argument typename="int"/>
    </Function>
    <Function name="QBoxLayout.addLayout">
      <Argument typename="QLayout" typetype="class" name="layout" transfer="to"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QBoxLayout.addWidget">
      <Argument typename="QWidget" typetype="class"/>
      <Argument typename="int" name="stretch" default="0"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="0"/>
    </Function>
    <Function name="QBoxLayout.addStretch">
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QBoxLayout.addSpacing">
      <Argument typename="int" name="size"/>
    </Function>
    <Function name="QBoxLayout.setDirection">
      <Argument typename="QBoxLayout.Direction" typetype="enum"/>
    </Function>
    <Function name="QBoxLayout.direction">
      <Argument typename="QBoxLayout.Direction" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QHBoxLayout" inherits="QBoxLayout">
    <Function name="QHBoxLayout.__init__"/>
    <Function name="QHBoxLayout.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
  </Class>
  <Class name="QVBoxLayout" inherits="QBoxLayout">
    <Function name="QVBoxLayout.__init__"/>
    <Function name="QVBoxLayout.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
  </Class>
  <Class name="QButtonGroup" inherits="QObject">
    <Function name="QButtonGroup.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Signal default="1" name="QButtonGroup.buttonToggled" sig="void buttonToggled( ::QAbstractButton*,bool)"/>
    <Signal name="QButtonGroup.buttonToggled" sig="void buttonToggled(int,bool)"/>
    <Signal default="1" name="QButtonGroup.buttonReleased" sig="void buttonReleased( ::QAbstractButton*)"/>
    <Signal name="QButtonGroup.buttonReleased" sig="void buttonReleased(int)"/>
    <Signal default="1" name="QButtonGroup.buttonPressed" sig="void buttonPressed( ::QAbstractButton*)"/>
    <Signal name="QButtonGroup.buttonPressed" sig="void buttonPressed(int)"/>
    <Signal default="1" name="QButtonGroup.buttonClicked" sig="void buttonClicked( ::QAbstractButton*)"/>
    <Signal name="QButtonGroup.buttonClicked" sig="void buttonClicked(int)"/>
    <Function name="QButtonGroup.checkedId">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QButtonGroup.id">
      <Argument typename="int" dir="out"/>
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
    </Function>
    <Function name="QButtonGroup.setId">
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QButtonGroup.checkedButton">
      <Argument typename="QAbstractButton" typetype="class" dir="out"/>
    </Function>
    <Function name="QButtonGroup.button">
      <Argument typename="QAbstractButton" typetype="class" dir="out"/>
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QButtonGroup.buttons">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QButtonGroup.removeButton">
      <Argument typename="QAbstractButton" typetype="class"/>
    </Function>
    <Function name="QButtonGroup.addButton">
      <Argument typename="QAbstractButton" typetype="class"/>
      <Argument typename="int" name="id" default="-1"/>
    </Function>
    <Function name="QButtonGroup.exclusive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QButtonGroup.setExclusive">
      <Argument typename="bool"/>
    </Function>
  </Class>
  <Class name="QCalendarWidget" inherits="QWidget">
    <Function name="QCalendarWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QCalendarWidget.SelectionMode">
      <EnumMember name="QCalendarWidget.NoSelection"/>
      <EnumMember name="QCalendarWidget.SingleSelection"/>
    </Enum>
    <Enum name="QCalendarWidget.VerticalHeaderFormat">
      <EnumMember name="QCalendarWidget.NoVerticalHeader"/>
      <EnumMember name="QCalendarWidget.ISOWeekNumbers"/>
    </Enum>
    <Enum name="QCalendarWidget.HorizontalHeaderFormat">
      <EnumMember name="QCalendarWidget.NoHorizontalHeader"/>
      <EnumMember name="QCalendarWidget.SingleLetterDayNames"/>
      <EnumMember name="QCalendarWidget.ShortDayNames"/>
      <EnumMember name="QCalendarWidget.LongDayNames"/>
    </Enum>
    <Function name="QCalendarWidget.setNavigationBarVisible" slot="void setNavigationBarVisible(bool)">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QCalendarWidget.setDateEditAcceptDelay">
      <Argument typename="int" name="delay"/>
    </Function>
    <Function name="QCalendarWidget.dateEditAcceptDelay">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setDateEditEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QCalendarWidget.isDateEditEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.isNavigationBarVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Signal default="1" name="QCalendarWidget.selectionChanged" sig="void selectionChanged()"/>
    <Signal default="1" name="QCalendarWidget.currentPageChanged" sig="void currentPageChanged(int,int)"/>
    <Signal default="1" name="QCalendarWidget.clicked" sig="void clicked(const  ::QDate&amp;)"/>
    <Signal default="1" name="QCalendarWidget.activated" sig="void activated(const  ::QDate&amp;)"/>
    <Function name="QCalendarWidget.showToday" slot="void showToday()"/>
    <Function name="QCalendarWidget.showSelectedDate" slot="void showSelectedDate()"/>
    <Function name="QCalendarWidget.showPreviousYear" slot="void showPreviousYear()"/>
    <Function name="QCalendarWidget.showPreviousMonth" slot="void showPreviousMonth()"/>
    <Function name="QCalendarWidget.showNextYear" slot="void showNextYear()"/>
    <Function name="QCalendarWidget.showNextMonth" slot="void showNextMonth()"/>
    <Function name="QCalendarWidget.setSelectedDate" slot="void setSelectedDate(const  ::QDate&amp;)">
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QCalendarWidget.setDateRange" slot="void setDateRange(const  ::QDate&amp;,const  ::QDate&amp;)">
      <Argument typename="QDate" typetype="class" name="min"/>
      <Argument typename="QDate" typetype="class" name="max"/>
    </Function>
    <Function name="QCalendarWidget.setCurrentPage" slot="void setCurrentPage(int,int)">
      <Argument typename="int" name="year"/>
      <Argument typename="int" name="month"/>
    </Function>
    <Function name="QCalendarWidget.paintCell" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QCalendarWidget.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QCalendarWidget.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QCalendarWidget.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QCalendarWidget.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="watched"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QCalendarWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QCalendarWidget.updateCells"/>
    <Function name="QCalendarWidget.updateCell">
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QCalendarWidget.setDateTextFormat">
      <Argument typename="QDate" typetype="class" name="date"/>
      <Argument typename="QTextCharFormat" typetype="class" name="color"/>
    </Function>
    <Function name="QCalendarWidget.dateTextFormat">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.dateTextFormat">
      <Argument typename="QTextCharFormat" typetype="class" dir="out"/>
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QCalendarWidget.setWeekdayTextFormat">
      <Argument typename="Qt.DayOfWeek" typetype="enum" name="dayOfWeek"/>
      <Argument typename="QTextCharFormat" typetype="class" name="format"/>
    </Function>
    <Function name="QCalendarWidget.weekdayTextFormat">
      <Argument typename="QTextCharFormat" typetype="class" dir="out"/>
      <Argument typename="Qt.DayOfWeek" typetype="enum" name="dayOfWeek"/>
    </Function>
    <Function name="QCalendarWidget.setHeaderTextFormat">
      <Argument typename="QTextCharFormat" typetype="class" name="format"/>
    </Function>
    <Function name="QCalendarWidget.headerTextFormat">
      <Argument typename="QTextCharFormat" typetype="class" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setVerticalHeaderFormat">
      <Argument typename="QCalendarWidget.VerticalHeaderFormat" typetype="enum" name="format"/>
    </Function>
    <Function name="QCalendarWidget.verticalHeaderFormat">
      <Argument typename="QCalendarWidget.VerticalHeaderFormat" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setHorizontalHeaderFormat">
      <Argument typename="QCalendarWidget.HorizontalHeaderFormat" typetype="enum" name="format"/>
    </Function>
    <Function name="QCalendarWidget.horizontalHeaderFormat">
      <Argument typename="QCalendarWidget.HorizontalHeaderFormat" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setSelectionMode">
      <Argument typename="QCalendarWidget.SelectionMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QCalendarWidget.selectionMode">
      <Argument typename="QCalendarWidget.SelectionMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setGridVisible">
      <Argument typename="bool" name="show"/>
    </Function>
    <Function name="QCalendarWidget.isGridVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setFirstDayOfWeek">
      <Argument typename="Qt.DayOfWeek" typetype="enum" name="dayOfWeek"/>
    </Function>
    <Function name="QCalendarWidget.firstDayOfWeek">
      <Argument typename="Qt.DayOfWeek" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setMaximumDate">
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QCalendarWidget.maximumDate">
      <Argument typename="QDate" typetype="class" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.setMinimumDate">
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QCalendarWidget.minimumDate">
      <Argument typename="QDate" typetype="class" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.monthShown">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.yearShown">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.selectedDate">
      <Argument typename="QDate" typetype="class" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QCalendarWidget.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QCheckBox" inherits="QAbstractButton">
    <Function name="QCheckBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCheckBox.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCheckBox.initStyleOption">
      <Argument typename="QStyleOptionButton" typetype="class" name="option"/>
    </Function>
    <Function name="QCheckBox.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QCheckBox.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QCheckBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QCheckBox.nextCheckState" virtual="1"/>
    <Function name="QCheckBox.checkStateSet" virtual="1"/>
    <Function name="QCheckBox.hitButton" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Signal default="1" name="QCheckBox.stateChanged" sig="void stateChanged(int)"/>
    <Function name="QCheckBox.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QCheckBox.setCheckState">
      <Argument typename="Qt.CheckState" typetype="enum" name="state"/>
    </Function>
    <Function name="QCheckBox.checkState">
      <Argument typename="Qt.CheckState" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCheckBox.isTristate">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QCheckBox.setTristate">
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QCheckBox.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QDialog" inherits="QWidget">
    <Function name="QDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QDialog.DialogCode">
      <EnumMember name="QDialog.Rejected"/>
      <EnumMember name="QDialog.Accepted"/>
    </Enum>
    <Function name="QDialog.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QDialog.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class"/>
    </Function>
    <Function name="QDialog.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QDialog.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QDialog.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class"/>
    </Function>
    <Function name="QDialog.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Signal default="1" name="QDialog.rejected" sig="void rejected()"/>
    <Signal default="1" name="QDialog.finished" sig="void finished(int)"/>
    <Signal default="1" name="QDialog.accepted" sig="void accepted()"/>
    <Function name="QDialog.open" slot="void open()" virtual="1"/>
    <Function name="QDialog.reject" slot="void reject()" virtual="1"/>
    <Function name="QDialog.accept" slot="void accept()" virtual="1"/>
    <Function name="QDialog.done" slot="void done(int)" virtual="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QDialog.exec" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDialog.exec_" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDialog.setResult">
      <Argument typename="int" name="r"/>
    </Function>
    <Function name="QDialog.setModal">
      <Argument typename="bool" name="modal"/>
    </Function>
    <Function name="QDialog.isSizeGripEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDialog.setSizeGripEnabled">
      <Argument typename="bool"/>
    </Function>
    <Function name="QDialog.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QDialog.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QDialog.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QDialog.result">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QColorDialog" inherits="QDialog">
    <Function name="QColorDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QColorDialog.__init__">
      <Argument typename="QColor" typetype="class" name="initial"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QColorDialog.ColorDialogOption">
      <EnumMember name="QColorDialog.ShowAlphaChannel"/>
      <EnumMember name="QColorDialog.NoButtons"/>
      <EnumMember name="QColorDialog.DontUseNativeDialog"/>
    </Enum>
    <Function name="QColorDialog.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QColorDialog.open" virtual="1"/>
    <Function name="QColorDialog.open">
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QColorDialog.options">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QColorDialog.setOptions">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" name="options"/>
    </Function>
    <Function name="QColorDialog.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QColorDialog.ColorDialogOption" typetype="enum" name="option"/>
    </Function>
    <Function name="QColorDialog.setOption">
      <Argument typename="QColorDialog.ColorDialogOption" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QColorDialog.selectedColor">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
    <Function name="QColorDialog.currentColor">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
    <Function name="QColorDialog.setCurrentColor">
      <Argument typename="QColor" typetype="class" name="color"/>
    </Function>
    <Function name="QColorDialog.done" virtual="1">
      <Argument typename="int" name="result"/>
    </Function>
    <Function name="QColorDialog.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QColorDialog.currentColorChanged" sig="void currentColorChanged(const  ::QColor&amp;)"/>
    <Signal default="1" name="QColorDialog.colorSelected" sig="void colorSelected(const  ::QColor&amp;)"/>
    <Function name="QColorDialog.setStandardColor" static="1">
      <Argument typename="int" name="index"/>
      <Argument typename="QColor" typetype="class" name="color"/>
    </Function>
    <Function name="QColorDialog.standardColor" static="1">
      <Argument typename="QColor" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QColorDialog.setCustomColor" static="1">
      <Argument typename="int" name="index"/>
      <Argument typename="QColor" typetype="class" name="color"/>
    </Function>
    <Function name="QColorDialog.customColor" static="1">
      <Argument typename="QColor" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QColorDialog.customCount" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QColorDialog.getColor" static="1">
      <Argument typename="QColor" typetype="class" dir="out"/>
      <Argument typename="QColor" typetype="class" name="initial" default="Qt.white"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="title" default="''"/>
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" name="options" default="QColorDialog.ColorDialogOptions()"/>
    </Function>
  </Class>
  <Class name="QColorDialog.ColorDialogOptions" convert="1">
    <Function name="QColorDialog.ColorDialogOptions.__init__"/>
    <Function name="QColorDialog.ColorDialogOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__init__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__ixor__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__xor__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__ior__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__or__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__iand__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__and__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__invert__">
      <Argument typename="QColorDialog.ColorDialogOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QColorDialog.ColorDialogOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QColumnView" inherits="QAbstractItemView">
    <Function name="QColumnView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QColumnView.currentChanged" slot="void currentChanged(const  ::QModelIndex&amp;,const  ::QModelIndex&amp;)" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="current"/>
      <Argument typename="QModelIndex" typetype="class" name="previous"/>
    </Function>
    <Function name="QColumnView.rowsInserted" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QColumnView.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QColumnView.verticalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QColumnView.horizontalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QColumnView.visualRegionForSelection" virtual="1">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QItemSelection" typetype="class" name="selection"/>
    </Function>
    <Function name="QColumnView.setSelection" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QColumnView.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QColumnView.moveCursor" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QAbstractItemView.CursorAction" typetype="enum" name="cursorAction"/>
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Function name="QColumnView.isIndexHidden" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QColumnView.initializeColumn">
      <Argument typename="QAbstractItemView" typetype="class" name="column"/>
    </Function>
    <Function name="QColumnView.createColumn" virtual="1">
      <Argument typename="QAbstractItemView" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="rootIndex"/>
    </Function>
    <Signal default="1" name="QColumnView.updatePreviewWidget" sig="void updatePreviewWidget(const  ::QModelIndex&amp;)"/>
    <Function name="QColumnView.selectAll" virtual="1"/>
    <Function name="QColumnView.setRootIndex" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QColumnView.setSelectionModel" virtual="1">
      <Argument typename="QItemSelectionModel" typetype="class" name="selectionModel"/>
    </Function>
    <Function name="QColumnView.setModel" virtual="1">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
    <Function name="QColumnView.visualRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QColumnView.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QColumnView.scrollTo" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QColumnView.indexAt" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="point"/>
    </Function>
    <Function name="QColumnView.setResizeGripsVisible">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QColumnView.setPreviewWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QColumnView.setColumnWidths">
      <Argument typename="unknown-type" typetype="mappedtype" name="list"/>
    </Function>
    <Function name="QColumnView.resizeGripsVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QColumnView.previewWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QColumnView.columnWidths">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QComboBox" inherits="QWidget">
    <Function name="QComboBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QComboBox.SizeAdjustPolicy">
      <EnumMember name="QComboBox.AdjustToContents"/>
      <EnumMember name="QComboBox.AdjustToContentsOnFirstShow"/>
      <EnumMember name="QComboBox.AdjustToMinimumContentsLength"/>
      <EnumMember name="QComboBox.AdjustToMinimumContentsLengthWithIcon"/>
    </Enum>
    <Enum name="QComboBox.InsertPolicy">
      <EnumMember name="QComboBox.NoInsert"/>
      <EnumMember name="QComboBox.InsertAtTop"/>
      <EnumMember name="QComboBox.InsertAtCurrent"/>
      <EnumMember name="QComboBox.InsertAtBottom"/>
      <EnumMember name="QComboBox.InsertAfterCurrent"/>
      <EnumMember name="QComboBox.InsertBeforeCurrent"/>
      <EnumMember name="QComboBox.InsertAlphabetically"/>
    </Enum>
    <Function name="QComboBox.currentData">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="role" default="Qt.UserRole"/>
    </Function>
    <Function name="QComboBox.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum"/>
    </Function>
    <Function name="QComboBox.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class"/>
    </Function>
    <Function name="QComboBox.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QComboBox.initStyleOption">
      <Argument typename="QStyleOptionComboBox" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QComboBox.highlighted" sig="void highlighted(int)"/>
    <Signal name="QComboBox.highlighted" sig="void highlighted(const QString&amp;)"/>
    <Signal default="1" name="QComboBox.currentTextChanged" sig="void currentTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QComboBox.currentIndexChanged" sig="void currentIndexChanged(int)"/>
    <Signal name="QComboBox.currentIndexChanged" sig="void currentIndexChanged(const QString&amp;)"/>
    <Signal default="1" name="QComboBox.activated" sig="void activated(int)"/>
    <Signal name="QComboBox.activated" sig="void activated(const QString&amp;)"/>
    <Signal default="1" name="QComboBox.editTextChanged" sig="void editTextChanged(const QString&amp;)"/>
    <Function name="QComboBox.setCurrentText" slot="void setCurrentText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QComboBox.setEditText" slot="void setEditText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QComboBox.clearEditText" slot="void clearEditText()"/>
    <Function name="QComboBox.clear" slot="void clear()"/>
    <Function name="QComboBox.insertSeparator">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QComboBox.completer">
      <Argument typename="QCompleter" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setCompleter">
      <Argument typename="QCompleter" typetype="class" name="c"/>
    </Function>
    <Function name="QComboBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QComboBox.hidePopup" virtual="1"/>
    <Function name="QComboBox.showPopup" virtual="1"/>
    <Function name="QComboBox.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setView">
      <Argument typename="QAbstractItemView" typetype="class" name="itemView" transfer="to"/>
    </Function>
    <Function name="QComboBox.view">
      <Argument typename="QAbstractItemView" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setItemData">
      <Argument typename="int" name="index"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
      <Argument typename="int" name="role" default="Qt.UserRole"/>
    </Function>
    <Function name="QComboBox.setItemIcon">
      <Argument typename="int" name="index"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QComboBox.setItemText">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QComboBox.removeItem">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QComboBox.insertItems">
      <Argument typename="int" name="index"/>
      <Argument typename="QStringList" typetype="mappedtype" name="texts"/>
    </Function>
    <Function name="QComboBox.insertItem">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QVariant" typetype="class" name="userData" default="None"/>
    </Function>
    <Function name="QComboBox.insertItem">
      <Argument typename="int" name="index"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QVariant" typetype="class" name="userData" default="None"/>
    </Function>
    <Function name="QComboBox.addItem">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QVariant" typetype="class" name="userData" default="None"/>
    </Function>
    <Function name="QComboBox.addItem">
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QVariant" typetype="class" name="userData" default="None"/>
    </Function>
    <Function name="QComboBox.addItems">
      <Argument typename="QStringList" typetype="mappedtype" name="texts"/>
    </Function>
    <Function name="QComboBox.itemData">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="role" default="Qt.UserRole"/>
    </Function>
    <Function name="QComboBox.itemIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QComboBox.itemText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QComboBox.currentText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QComboBox.setCurrentIndex">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QComboBox.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QComboBox.setModelColumn">
      <Argument typename="int" name="visibleColumn"/>
    </Function>
    <Function name="QComboBox.modelColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QComboBox.setRootModelIndex">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QComboBox.rootModelIndex">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setModel">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
    <Function name="QComboBox.model">
      <Argument typename="QAbstractItemModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setItemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" name="delegate"/>
    </Function>
    <Function name="QComboBox.itemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.validator">
      <Argument typename="QValidator" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setValidator">
      <Argument typename="QValidator" typetype="class" name="v"/>
    </Function>
    <Function name="QComboBox.lineEdit">
      <Argument typename="QLineEdit" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setLineEdit">
      <Argument typename="QLineEdit" typetype="class" name="edit" transfer="to"/>
    </Function>
    <Function name="QComboBox.setEditable">
      <Argument typename="bool" name="editable"/>
    </Function>
    <Function name="QComboBox.isEditable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QComboBox.setIconSize">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QComboBox.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QComboBox.setMinimumContentsLength">
      <Argument typename="int" name="characters"/>
    </Function>
    <Function name="QComboBox.minimumContentsLength">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QComboBox.setSizeAdjustPolicy">
      <Argument typename="QComboBox.SizeAdjustPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QComboBox.sizeAdjustPolicy">
      <Argument typename="QComboBox.SizeAdjustPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QComboBox.setInsertPolicy">
      <Argument typename="QComboBox.InsertPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QComboBox.insertPolicy">
      <Argument typename="QComboBox.InsertPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QComboBox.findData">
      <Argument typename="int" dir="out"/>
      <Argument typename="QVariant" typetype="class" name="data"/>
      <Argument typename="int" name="role" default="Qt.UserRole"/>
      <Argument typename="Qt.MatchFlags" typetype="class" name="flags" default="Qt.MatchExactly|Qt.MatchCaseSensitive"/>
    </Function>
    <Function name="QComboBox.findText">
      <Argument typename="int" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="Qt.MatchFlags" typetype="class" name="flags" default="Qt.MatchExactly|Qt.MatchCaseSensitive"/>
    </Function>
    <Function name="QComboBox.hasFrame">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QComboBox.setFrame">
      <Argument typename="bool"/>
    </Function>
    <Function name="QComboBox.setDuplicatesEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QComboBox.duplicatesEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QComboBox.maxCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QComboBox.setMaxCount">
      <Argument typename="int" name="max"/>
    </Function>
    <Function name="QComboBox.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QComboBox.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QComboBox.setMaxVisibleItems">
      <Argument typename="int" name="maxItems"/>
    </Function>
    <Function name="QComboBox.maxVisibleItems">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QPushButton" inherits="QAbstractButton">
    <Function name="QPushButton.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QPushButton.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QPushButton.__init__">
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QPushButton.hitButton" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QPushButton.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QPushButton.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QPushButton.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QPushButton.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QPushButton.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPushButton.initStyleOption">
      <Argument typename="QStyleOptionButton" typetype="class" name="option"/>
    </Function>
    <Function name="QPushButton.showMenu" slot="void showMenu()"/>
    <Function name="QPushButton.isFlat">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPushButton.setFlat">
      <Argument typename="bool"/>
    </Function>
    <Function name="QPushButton.menu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QPushButton.setMenu">
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QPushButton.setDefault">
      <Argument typename="bool"/>
    </Function>
    <Function name="QPushButton.isDefault">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPushButton.setAutoDefault">
      <Argument typename="bool"/>
    </Function>
    <Function name="QPushButton.autoDefault">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPushButton.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QPushButton.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QCommandLinkButton" inherits="QPushButton">
    <Function name="QCommandLinkButton.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCommandLinkButton.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCommandLinkButton.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QString" typetype="mappedtype" name="description"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCommandLinkButton.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QCommandLinkButton.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QCommandLinkButton.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QCommandLinkButton.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QCommandLinkButton.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QCommandLinkButton.setDescription">
      <Argument typename="QString" typetype="mappedtype" name="description"/>
    </Function>
    <Function name="QCommandLinkButton.description">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyle" inherits="QObject">
    <Function name="QStyle.__init__"/>
    <Enum name="QStyle.RequestSoftwareInputPanel">
      <EnumMember name="QStyle.RSIP_OnMouseClickAndAlreadyFocused"/>
      <EnumMember name="QStyle.RSIP_OnMouseClick"/>
    </Enum>
    <Enum name="QStyle.StandardPixmap">
      <EnumMember name="QStyle.SP_TitleBarMenuButton"/>
      <EnumMember name="QStyle.SP_TitleBarMinButton"/>
      <EnumMember name="QStyle.SP_TitleBarMaxButton"/>
      <EnumMember name="QStyle.SP_TitleBarCloseButton"/>
      <EnumMember name="QStyle.SP_TitleBarNormalButton"/>
      <EnumMember name="QStyle.SP_TitleBarShadeButton"/>
      <EnumMember name="QStyle.SP_TitleBarUnshadeButton"/>
      <EnumMember name="QStyle.SP_TitleBarContextHelpButton"/>
      <EnumMember name="QStyle.SP_DockWidgetCloseButton"/>
      <EnumMember name="QStyle.SP_MessageBoxInformation"/>
      <EnumMember name="QStyle.SP_MessageBoxWarning"/>
      <EnumMember name="QStyle.SP_MessageBoxCritical"/>
      <EnumMember name="QStyle.SP_MessageBoxQuestion"/>
      <EnumMember name="QStyle.SP_DesktopIcon"/>
      <EnumMember name="QStyle.SP_TrashIcon"/>
      <EnumMember name="QStyle.SP_ComputerIcon"/>
      <EnumMember name="QStyle.SP_DriveFDIcon"/>
      <EnumMember name="QStyle.SP_DriveHDIcon"/>
      <EnumMember name="QStyle.SP_DriveCDIcon"/>
      <EnumMember name="QStyle.SP_DriveDVDIcon"/>
      <EnumMember name="QStyle.SP_DriveNetIcon"/>
      <EnumMember name="QStyle.SP_DirOpenIcon"/>
      <EnumMember name="QStyle.SP_DirClosedIcon"/>
      <EnumMember name="QStyle.SP_DirLinkIcon"/>
      <EnumMember name="QStyle.SP_FileIcon"/>
      <EnumMember name="QStyle.SP_FileLinkIcon"/>
      <EnumMember name="QStyle.SP_ToolBarHorizontalExtensionButton"/>
      <EnumMember name="QStyle.SP_ToolBarVerticalExtensionButton"/>
      <EnumMember name="QStyle.SP_FileDialogStart"/>
      <EnumMember name="QStyle.SP_FileDialogEnd"/>
      <EnumMember name="QStyle.SP_FileDialogToParent"/>
      <EnumMember name="QStyle.SP_FileDialogNewFolder"/>
      <EnumMember name="QStyle.SP_FileDialogDetailedView"/>
      <EnumMember name="QStyle.SP_FileDialogInfoView"/>
      <EnumMember name="QStyle.SP_FileDialogContentsView"/>
      <EnumMember name="QStyle.SP_FileDialogListView"/>
      <EnumMember name="QStyle.SP_FileDialogBack"/>
      <EnumMember name="QStyle.SP_DirIcon"/>
      <EnumMember name="QStyle.SP_DialogOkButton"/>
      <EnumMember name="QStyle.SP_DialogCancelButton"/>
      <EnumMember name="QStyle.SP_DialogHelpButton"/>
      <EnumMember name="QStyle.SP_DialogOpenButton"/>
      <EnumMember name="QStyle.SP_DialogSaveButton"/>
      <EnumMember name="QStyle.SP_DialogCloseButton"/>
      <EnumMember name="QStyle.SP_DialogApplyButton"/>
      <EnumMember name="QStyle.SP_DialogResetButton"/>
      <EnumMember name="QStyle.SP_DialogDiscardButton"/>
      <EnumMember name="QStyle.SP_DialogYesButton"/>
      <EnumMember name="QStyle.SP_DialogNoButton"/>
      <EnumMember name="QStyle.SP_ArrowUp"/>
      <EnumMember name="QStyle.SP_ArrowDown"/>
      <EnumMember name="QStyle.SP_ArrowLeft"/>
      <EnumMember name="QStyle.SP_ArrowRight"/>
      <EnumMember name="QStyle.SP_ArrowBack"/>
      <EnumMember name="QStyle.SP_ArrowForward"/>
      <EnumMember name="QStyle.SP_DirHomeIcon"/>
      <EnumMember name="QStyle.SP_CommandLink"/>
      <EnumMember name="QStyle.SP_VistaShield"/>
      <EnumMember name="QStyle.SP_BrowserReload"/>
      <EnumMember name="QStyle.SP_BrowserStop"/>
      <EnumMember name="QStyle.SP_MediaPlay"/>
      <EnumMember name="QStyle.SP_MediaStop"/>
      <EnumMember name="QStyle.SP_MediaPause"/>
      <EnumMember name="QStyle.SP_MediaSkipForward"/>
      <EnumMember name="QStyle.SP_MediaSkipBackward"/>
      <EnumMember name="QStyle.SP_MediaSeekForward"/>
      <EnumMember name="QStyle.SP_MediaSeekBackward"/>
      <EnumMember name="QStyle.SP_MediaVolume"/>
      <EnumMember name="QStyle.SP_MediaVolumeMuted"/>
      <EnumMember name="QStyle.SP_DirLinkOpenIcon"/>
      <EnumMember name="QStyle.SP_LineEditClearButton"/>
      <EnumMember name="QStyle.SP_CustomBase"/>
    </Enum>
    <Enum name="QStyle.StyleHint">
      <EnumMember name="QStyle.SH_EtchDisabledText"/>
      <EnumMember name="QStyle.SH_DitherDisabledText"/>
      <EnumMember name="QStyle.SH_ScrollBar_MiddleClickAbsolutePosition"/>
      <EnumMember name="QStyle.SH_ScrollBar_ScrollWhenPointerLeavesControl"/>
      <EnumMember name="QStyle.SH_TabBar_SelectMouseType"/>
      <EnumMember name="QStyle.SH_TabBar_Alignment"/>
      <EnumMember name="QStyle.SH_Header_ArrowAlignment"/>
      <EnumMember name="QStyle.SH_Slider_SnapToValue"/>
      <EnumMember name="QStyle.SH_Slider_SloppyKeyEvents"/>
      <EnumMember name="QStyle.SH_ProgressDialog_CenterCancelButton"/>
      <EnumMember name="QStyle.SH_ProgressDialog_TextLabelAlignment"/>
      <EnumMember name="QStyle.SH_PrintDialog_RightAlignButtons"/>
      <EnumMember name="QStyle.SH_MainWindow_SpaceBelowMenuBar"/>
      <EnumMember name="QStyle.SH_FontDialog_SelectAssociatedText"/>
      <EnumMember name="QStyle.SH_Menu_AllowActiveAndDisabled"/>
      <EnumMember name="QStyle.SH_Menu_SpaceActivatesItem"/>
      <EnumMember name="QStyle.SH_Menu_SubMenuPopupDelay"/>
      <EnumMember name="QStyle.SH_ScrollView_FrameOnlyAroundContents"/>
      <EnumMember name="QStyle.SH_MenuBar_AltKeyNavigation"/>
      <EnumMember name="QStyle.SH_ComboBox_ListMouseTracking"/>
      <EnumMember name="QStyle.SH_Menu_MouseTracking"/>
      <EnumMember name="QStyle.SH_MenuBar_MouseTracking"/>
      <EnumMember name="QStyle.SH_ItemView_ChangeHighlightOnFocus"/>
      <EnumMember name="QStyle.SH_Widget_ShareActivation"/>
      <EnumMember name="QStyle.SH_Workspace_FillSpaceOnMaximize"/>
      <EnumMember name="QStyle.SH_ComboBox_Popup"/>
      <EnumMember name="QStyle.SH_TitleBar_NoBorder"/>
      <EnumMember name="QStyle.SH_ScrollBar_StopMouseOverSlider"/>
      <EnumMember name="QStyle.SH_BlinkCursorWhenTextSelected"/>
      <EnumMember name="QStyle.SH_RichText_FullWidthSelection"/>
      <EnumMember name="QStyle.SH_Menu_Scrollable"/>
      <EnumMember name="QStyle.SH_GroupBox_TextLabelVerticalAlignment"/>
      <EnumMember name="QStyle.SH_GroupBox_TextLabelColor"/>
      <EnumMember name="QStyle.SH_Menu_SloppySubMenus"/>
      <EnumMember name="QStyle.SH_Table_GridLineColor"/>
      <EnumMember name="QStyle.SH_LineEdit_PasswordCharacter"/>
      <EnumMember name="QStyle.SH_DialogButtons_DefaultButton"/>
      <EnumMember name="QStyle.SH_ToolBox_SelectedPageTitleBold"/>
      <EnumMember name="QStyle.SH_TabBar_PreferNoArrows"/>
      <EnumMember name="QStyle.SH_ScrollBar_LeftClickAbsolutePosition"/>
      <EnumMember name="QStyle.SH_UnderlineShortcut"/>
      <EnumMember name="QStyle.SH_SpinBox_AnimateButton"/>
      <EnumMember name="QStyle.SH_SpinBox_KeyPressAutoRepeatRate"/>
      <EnumMember name="QStyle.SH_SpinBox_ClickAutoRepeatRate"/>
      <EnumMember name="QStyle.SH_Menu_FillScreenWithScroll"/>
      <EnumMember name="QStyle.SH_ToolTipLabel_Opacity"/>
      <EnumMember name="QStyle.SH_DrawMenuBarSeparator"/>
      <EnumMember name="QStyle.SH_TitleBar_ModifyNotification"/>
      <EnumMember name="QStyle.SH_Button_FocusPolicy"/>
      <EnumMember name="QStyle.SH_MessageBox_UseBorderForButtonSpacing"/>
      <EnumMember name="QStyle.SH_TitleBar_AutoRaise"/>
      <EnumMember name="QStyle.SH_ToolButton_PopupDelay"/>
      <EnumMember name="QStyle.SH_FocusFrame_Mask"/>
      <EnumMember name="QStyle.SH_RubberBand_Mask"/>
      <EnumMember name="QStyle.SH_WindowFrame_Mask"/>
      <EnumMember name="QStyle.SH_SpinControls_DisableOnBounds"/>
      <EnumMember name="QStyle.SH_Dial_BackgroundRole"/>
      <EnumMember name="QStyle.SH_ComboBox_LayoutDirection"/>
      <EnumMember name="QStyle.SH_ItemView_EllipsisLocation"/>
      <EnumMember name="QStyle.SH_ItemView_ShowDecorationSelected"/>
      <EnumMember name="QStyle.SH_ItemView_ActivateItemOnSingleClick"/>
      <EnumMember name="QStyle.SH_ScrollBar_ContextMenu"/>
      <EnumMember name="QStyle.SH_ScrollBar_RollBetweenButtons"/>
      <EnumMember name="QStyle.SH_Slider_StopMouseOverSlider"/>
      <EnumMember name="QStyle.SH_Slider_AbsoluteSetButtons"/>
      <EnumMember name="QStyle.SH_Slider_PageSetButtons"/>
      <EnumMember name="QStyle.SH_Menu_KeyboardSearch"/>
      <EnumMember name="QStyle.SH_TabBar_ElideMode"/>
      <EnumMember name="QStyle.SH_DialogButtonLayout"/>
      <EnumMember name="QStyle.SH_ComboBox_PopupFrameStyle"/>
      <EnumMember name="QStyle.SH_MessageBox_TextInteractionFlags"/>
      <EnumMember name="QStyle.SH_DialogButtonBox_ButtonsHaveIcons"/>
      <EnumMember name="QStyle.SH_SpellCheckUnderlineStyle"/>
      <EnumMember name="QStyle.SH_MessageBox_CenterButtons"/>
      <EnumMember name="QStyle.SH_Menu_SelectionWrap"/>
      <EnumMember name="QStyle.SH_ItemView_MovementWithoutUpdatingSelection"/>
      <EnumMember name="QStyle.SH_ToolTip_Mask"/>
      <EnumMember name="QStyle.SH_FocusFrame_AboveWidget"/>
      <EnumMember name="QStyle.SH_TextControl_FocusIndicatorTextCharFormat"/>
      <EnumMember name="QStyle.SH_WizardStyle"/>
      <EnumMember name="QStyle.SH_ItemView_ArrowKeysNavigateIntoChildren"/>
      <EnumMember name="QStyle.SH_Menu_Mask"/>
      <EnumMember name="QStyle.SH_Menu_FlashTriggeredItem"/>
      <EnumMember name="QStyle.SH_Menu_FadeOutOnHide"/>
      <EnumMember name="QStyle.SH_SpinBox_ClickAutoRepeatThreshold"/>
      <EnumMember name="QStyle.SH_ItemView_PaintAlternatingRowColorsForEmptyArea"/>
      <EnumMember name="QStyle.SH_FormLayoutWrapPolicy"/>
      <EnumMember name="QStyle.SH_TabWidget_DefaultTabPosition"/>
      <EnumMember name="QStyle.SH_ToolBar_Movable"/>
      <EnumMember name="QStyle.SH_FormLayoutFieldGrowthPolicy"/>
      <EnumMember name="QStyle.SH_FormLayoutFormAlignment"/>
      <EnumMember name="QStyle.SH_FormLayoutLabelAlignment"/>
      <EnumMember name="QStyle.SH_ItemView_DrawDelegateFrame"/>
      <EnumMember name="QStyle.SH_TabBar_CloseButtonPosition"/>
      <EnumMember name="QStyle.SH_DockWidget_ButtonsHaveFrame"/>
      <EnumMember name="QStyle.SH_ToolButtonStyle"/>
      <EnumMember name="QStyle.SH_RequestSoftwareInputPanel"/>
      <EnumMember name="QStyle.SH_ListViewExpand_SelectMouseType"/>
      <EnumMember name="QStyle.SH_ScrollBar_Transient"/>
      <EnumMember name="QStyle.SH_Menu_SupportsSections"/>
      <EnumMember name="QStyle.SH_ToolTip_WakeUpDelay"/>
      <EnumMember name="QStyle.SH_ToolTip_FallAsleepDelay"/>
      <EnumMember name="QStyle.SH_Widget_Animate"/>
      <EnumMember name="QStyle.SH_Splitter_OpaqueResize"/>
      <EnumMember name="QStyle.SH_LineEdit_PasswordMaskDelay"/>
      <EnumMember name="QStyle.SH_TabBar_ChangeCurrentDelay"/>
      <EnumMember name="QStyle.SH_CustomBase"/>
    </Enum>
    <Enum name="QStyle.ContentsType">
      <EnumMember name="QStyle.CT_PushButton"/>
      <EnumMember name="QStyle.CT_CheckBox"/>
      <EnumMember name="QStyle.CT_RadioButton"/>
      <EnumMember name="QStyle.CT_ToolButton"/>
      <EnumMember name="QStyle.CT_ComboBox"/>
      <EnumMember name="QStyle.CT_Splitter"/>
      <EnumMember name="QStyle.CT_ProgressBar"/>
      <EnumMember name="QStyle.CT_MenuItem"/>
      <EnumMember name="QStyle.CT_MenuBarItem"/>
      <EnumMember name="QStyle.CT_MenuBar"/>
      <EnumMember name="QStyle.CT_Menu"/>
      <EnumMember name="QStyle.CT_TabBarTab"/>
      <EnumMember name="QStyle.CT_Slider"/>
      <EnumMember name="QStyle.CT_ScrollBar"/>
      <EnumMember name="QStyle.CT_LineEdit"/>
      <EnumMember name="QStyle.CT_SpinBox"/>
      <EnumMember name="QStyle.CT_SizeGrip"/>
      <EnumMember name="QStyle.CT_TabWidget"/>
      <EnumMember name="QStyle.CT_DialogButtons"/>
      <EnumMember name="QStyle.CT_HeaderSection"/>
      <EnumMember name="QStyle.CT_GroupBox"/>
      <EnumMember name="QStyle.CT_MdiControls"/>
      <EnumMember name="QStyle.CT_ItemViewItem"/>
      <EnumMember name="QStyle.CT_CustomBase"/>
    </Enum>
    <Enum name="QStyle.PixelMetric">
      <EnumMember name="QStyle.PM_ButtonMargin"/>
      <EnumMember name="QStyle.PM_ButtonDefaultIndicator"/>
      <EnumMember name="QStyle.PM_MenuButtonIndicator"/>
      <EnumMember name="QStyle.PM_ButtonShiftHorizontal"/>
      <EnumMember name="QStyle.PM_ButtonShiftVertical"/>
      <EnumMember name="QStyle.PM_DefaultFrameWidth"/>
      <EnumMember name="QStyle.PM_SpinBoxFrameWidth"/>
      <EnumMember name="QStyle.PM_ComboBoxFrameWidth"/>
      <EnumMember name="QStyle.PM_MaximumDragDistance"/>
      <EnumMember name="QStyle.PM_ScrollBarExtent"/>
      <EnumMember name="QStyle.PM_ScrollBarSliderMin"/>
      <EnumMember name="QStyle.PM_SliderThickness"/>
      <EnumMember name="QStyle.PM_SliderControlThickness"/>
      <EnumMember name="QStyle.PM_SliderLength"/>
      <EnumMember name="QStyle.PM_SliderTickmarkOffset"/>
      <EnumMember name="QStyle.PM_SliderSpaceAvailable"/>
      <EnumMember name="QStyle.PM_DockWidgetSeparatorExtent"/>
      <EnumMember name="QStyle.PM_DockWidgetHandleExtent"/>
      <EnumMember name="QStyle.PM_DockWidgetFrameWidth"/>
      <EnumMember name="QStyle.PM_TabBarTabOverlap"/>
      <EnumMember name="QStyle.PM_TabBarTabHSpace"/>
      <EnumMember name="QStyle.PM_TabBarTabVSpace"/>
      <EnumMember name="QStyle.PM_TabBarBaseHeight"/>
      <EnumMember name="QStyle.PM_TabBarBaseOverlap"/>
      <EnumMember name="QStyle.PM_ProgressBarChunkWidth"/>
      <EnumMember name="QStyle.PM_SplitterWidth"/>
      <EnumMember name="QStyle.PM_TitleBarHeight"/>
      <EnumMember name="QStyle.PM_MenuScrollerHeight"/>
      <EnumMember name="QStyle.PM_MenuHMargin"/>
      <EnumMember name="QStyle.PM_MenuVMargin"/>
      <EnumMember name="QStyle.PM_MenuPanelWidth"/>
      <EnumMember name="QStyle.PM_MenuTearoffHeight"/>
      <EnumMember name="QStyle.PM_MenuDesktopFrameWidth"/>
      <EnumMember name="QStyle.PM_MenuBarPanelWidth"/>
      <EnumMember name="QStyle.PM_MenuBarItemSpacing"/>
      <EnumMember name="QStyle.PM_MenuBarVMargin"/>
      <EnumMember name="QStyle.PM_MenuBarHMargin"/>
      <EnumMember name="QStyle.PM_IndicatorWidth"/>
      <EnumMember name="QStyle.PM_IndicatorHeight"/>
      <EnumMember name="QStyle.PM_ExclusiveIndicatorWidth"/>
      <EnumMember name="QStyle.PM_ExclusiveIndicatorHeight"/>
      <EnumMember name="QStyle.PM_DialogButtonsSeparator"/>
      <EnumMember name="QStyle.PM_DialogButtonsButtonWidth"/>
      <EnumMember name="QStyle.PM_DialogButtonsButtonHeight"/>
      <EnumMember name="QStyle.PM_MdiSubWindowFrameWidth"/>
      <EnumMember name="QStyle.PM_MDIFrameWidth"/>
      <EnumMember name="QStyle.PM_MdiSubWindowMinimizedWidth"/>
      <EnumMember name="QStyle.PM_MDIMinimizedWidth"/>
      <EnumMember name="QStyle.PM_HeaderMargin"/>
      <EnumMember name="QStyle.PM_HeaderMarkSize"/>
      <EnumMember name="QStyle.PM_HeaderGripMargin"/>
      <EnumMember name="QStyle.PM_TabBarTabShiftHorizontal"/>
      <EnumMember name="QStyle.PM_TabBarTabShiftVertical"/>
      <EnumMember name="QStyle.PM_TabBarScrollButtonWidth"/>
      <EnumMember name="QStyle.PM_ToolBarFrameWidth"/>
      <EnumMember name="QStyle.PM_ToolBarHandleExtent"/>
      <EnumMember name="QStyle.PM_ToolBarItemSpacing"/>
      <EnumMember name="QStyle.PM_ToolBarItemMargin"/>
      <EnumMember name="QStyle.PM_ToolBarSeparatorExtent"/>
      <EnumMember name="QStyle.PM_ToolBarExtensionExtent"/>
      <EnumMember name="QStyle.PM_SpinBoxSliderHeight"/>
      <EnumMember name="QStyle.PM_DefaultTopLevelMargin"/>
      <EnumMember name="QStyle.PM_DefaultChildMargin"/>
      <EnumMember name="QStyle.PM_DefaultLayoutSpacing"/>
      <EnumMember name="QStyle.PM_ToolBarIconSize"/>
      <EnumMember name="QStyle.PM_ListViewIconSize"/>
      <EnumMember name="QStyle.PM_IconViewIconSize"/>
      <EnumMember name="QStyle.PM_SmallIconSize"/>
      <EnumMember name="QStyle.PM_LargeIconSize"/>
      <EnumMember name="QStyle.PM_FocusFrameVMargin"/>
      <EnumMember name="QStyle.PM_FocusFrameHMargin"/>
      <EnumMember name="QStyle.PM_ToolTipLabelFrameWidth"/>
      <EnumMember name="QStyle.PM_CheckBoxLabelSpacing"/>
      <EnumMember name="QStyle.PM_TabBarIconSize"/>
      <EnumMember name="QStyle.PM_SizeGripSize"/>
      <EnumMember name="QStyle.PM_DockWidgetTitleMargin"/>
      <EnumMember name="QStyle.PM_MessageBoxIconSize"/>
      <EnumMember name="QStyle.PM_ButtonIconSize"/>
      <EnumMember name="QStyle.PM_DockWidgetTitleBarButtonMargin"/>
      <EnumMember name="QStyle.PM_RadioButtonLabelSpacing"/>
      <EnumMember name="QStyle.PM_LayoutLeftMargin"/>
      <EnumMember name="QStyle.PM_LayoutTopMargin"/>
      <EnumMember name="QStyle.PM_LayoutRightMargin"/>
      <EnumMember name="QStyle.PM_LayoutBottomMargin"/>
      <EnumMember name="QStyle.PM_LayoutHorizontalSpacing"/>
      <EnumMember name="QStyle.PM_LayoutVerticalSpacing"/>
      <EnumMember name="QStyle.PM_TabBar_ScrollButtonOverlap"/>
      <EnumMember name="QStyle.PM_TextCursorWidth"/>
      <EnumMember name="QStyle.PM_TabCloseIndicatorWidth"/>
      <EnumMember name="QStyle.PM_TabCloseIndicatorHeight"/>
      <EnumMember name="QStyle.PM_ScrollView_ScrollBarSpacing"/>
      <EnumMember name="QStyle.PM_SubMenuOverlap"/>
      <EnumMember name="QStyle.PM_ScrollView_ScrollBarOverlap"/>
      <EnumMember name="QStyle.PM_TreeViewIndentation"/>
      <EnumMember name="QStyle.PM_CustomBase"/>
    </Enum>
    <Enum name="QStyle.SubControl">
      <EnumMember name="QStyle.SC_None"/>
      <EnumMember name="QStyle.SC_ScrollBarAddLine"/>
      <EnumMember name="QStyle.SC_ScrollBarSubLine"/>
      <EnumMember name="QStyle.SC_ScrollBarAddPage"/>
      <EnumMember name="QStyle.SC_ScrollBarSubPage"/>
      <EnumMember name="QStyle.SC_ScrollBarFirst"/>
      <EnumMember name="QStyle.SC_ScrollBarLast"/>
      <EnumMember name="QStyle.SC_ScrollBarSlider"/>
      <EnumMember name="QStyle.SC_ScrollBarGroove"/>
      <EnumMember name="QStyle.SC_SpinBoxUp"/>
      <EnumMember name="QStyle.SC_SpinBoxDown"/>
      <EnumMember name="QStyle.SC_SpinBoxFrame"/>
      <EnumMember name="QStyle.SC_SpinBoxEditField"/>
      <EnumMember name="QStyle.SC_ComboBoxFrame"/>
      <EnumMember name="QStyle.SC_ComboBoxEditField"/>
      <EnumMember name="QStyle.SC_ComboBoxArrow"/>
      <EnumMember name="QStyle.SC_ComboBoxListBoxPopup"/>
      <EnumMember name="QStyle.SC_SliderGroove"/>
      <EnumMember name="QStyle.SC_SliderHandle"/>
      <EnumMember name="QStyle.SC_SliderTickmarks"/>
      <EnumMember name="QStyle.SC_ToolButton"/>
      <EnumMember name="QStyle.SC_ToolButtonMenu"/>
      <EnumMember name="QStyle.SC_TitleBarSysMenu"/>
      <EnumMember name="QStyle.SC_TitleBarMinButton"/>
      <EnumMember name="QStyle.SC_TitleBarMaxButton"/>
      <EnumMember name="QStyle.SC_TitleBarCloseButton"/>
      <EnumMember name="QStyle.SC_TitleBarNormalButton"/>
      <EnumMember name="QStyle.SC_TitleBarShadeButton"/>
      <EnumMember name="QStyle.SC_TitleBarUnshadeButton"/>
      <EnumMember name="QStyle.SC_TitleBarContextHelpButton"/>
      <EnumMember name="QStyle.SC_TitleBarLabel"/>
      <EnumMember name="QStyle.SC_DialGroove"/>
      <EnumMember name="QStyle.SC_DialHandle"/>
      <EnumMember name="QStyle.SC_DialTickmarks"/>
      <EnumMember name="QStyle.SC_GroupBoxCheckBox"/>
      <EnumMember name="QStyle.SC_GroupBoxLabel"/>
      <EnumMember name="QStyle.SC_GroupBoxContents"/>
      <EnumMember name="QStyle.SC_GroupBoxFrame"/>
      <EnumMember name="QStyle.SC_MdiMinButton"/>
      <EnumMember name="QStyle.SC_MdiNormalButton"/>
      <EnumMember name="QStyle.SC_MdiCloseButton"/>
      <EnumMember name="QStyle.SC_CustomBase"/>
      <EnumMember name="QStyle.SC_All"/>
    </Enum>
    <Enum name="QStyle.ComplexControl">
      <EnumMember name="QStyle.CC_SpinBox"/>
      <EnumMember name="QStyle.CC_ComboBox"/>
      <EnumMember name="QStyle.CC_ScrollBar"/>
      <EnumMember name="QStyle.CC_Slider"/>
      <EnumMember name="QStyle.CC_ToolButton"/>
      <EnumMember name="QStyle.CC_TitleBar"/>
      <EnumMember name="QStyle.CC_Dial"/>
      <EnumMember name="QStyle.CC_GroupBox"/>
      <EnumMember name="QStyle.CC_MdiControls"/>
      <EnumMember name="QStyle.CC_CustomBase"/>
    </Enum>
    <Enum name="QStyle.SubElement">
      <EnumMember name="QStyle.SE_PushButtonContents"/>
      <EnumMember name="QStyle.SE_PushButtonFocusRect"/>
      <EnumMember name="QStyle.SE_CheckBoxIndicator"/>
      <EnumMember name="QStyle.SE_CheckBoxContents"/>
      <EnumMember name="QStyle.SE_CheckBoxFocusRect"/>
      <EnumMember name="QStyle.SE_CheckBoxClickRect"/>
      <EnumMember name="QStyle.SE_RadioButtonIndicator"/>
      <EnumMember name="QStyle.SE_RadioButtonContents"/>
      <EnumMember name="QStyle.SE_RadioButtonFocusRect"/>
      <EnumMember name="QStyle.SE_RadioButtonClickRect"/>
      <EnumMember name="QStyle.SE_ComboBoxFocusRect"/>
      <EnumMember name="QStyle.SE_SliderFocusRect"/>
      <EnumMember name="QStyle.SE_ProgressBarGroove"/>
      <EnumMember name="QStyle.SE_ProgressBarContents"/>
      <EnumMember name="QStyle.SE_ProgressBarLabel"/>
      <EnumMember name="QStyle.SE_ToolBoxTabContents"/>
      <EnumMember name="QStyle.SE_HeaderLabel"/>
      <EnumMember name="QStyle.SE_HeaderArrow"/>
      <EnumMember name="QStyle.SE_TabWidgetTabBar"/>
      <EnumMember name="QStyle.SE_TabWidgetTabPane"/>
      <EnumMember name="QStyle.SE_TabWidgetTabContents"/>
      <EnumMember name="QStyle.SE_TabWidgetLeftCorner"/>
      <EnumMember name="QStyle.SE_TabWidgetRightCorner"/>
      <EnumMember name="QStyle.SE_ViewItemCheckIndicator"/>
      <EnumMember name="QStyle.SE_TabBarTearIndicator"/>
      <EnumMember name="QStyle.SE_TreeViewDisclosureItem"/>
      <EnumMember name="QStyle.SE_LineEditContents"/>
      <EnumMember name="QStyle.SE_FrameContents"/>
      <EnumMember name="QStyle.SE_DockWidgetCloseButton"/>
      <EnumMember name="QStyle.SE_DockWidgetFloatButton"/>
      <EnumMember name="QStyle.SE_DockWidgetTitleBarText"/>
      <EnumMember name="QStyle.SE_DockWidgetIcon"/>
      <EnumMember name="QStyle.SE_CheckBoxLayoutItem"/>
      <EnumMember name="QStyle.SE_ComboBoxLayoutItem"/>
      <EnumMember name="QStyle.SE_DateTimeEditLayoutItem"/>
      <EnumMember name="QStyle.SE_DialogButtonBoxLayoutItem"/>
      <EnumMember name="QStyle.SE_LabelLayoutItem"/>
      <EnumMember name="QStyle.SE_ProgressBarLayoutItem"/>
      <EnumMember name="QStyle.SE_PushButtonLayoutItem"/>
      <EnumMember name="QStyle.SE_RadioButtonLayoutItem"/>
      <EnumMember name="QStyle.SE_SliderLayoutItem"/>
      <EnumMember name="QStyle.SE_SpinBoxLayoutItem"/>
      <EnumMember name="QStyle.SE_ToolButtonLayoutItem"/>
      <EnumMember name="QStyle.SE_FrameLayoutItem"/>
      <EnumMember name="QStyle.SE_GroupBoxLayoutItem"/>
      <EnumMember name="QStyle.SE_TabWidgetLayoutItem"/>
      <EnumMember name="QStyle.SE_ItemViewItemCheckIndicator"/>
      <EnumMember name="QStyle.SE_ItemViewItemDecoration"/>
      <EnumMember name="QStyle.SE_ItemViewItemText"/>
      <EnumMember name="QStyle.SE_ItemViewItemFocusRect"/>
      <EnumMember name="QStyle.SE_TabBarTabLeftButton"/>
      <EnumMember name="QStyle.SE_TabBarTabRightButton"/>
      <EnumMember name="QStyle.SE_TabBarTabText"/>
      <EnumMember name="QStyle.SE_ShapedFrameContents"/>
      <EnumMember name="QStyle.SE_ToolBarHandle"/>
      <EnumMember name="QStyle.SE_CustomBase"/>
    </Enum>
    <Enum name="QStyle.ControlElement">
      <EnumMember name="QStyle.CE_PushButton"/>
      <EnumMember name="QStyle.CE_PushButtonBevel"/>
      <EnumMember name="QStyle.CE_PushButtonLabel"/>
      <EnumMember name="QStyle.CE_CheckBox"/>
      <EnumMember name="QStyle.CE_CheckBoxLabel"/>
      <EnumMember name="QStyle.CE_RadioButton"/>
      <EnumMember name="QStyle.CE_RadioButtonLabel"/>
      <EnumMember name="QStyle.CE_TabBarTab"/>
      <EnumMember name="QStyle.CE_TabBarTabShape"/>
      <EnumMember name="QStyle.CE_TabBarTabLabel"/>
      <EnumMember name="QStyle.CE_ProgressBar"/>
      <EnumMember name="QStyle.CE_ProgressBarGroove"/>
      <EnumMember name="QStyle.CE_ProgressBarContents"/>
      <EnumMember name="QStyle.CE_ProgressBarLabel"/>
      <EnumMember name="QStyle.CE_MenuItem"/>
      <EnumMember name="QStyle.CE_MenuScroller"/>
      <EnumMember name="QStyle.CE_MenuVMargin"/>
      <EnumMember name="QStyle.CE_MenuHMargin"/>
      <EnumMember name="QStyle.CE_MenuTearoff"/>
      <EnumMember name="QStyle.CE_MenuEmptyArea"/>
      <EnumMember name="QStyle.CE_MenuBarItem"/>
      <EnumMember name="QStyle.CE_MenuBarEmptyArea"/>
      <EnumMember name="QStyle.CE_ToolButtonLabel"/>
      <EnumMember name="QStyle.CE_Header"/>
      <EnumMember name="QStyle.CE_HeaderSection"/>
      <EnumMember name="QStyle.CE_HeaderLabel"/>
      <EnumMember name="QStyle.CE_ToolBoxTab"/>
      <EnumMember name="QStyle.CE_SizeGrip"/>
      <EnumMember name="QStyle.CE_Splitter"/>
      <EnumMember name="QStyle.CE_RubberBand"/>
      <EnumMember name="QStyle.CE_DockWidgetTitle"/>
      <EnumMember name="QStyle.CE_ScrollBarAddLine"/>
      <EnumMember name="QStyle.CE_ScrollBarSubLine"/>
      <EnumMember name="QStyle.CE_ScrollBarAddPage"/>
      <EnumMember name="QStyle.CE_ScrollBarSubPage"/>
      <EnumMember name="QStyle.CE_ScrollBarSlider"/>
      <EnumMember name="QStyle.CE_ScrollBarFirst"/>
      <EnumMember name="QStyle.CE_ScrollBarLast"/>
      <EnumMember name="QStyle.CE_FocusFrame"/>
      <EnumMember name="QStyle.CE_ComboBoxLabel"/>
      <EnumMember name="QStyle.CE_ToolBar"/>
      <EnumMember name="QStyle.CE_ToolBoxTabShape"/>
      <EnumMember name="QStyle.CE_ToolBoxTabLabel"/>
      <EnumMember name="QStyle.CE_HeaderEmptyArea"/>
      <EnumMember name="QStyle.CE_ColumnViewGrip"/>
      <EnumMember name="QStyle.CE_ItemViewItem"/>
      <EnumMember name="QStyle.CE_ShapedFrame"/>
      <EnumMember name="QStyle.CE_CustomBase"/>
    </Enum>
    <Enum name="QStyle.PrimitiveElement">
      <EnumMember name="QStyle.PE_Frame"/>
      <EnumMember name="QStyle.PE_FrameDefaultButton"/>
      <EnumMember name="QStyle.PE_FrameDockWidget"/>
      <EnumMember name="QStyle.PE_FrameFocusRect"/>
      <EnumMember name="QStyle.PE_FrameGroupBox"/>
      <EnumMember name="QStyle.PE_FrameLineEdit"/>
      <EnumMember name="QStyle.PE_FrameMenu"/>
      <EnumMember name="QStyle.PE_FrameStatusBar"/>
      <EnumMember name="QStyle.PE_FrameTabWidget"/>
      <EnumMember name="QStyle.PE_FrameWindow"/>
      <EnumMember name="QStyle.PE_FrameButtonBevel"/>
      <EnumMember name="QStyle.PE_FrameButtonTool"/>
      <EnumMember name="QStyle.PE_FrameTabBarBase"/>
      <EnumMember name="QStyle.PE_PanelButtonCommand"/>
      <EnumMember name="QStyle.PE_PanelButtonBevel"/>
      <EnumMember name="QStyle.PE_PanelButtonTool"/>
      <EnumMember name="QStyle.PE_PanelMenuBar"/>
      <EnumMember name="QStyle.PE_PanelToolBar"/>
      <EnumMember name="QStyle.PE_PanelLineEdit"/>
      <EnumMember name="QStyle.PE_IndicatorArrowDown"/>
      <EnumMember name="QStyle.PE_IndicatorArrowLeft"/>
      <EnumMember name="QStyle.PE_IndicatorArrowRight"/>
      <EnumMember name="QStyle.PE_IndicatorArrowUp"/>
      <EnumMember name="QStyle.PE_IndicatorBranch"/>
      <EnumMember name="QStyle.PE_IndicatorButtonDropDown"/>
      <EnumMember name="QStyle.PE_IndicatorViewItemCheck"/>
      <EnumMember name="QStyle.PE_IndicatorCheckBox"/>
      <EnumMember name="QStyle.PE_IndicatorDockWidgetResizeHandle"/>
      <EnumMember name="QStyle.PE_IndicatorHeaderArrow"/>
      <EnumMember name="QStyle.PE_IndicatorMenuCheckMark"/>
      <EnumMember name="QStyle.PE_IndicatorProgressChunk"/>
      <EnumMember name="QStyle.PE_IndicatorRadioButton"/>
      <EnumMember name="QStyle.PE_IndicatorSpinDown"/>
      <EnumMember name="QStyle.PE_IndicatorSpinMinus"/>
      <EnumMember name="QStyle.PE_IndicatorSpinPlus"/>
      <EnumMember name="QStyle.PE_IndicatorSpinUp"/>
      <EnumMember name="QStyle.PE_IndicatorToolBarHandle"/>
      <EnumMember name="QStyle.PE_IndicatorToolBarSeparator"/>
      <EnumMember name="QStyle.PE_PanelTipLabel"/>
      <EnumMember name="QStyle.PE_IndicatorTabTear"/>
      <EnumMember name="QStyle.PE_PanelScrollAreaCorner"/>
      <EnumMember name="QStyle.PE_Widget"/>
      <EnumMember name="QStyle.PE_IndicatorColumnViewArrow"/>
      <EnumMember name="QStyle.PE_FrameStatusBarItem"/>
      <EnumMember name="QStyle.PE_IndicatorItemViewItemCheck"/>
      <EnumMember name="QStyle.PE_IndicatorItemViewItemDrop"/>
      <EnumMember name="QStyle.PE_PanelItemViewItem"/>
      <EnumMember name="QStyle.PE_PanelItemViewRow"/>
      <EnumMember name="QStyle.PE_PanelStatusBar"/>
      <EnumMember name="QStyle.PE_IndicatorTabClose"/>
      <EnumMember name="QStyle.PE_PanelMenu"/>
      <EnumMember name="QStyle.PE_CustomBase"/>
    </Enum>
    <Enum name="QStyle.StateFlag">
      <EnumMember name="QStyle.State_None"/>
      <EnumMember name="QStyle.State_Enabled"/>
      <EnumMember name="QStyle.State_Raised"/>
      <EnumMember name="QStyle.State_Sunken"/>
      <EnumMember name="QStyle.State_Off"/>
      <EnumMember name="QStyle.State_NoChange"/>
      <EnumMember name="QStyle.State_On"/>
      <EnumMember name="QStyle.State_DownArrow"/>
      <EnumMember name="QStyle.State_Horizontal"/>
      <EnumMember name="QStyle.State_HasFocus"/>
      <EnumMember name="QStyle.State_Top"/>
      <EnumMember name="QStyle.State_Bottom"/>
      <EnumMember name="QStyle.State_FocusAtBorder"/>
      <EnumMember name="QStyle.State_AutoRaise"/>
      <EnumMember name="QStyle.State_MouseOver"/>
      <EnumMember name="QStyle.State_UpArrow"/>
      <EnumMember name="QStyle.State_Selected"/>
      <EnumMember name="QStyle.State_Active"/>
      <EnumMember name="QStyle.State_Open"/>
      <EnumMember name="QStyle.State_Children"/>
      <EnumMember name="QStyle.State_Item"/>
      <EnumMember name="QStyle.State_Sibling"/>
      <EnumMember name="QStyle.State_Editing"/>
      <EnumMember name="QStyle.State_KeyboardFocusChange"/>
      <EnumMember name="QStyle.State_ReadOnly"/>
      <EnumMember name="QStyle.State_Window"/>
      <EnumMember name="QStyle.State_Small"/>
      <EnumMember name="QStyle.State_Mini"/>
    </Enum>
    <Function name="QStyle.proxy">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyle.combinedLayoutSpacing">
      <Argument typename="int" dir="out"/>
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" name="controls1"/>
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" name="controls2"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.layoutSpacing" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="control1"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="control2"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.alignedRect" static="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="Qt.LayoutDirection" typetype="enum" name="direction"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
      <Argument typename="QSize" typetype="class" name="size"/>
      <Argument typename="QRect" typetype="class" name="rectangle"/>
    </Function>
    <Function name="QStyle.visualAlignment" static="1">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
      <Argument typename="Qt.LayoutDirection" typetype="enum" name="direction"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QStyle.sliderValueFromPosition" static="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="min"/>
      <Argument typename="int" name="max"/>
      <Argument typename="int" name="position"/>
      <Argument typename="int" name="span"/>
      <Argument typename="bool" name="upsideDown" default="False"/>
    </Function>
    <Function name="QStyle.sliderPositionFromValue" static="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="min"/>
      <Argument typename="int" name="max"/>
      <Argument typename="int" name="logicalValue"/>
      <Argument typename="int" name="span"/>
      <Argument typename="bool" name="upsideDown" default="False"/>
    </Function>
    <Function name="QStyle.visualPos" static="1">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="Qt.LayoutDirection" typetype="enum" name="direction"/>
      <Argument typename="QRect" typetype="class" name="boundingRect"/>
      <Argument typename="QPoint" typetype="class" name="logicalPos"/>
    </Function>
    <Function name="QStyle.visualRect" static="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="Qt.LayoutDirection" typetype="enum" name="direction"/>
      <Argument typename="QRect" typetype="class" name="boundingRect"/>
      <Argument typename="QRect" typetype="class" name="logicalRect"/>
    </Function>
    <Function name="QStyle.generatedIconPixmap" abstract="1" virtual="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QIcon.Mode" typetype="enum" name="iconMode"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
    </Function>
    <Function name="QStyle.standardIcon" abstract="1" virtual="1">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QStyle.StandardPixmap" typetype="enum" name="standardIcon"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.standardPixmap" abstract="1" virtual="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QStyle.StandardPixmap" typetype="enum" name="standardPixmap"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.styleHint" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QStyle.StyleHint" typetype="enum" name="stylehint"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
      <Argument typename="QStyleHintReturn" typetype="class" name="returnData" default="None"/>
    </Function>
    <Function name="QStyle.sizeFromContents" abstract="1" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QStyle.ContentsType" typetype="enum" name="ct"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QSize" typetype="class" name="contentsSize"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.pixelMetric" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QStyle.PixelMetric" typetype="enum" name="metric"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.subControlRect" abstract="1" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QStyle.SubControl" typetype="enum" name="sc"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.hitTestComplexControl" abstract="1" virtual="1">
      <Argument typename="QStyle.SubControl" typetype="enum" dir="out"/>
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QPoint" typetype="class" name="pt"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.drawComplexControl" abstract="1" virtual="1">
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QPainter" typetype="class" name="p"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.subElementRect" abstract="1" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QStyle.SubElement" typetype="enum" name="subElement"/>
      <Argument typename="QStyleOption" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.drawControl" abstract="1" virtual="1">
      <Argument typename="QStyle.ControlElement" typetype="enum" name="element"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QPainter" typetype="class" name="p"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.drawPrimitive" abstract="1" virtual="1">
      <Argument typename="QStyle.PrimitiveElement" typetype="enum" name="pe"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QPainter" typetype="class" name="p"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QStyle.standardPalette" virtual="1">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyle.drawItemPixmap" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="int" name="alignment"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QStyle.drawItemText" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rectangle"/>
      <Argument typename="int" name="alignment"/>
      <Argument typename="QPalette" typetype="class" name="palette"/>
      <Argument typename="bool" name="enabled"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QPalette.ColorRole" typetype="enum" name="textRole" default="QPalette.NoRole"/>
    </Function>
    <Function name="QStyle.itemPixmapRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QRect" typetype="class" name="r"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QStyle.itemTextRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QFontMetrics" typetype="class" name="fm"/>
      <Argument typename="QRect" typetype="class" name="r"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="bool" name="enabled"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QStyle.unpolish" virtual="1">
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QStyle.unpolish" virtual="1">
      <Argument typename="QApplication" typetype="class"/>
    </Function>
    <Function name="QStyle.polish" virtual="1">
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QStyle.polish" virtual="1">
      <Argument typename="QApplication" typetype="class"/>
    </Function>
    <Function name="QStyle.polish" virtual="1">
      <Argument typename="QPalette" typetype="class" dir="inout"/>
    </Function>
  </Class>
  <Class name="QCommonStyle" inherits="QStyle">
    <Function name="QCommonStyle.__init__"/>
    <Function name="QCommonStyle.layoutSpacing" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="control1"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="control2"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.standardIcon" virtual="1">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QStyle.StandardPixmap" typetype="enum" name="standardIcon"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.generatedIconPixmap" virtual="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QIcon.Mode" typetype="enum" name="iconMode"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
    </Function>
    <Function name="QCommonStyle.standardPixmap" virtual="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QStyle.StandardPixmap" typetype="enum" name="sp"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.styleHint" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QStyle.StyleHint" typetype="enum" name="sh"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
      <Argument typename="QStyleHintReturn" typetype="class" name="returnData" default="None"/>
    </Function>
    <Function name="QCommonStyle.pixelMetric" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QStyle.PixelMetric" typetype="enum" name="m"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.sizeFromContents" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QStyle.ContentsType" typetype="enum" name="ct"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QSize" typetype="class" name="contentsSize"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.subControlRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QStyle.SubControl" typetype="enum" name="sc"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.hitTestComplexControl" virtual="1">
      <Argument typename="QStyle.SubControl" typetype="enum" dir="out"/>
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QPoint" typetype="class" name="pt"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.drawComplexControl" virtual="1">
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QPainter" typetype="class" name="p"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.subElementRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QStyle.SubElement" typetype="enum" name="r"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.drawControl" virtual="1">
      <Argument typename="QStyle.ControlElement" typetype="enum" name="element"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QPainter" typetype="class" name="p"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.drawPrimitive" virtual="1">
      <Argument typename="QStyle.PrimitiveElement" typetype="enum" name="pe"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QPainter" typetype="class" name="p"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QCommonStyle.unpolish" virtual="1">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QCommonStyle.unpolish" virtual="1">
      <Argument typename="QApplication" typetype="class" name="application"/>
    </Function>
    <Function name="QCommonStyle.polish" virtual="1">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QCommonStyle.polish" virtual="1">
      <Argument typename="QApplication" typetype="class" name="app"/>
    </Function>
    <Function name="QCommonStyle.polish" virtual="1">
      <Argument typename="QPalette" typetype="class" dir="inout"/>
    </Function>
  </Class>
  <Class name="QCompleter" inherits="QObject">
    <Function name="QCompleter.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCompleter.__init__">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QCompleter.__init__">
      <Argument typename="QStringList" typetype="mappedtype" name="list"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QCompleter.ModelSorting">
      <EnumMember name="QCompleter.UnsortedModel"/>
      <EnumMember name="QCompleter.CaseSensitivelySortedModel"/>
      <EnumMember name="QCompleter.CaseInsensitivelySortedModel"/>
    </Enum>
    <Enum name="QCompleter.CompletionMode">
      <EnumMember name="QCompleter.PopupCompletion"/>
      <EnumMember name="QCompleter.UnfilteredPopupCompletion"/>
      <EnumMember name="QCompleter.InlineCompletion"/>
    </Enum>
    <Function name="QCompleter.filterMode">
      <Argument typename="Qt.MatchFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QCompleter.setFilterMode">
      <Argument typename="Qt.MatchFlags" typetype="class" name="filterMode"/>
    </Function>
    <Function name="QCompleter.setMaxVisibleItems">
      <Argument typename="int" name="maxItems"/>
    </Function>
    <Function name="QCompleter.maxVisibleItems">
      <Argument typename="int" dir="out"/>
    </Function>
    <Signal default="1" name="QCompleter.highlighted" sig="void highlighted(const QString&amp;)"/>
    <Signal name="QCompleter.highlighted" sig="void highlighted(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QCompleter.activated" sig="void activated(const QString&amp;)"/>
    <Signal name="QCompleter.activated" sig="void activated(const  ::QModelIndex&amp;)"/>
    <Function name="QCompleter.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QCompleter.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="o"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QCompleter.setWrapAround" slot="void setWrapAround(bool)">
      <Argument typename="bool" name="wrap"/>
    </Function>
    <Function name="QCompleter.setCompletionPrefix" slot="void setCompletionPrefix(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="prefix"/>
    </Function>
    <Function name="QCompleter.complete" slot="void complete(const  ::QRect&amp; = QRect())">
      <Argument typename="QRect" typetype="class" name="rect" default="QRect()"/>
    </Function>
    <Function name="QCompleter.wrapAround">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QCompleter.splitPath" virtual="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="path"/>
    </Function>
    <Function name="QCompleter.pathFromIndex" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QCompleter.completionPrefix">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QCompleter.completionModel">
      <Argument typename="QAbstractItemModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QCompleter.currentCompletion">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QCompleter.currentIndex">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
    </Function>
    <Function name="QCompleter.currentRow">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCompleter.setCurrentRow">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QCompleter.completionCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCompleter.completionRole">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCompleter.setCompletionRole">
      <Argument typename="int" name="role"/>
    </Function>
    <Function name="QCompleter.completionColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QCompleter.setCompletionColumn">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QCompleter.modelSorting">
      <Argument typename="QCompleter.ModelSorting" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCompleter.setModelSorting">
      <Argument typename="QCompleter.ModelSorting" typetype="enum" name="sorting"/>
    </Function>
    <Function name="QCompleter.caseSensitivity">
      <Argument typename="Qt.CaseSensitivity" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCompleter.setCaseSensitivity">
      <Argument typename="Qt.CaseSensitivity" typetype="enum" name="caseSensitivity"/>
    </Function>
    <Function name="QCompleter.setPopup">
      <Argument typename="QAbstractItemView" typetype="class" name="popup" transfer="to"/>
    </Function>
    <Function name="QCompleter.popup">
      <Argument typename="QAbstractItemView" typetype="class" dir="out"/>
    </Function>
    <Function name="QCompleter.completionMode">
      <Argument typename="QCompleter.CompletionMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QCompleter.setCompletionMode">
      <Argument typename="QCompleter.CompletionMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QCompleter.model">
      <Argument typename="QAbstractItemModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QCompleter.setModel">
      <Argument typename="QAbstractItemModel" typetype="class" name="c"/>
    </Function>
    <Function name="QCompleter.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QCompleter.setWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
  </Class>
  <Class name="QDataWidgetMapper" inherits="QObject">
    <Function name="QDataWidgetMapper.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QDataWidgetMapper.SubmitPolicy">
      <EnumMember name="QDataWidgetMapper.AutoSubmit"/>
      <EnumMember name="QDataWidgetMapper.ManualSubmit"/>
    </Enum>
    <Signal default="1" name="QDataWidgetMapper.currentIndexChanged" sig="void currentIndexChanged(int)"/>
    <Function name="QDataWidgetMapper.toPrevious" slot="void toPrevious()"/>
    <Function name="QDataWidgetMapper.toNext" slot="void toNext()"/>
    <Function name="QDataWidgetMapper.toLast" slot="void toLast()"/>
    <Function name="QDataWidgetMapper.toFirst" slot="void toFirst()"/>
    <Function name="QDataWidgetMapper.submit" slot="bool submit()">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.setCurrentModelIndex" slot="void setCurrentModelIndex(const  ::QModelIndex&amp;)">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDataWidgetMapper.setCurrentIndex" slot="void setCurrentIndex(int)" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QDataWidgetMapper.revert" slot="void revert()"/>
    <Function name="QDataWidgetMapper.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.clearMapping"/>
    <Function name="QDataWidgetMapper.mappedWidgetAt">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="section"/>
    </Function>
    <Function name="QDataWidgetMapper.mappedSection">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QDataWidgetMapper.mappedPropertyName">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QDataWidgetMapper.removeMapping">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QDataWidgetMapper.addMapping">
      <Argument typename="QWidget" typetype="class" name="widget"/>
      <Argument typename="int" name="section"/>
    </Function>
    <Function name="QDataWidgetMapper.addMapping">
      <Argument typename="QWidget" typetype="class" name="widget"/>
      <Argument typename="int" name="section"/>
      <Argument typename="QByteArray" typetype="class" name="propertyName"/>
    </Function>
    <Function name="QDataWidgetMapper.submitPolicy">
      <Argument typename="QDataWidgetMapper.SubmitPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.setSubmitPolicy">
      <Argument typename="QDataWidgetMapper.SubmitPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QDataWidgetMapper.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.setOrientation">
      <Argument typename="Qt.Orientation" typetype="enum" name="aOrientation"/>
    </Function>
    <Function name="QDataWidgetMapper.rootIndex">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.setRootIndex">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDataWidgetMapper.itemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.setItemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" name="delegate"/>
    </Function>
    <Function name="QDataWidgetMapper.model">
      <Argument typename="QAbstractItemModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QDataWidgetMapper.setModel">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
  </Class>
  <Class name="QDateTimeEdit" inherits="QAbstractSpinBox">
    <Function name="QDateTimeEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDateTimeEdit.__init__">
      <Argument typename="QDateTime" typetype="class" name="datetime"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDateTimeEdit.__init__">
      <Argument typename="QDate" typetype="class" name="date"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDateTimeEdit.__init__">
      <Argument typename="QTime" typetype="class" name="time"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QDateTimeEdit.Section">
      <EnumMember name="QDateTimeEdit.NoSection"/>
      <EnumMember name="QDateTimeEdit.AmPmSection"/>
      <EnumMember name="QDateTimeEdit.MSecSection"/>
      <EnumMember name="QDateTimeEdit.SecondSection"/>
      <EnumMember name="QDateTimeEdit.MinuteSection"/>
      <EnumMember name="QDateTimeEdit.HourSection"/>
      <EnumMember name="QDateTimeEdit.DaySection"/>
      <EnumMember name="QDateTimeEdit.MonthSection"/>
      <EnumMember name="QDateTimeEdit.YearSection"/>
      <EnumMember name="QDateTimeEdit.TimeSections_Mask"/>
      <EnumMember name="QDateTimeEdit.DateSections_Mask"/>
    </Enum>
    <Function name="QDateTimeEdit.setTimeSpec">
      <Argument typename="Qt.TimeSpec" typetype="enum" name="spec"/>
    </Function>
    <Function name="QDateTimeEdit.timeSpec">
      <Argument typename="Qt.TimeSpec" typetype="enum" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setCalendarWidget">
      <Argument typename="QCalendarWidget" typetype="class" name="calendarWidget" transfer="to"/>
    </Function>
    <Function name="QDateTimeEdit.calendarWidget">
      <Argument typename="QCalendarWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setDateTimeRange">
      <Argument typename="QDateTime" typetype="class" name="min"/>
      <Argument typename="QDateTime" typetype="class" name="max"/>
    </Function>
    <Function name="QDateTimeEdit.setMaximumDateTime">
      <Argument typename="QDateTime" typetype="class" name="dt"/>
    </Function>
    <Function name="QDateTimeEdit.clearMaximumDateTime"/>
    <Function name="QDateTimeEdit.maximumDateTime">
      <Argument typename="QDateTime" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setMinimumDateTime">
      <Argument typename="QDateTime" typetype="class" name="dt"/>
    </Function>
    <Function name="QDateTimeEdit.clearMinimumDateTime"/>
    <Function name="QDateTimeEdit.minimumDateTime">
      <Argument typename="QDateTime" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.stepEnabled" virtual="1">
      <Argument typename="QAbstractSpinBox.StepEnabled" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.textFromDateTime" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QDateTime" typetype="class" name="dt"/>
    </Function>
    <Function name="QDateTimeEdit.dateTimeFromText" virtual="1">
      <Argument typename="QDateTime" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QDateTimeEdit.fixup" virtual="1">
      <Argument typename="QString" typetype="mappedtype" name="input" dir="inout"/>
    </Function>
    <Function name="QDateTimeEdit.validate" virtual="1">
      <Argument typename="QValidator.State" typetype="enum" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="input" dir="inout"/>
      <Argument typename="int" name="pos" dir="inout"/>
    </Function>
    <Function name="QDateTimeEdit.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDateTimeEdit.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDateTimeEdit.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QDateTimeEdit.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QDateTimeEdit.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QDateTimeEdit.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QDateTimeEdit.initStyleOption">
      <Argument typename="QStyleOptionSpinBox" typetype="class" name="option"/>
    </Function>
    <Function name="QDateTimeEdit.setTime" slot="void setTime(const  ::QTime&amp;)">
      <Argument typename="QTime" typetype="class" name="time"/>
    </Function>
    <Function name="QDateTimeEdit.setDate" slot="void setDate(const  ::QDate&amp;)">
      <Argument typename="QDate" typetype="class" name="date"/>
    </Function>
    <Function name="QDateTimeEdit.setDateTime" slot="void setDateTime(const  ::QDateTime&amp;)">
      <Argument typename="QDateTime" typetype="class" name="dateTime"/>
    </Function>
    <Signal default="1" name="QDateTimeEdit.dateChanged" sig="void dateChanged(const  ::QDate&amp;)"/>
    <Signal default="1" name="QDateTimeEdit.timeChanged" sig="void timeChanged(const  ::QTime&amp;)"/>
    <Signal default="1" name="QDateTimeEdit.dateTimeChanged" sig="void dateTimeChanged(const  ::QDateTime&amp;)"/>
    <Function name="QDateTimeEdit.sectionCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setCurrentSectionIndex">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QDateTimeEdit.currentSectionIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.sectionAt">
      <Argument typename="QDateTimeEdit.Section" typetype="enum" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QDateTimeEdit.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QDateTimeEdit.stepBy" virtual="1">
      <Argument typename="int" name="steps"/>
    </Function>
    <Function name="QDateTimeEdit.clear" virtual="1"/>
    <Function name="QDateTimeEdit.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setSelectedSection">
      <Argument typename="QDateTimeEdit.Section" typetype="enum" name="section"/>
    </Function>
    <Function name="QDateTimeEdit.setCalendarPopup">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QDateTimeEdit.calendarPopup">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setDisplayFormat">
      <Argument typename="QString" typetype="mappedtype" name="format"/>
    </Function>
    <Function name="QDateTimeEdit.displayFormat">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.sectionText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QDateTimeEdit.Section" typetype="enum" name="s"/>
    </Function>
    <Function name="QDateTimeEdit.setCurrentSection">
      <Argument typename="QDateTimeEdit.Section" typetype="enum" name="section"/>
    </Function>
    <Function name="QDateTimeEdit.currentSection">
      <Argument typename="QDateTimeEdit.Section" typetype="enum" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.displayedSections">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setTimeRange">
      <Argument typename="QTime" typetype="class" name="min"/>
      <Argument typename="QTime" typetype="class" name="max"/>
    </Function>
    <Function name="QDateTimeEdit.clearMaximumTime"/>
    <Function name="QDateTimeEdit.setMaximumTime">
      <Argument typename="QTime" typetype="class" name="max"/>
    </Function>
    <Function name="QDateTimeEdit.maximumTime">
      <Argument typename="QTime" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.clearMinimumTime"/>
    <Function name="QDateTimeEdit.setMinimumTime">
      <Argument typename="QTime" typetype="class" name="min"/>
    </Function>
    <Function name="QDateTimeEdit.minimumTime">
      <Argument typename="QTime" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.setDateRange">
      <Argument typename="QDate" typetype="class" name="min"/>
      <Argument typename="QDate" typetype="class" name="max"/>
    </Function>
    <Function name="QDateTimeEdit.clearMaximumDate"/>
    <Function name="QDateTimeEdit.setMaximumDate">
      <Argument typename="QDate" typetype="class" name="max"/>
    </Function>
    <Function name="QDateTimeEdit.maximumDate">
      <Argument typename="QDate" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.clearMinimumDate"/>
    <Function name="QDateTimeEdit.setMinimumDate">
      <Argument typename="QDate" typetype="class" name="min"/>
    </Function>
    <Function name="QDateTimeEdit.minimumDate">
      <Argument typename="QDate" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.time">
      <Argument typename="QTime" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.date">
      <Argument typename="QDate" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.dateTime">
      <Argument typename="QDateTime" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QDateTimeEdit.Sections" convert="1">
    <Function name="QDateTimeEdit.Sections.__init__"/>
    <Function name="QDateTimeEdit.Sections.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__init__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDateTimeEdit.Sections" typetype="class" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDateTimeEdit.Sections" typetype="class" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__ixor__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__xor__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__ior__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__or__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__iand__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__and__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__invert__">
      <Argument typename="QDateTimeEdit.Sections" typetype="class" dir="out"/>
    </Function>
    <Function name="QDateTimeEdit.Sections.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QTimeEdit" inherits="QDateTimeEdit">
    <Function name="QTimeEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTimeEdit.__init__">
      <Argument typename="QTime" typetype="class" name="time"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
  </Class>
  <Class name="QDateEdit" inherits="QDateTimeEdit">
    <Function name="QDateEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDateEdit.__init__">
      <Argument typename="QDate" typetype="class" name="date"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
  </Class>
  <Class name="QDesktopWidget" inherits="QWidget">
    <Function name="QDesktopWidget.__init__"/>
    <Function name="QDesktopWidget.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QDesktopWidget.screenCountChanged" sig="void screenCountChanged(int)"/>
    <Signal default="1" name="QDesktopWidget.workAreaResized" sig="void workAreaResized(int)"/>
    <Signal default="1" name="QDesktopWidget.resized" sig="void resized(int)"/>
    <Function name="QDesktopWidget.availableGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="int" name="screen" default="-1"/>
    </Function>
    <Function name="QDesktopWidget.availableGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QDesktopWidget.availableGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="point"/>
    </Function>
    <Function name="QDesktopWidget.screenGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="int" name="screen" default="-1"/>
    </Function>
    <Function name="QDesktopWidget.screenGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QDesktopWidget.screenGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="point"/>
    </Function>
    <Function name="QDesktopWidget.screenCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDesktopWidget.screen">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="screen" default="-1"/>
    </Function>
    <Function name="QDesktopWidget.screenNumber">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QDesktopWidget.screenNumber">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QDesktopWidget.primaryScreen">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDesktopWidget.isVirtualDesktop">
      <Argument typename="bool" dir="out"/>
    </Function>
  </Class>
  <Class name="QDial" inherits="QAbstractSlider">
    <Function name="QDial.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDial.sliderChange" virtual="1">
      <Argument typename="QAbstractSlider.SliderChange" typetype="enum" name="change"/>
    </Function>
    <Function name="QDial.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="me"/>
    </Function>
    <Function name="QDial.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="me"/>
    </Function>
    <Function name="QDial.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="me"/>
    </Function>
    <Function name="QDial.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="pe"/>
    </Function>
    <Function name="QDial.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="re"/>
    </Function>
    <Function name="QDial.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QDial.initStyleOption">
      <Argument typename="QStyleOptionSlider" typetype="class" name="option"/>
    </Function>
    <Function name="QDial.setWrapping" slot="void setWrapping(bool)">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QDial.setNotchesVisible" slot="void setNotchesVisible(bool)">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QDial.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QDial.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QDial.notchesVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDial.notchTarget">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QDial.setNotchTarget">
      <Argument typename="float" name="target"/>
    </Function>
    <Function name="QDial.notchSize">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDial.wrapping">
      <Argument typename="bool" dir="out"/>
    </Function>
  </Class>
  <Class name="QDialogButtonBox" inherits="QWidget">
    <Function name="QDialogButtonBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDialogButtonBox.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDialogButtonBox.__init__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" name="buttons"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDialogButtonBox.__init__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" name="buttons"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QDialogButtonBox.StandardButton">
      <EnumMember name="QDialogButtonBox.NoButton"/>
      <EnumMember name="QDialogButtonBox.Ok"/>
      <EnumMember name="QDialogButtonBox.Save"/>
      <EnumMember name="QDialogButtonBox.SaveAll"/>
      <EnumMember name="QDialogButtonBox.Open"/>
      <EnumMember name="QDialogButtonBox.Yes"/>
      <EnumMember name="QDialogButtonBox.YesToAll"/>
      <EnumMember name="QDialogButtonBox.No"/>
      <EnumMember name="QDialogButtonBox.NoToAll"/>
      <EnumMember name="QDialogButtonBox.Abort"/>
      <EnumMember name="QDialogButtonBox.Retry"/>
      <EnumMember name="QDialogButtonBox.Ignore"/>
      <EnumMember name="QDialogButtonBox.Close"/>
      <EnumMember name="QDialogButtonBox.Cancel"/>
      <EnumMember name="QDialogButtonBox.Discard"/>
      <EnumMember name="QDialogButtonBox.Help"/>
      <EnumMember name="QDialogButtonBox.Apply"/>
      <EnumMember name="QDialogButtonBox.Reset"/>
      <EnumMember name="QDialogButtonBox.RestoreDefaults"/>
    </Enum>
    <Enum name="QDialogButtonBox.ButtonRole">
      <EnumMember name="QDialogButtonBox.InvalidRole"/>
      <EnumMember name="QDialogButtonBox.AcceptRole"/>
      <EnumMember name="QDialogButtonBox.RejectRole"/>
      <EnumMember name="QDialogButtonBox.DestructiveRole"/>
      <EnumMember name="QDialogButtonBox.ActionRole"/>
      <EnumMember name="QDialogButtonBox.HelpRole"/>
      <EnumMember name="QDialogButtonBox.YesRole"/>
      <EnumMember name="QDialogButtonBox.NoRole"/>
      <EnumMember name="QDialogButtonBox.ResetRole"/>
      <EnumMember name="QDialogButtonBox.ApplyRole"/>
    </Enum>
    <Enum name="QDialogButtonBox.ButtonLayout">
      <EnumMember name="QDialogButtonBox.WinLayout"/>
      <EnumMember name="QDialogButtonBox.MacLayout"/>
      <EnumMember name="QDialogButtonBox.KdeLayout"/>
      <EnumMember name="QDialogButtonBox.GnomeLayout"/>
    </Enum>
    <Function name="QDialogButtonBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDialogButtonBox.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Signal default="1" name="QDialogButtonBox.rejected" sig="void rejected()"/>
    <Signal default="1" name="QDialogButtonBox.helpRequested" sig="void helpRequested()"/>
    <Signal default="1" name="QDialogButtonBox.clicked" sig="void clicked( ::QAbstractButton*)"/>
    <Signal default="1" name="QDialogButtonBox.accepted" sig="void accepted()"/>
    <Function name="QDialogButtonBox.centerButtons">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.setCenterButtons">
      <Argument typename="bool" name="center"/>
    </Function>
    <Function name="QDialogButtonBox.button">
      <Argument typename="QPushButton" typetype="class" dir="out"/>
      <Argument typename="QDialogButtonBox.StandardButton" typetype="enum" name="which"/>
    </Function>
    <Function name="QDialogButtonBox.standardButton">
      <Argument typename="QDialogButtonBox.StandardButton" typetype="enum" dir="out"/>
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
    </Function>
    <Function name="QDialogButtonBox.standardButtons">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.setStandardButtons">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" name="buttons"/>
    </Function>
    <Function name="QDialogButtonBox.buttonRole">
      <Argument typename="QDialogButtonBox.ButtonRole" typetype="enum" dir="out"/>
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
    </Function>
    <Function name="QDialogButtonBox.buttons">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.clear"/>
    <Function name="QDialogButtonBox.removeButton">
      <Argument typename="QAbstractButton" typetype="class" name="button" transfer="back"/>
    </Function>
    <Function name="QDialogButtonBox.addButton">
      <Argument typename="QAbstractButton" typetype="class" name="button" transfer="to"/>
      <Argument typename="QDialogButtonBox.ButtonRole" typetype="enum" name="role"/>
    </Function>
    <Function name="QDialogButtonBox.addButton">
      <Argument typename="QPushButton" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QDialogButtonBox.ButtonRole" typetype="enum" name="role"/>
    </Function>
    <Function name="QDialogButtonBox.addButton">
      <Argument typename="QPushButton" typetype="class" dir="out"/>
      <Argument typename="QDialogButtonBox.StandardButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QDialogButtonBox.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.setOrientation">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
    </Function>
  </Class>
  <Class name="QDialogButtonBox.StandardButtons" convert="1">
    <Function name="QDialogButtonBox.StandardButtons.__init__"/>
    <Function name="QDialogButtonBox.StandardButtons.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__init__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__ixor__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__xor__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__ior__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__or__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__iand__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__and__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__invert__">
      <Argument typename="QDialogButtonBox.StandardButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QDialogButtonBox.StandardButtons.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QDirModel" inherits="QAbstractItemModel">
    <Function name="QDirModel.__init__">
      <Argument typename="QStringList" typetype="mappedtype" name="nameFilters"/>
      <Argument typename="QDir.Filters" typetype="class" name="filters"/>
      <Argument typename="QDir.SortFlags" typetype="class" name="sort"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QDirModel.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QDirModel.Roles">
      <EnumMember name="QDirModel.FileIconRole"/>
      <EnumMember name="QDirModel.FilePathRole"/>
      <EnumMember name="QDirModel.FileNameRole"/>
    </Enum>
    <Function name="QDirModel.fileInfo">
      <Argument typename="QFileInfo" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.fileIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.fileName">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.filePath">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.remove">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.rmdir">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.mkdir">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="name"/>
    </Function>
    <Function name="QDirModel.isDir">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.refresh">
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QDirModel.lazyChildCount">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDirModel.setLazyChildCount">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QDirModel.isReadOnly">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDirModel.setReadOnly">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QDirModel.resolveSymlinks">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDirModel.setResolveSymlinks">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QDirModel.sorting">
      <Argument typename="QDir.SortFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QDirModel.setSorting">
      <Argument typename="QDir.SortFlags" typetype="class" name="sort"/>
    </Function>
    <Function name="QDirModel.filter">
      <Argument typename="QDir.Filters" typetype="class" dir="out"/>
    </Function>
    <Function name="QDirModel.setFilter">
      <Argument typename="QDir.Filters" typetype="class" name="filters"/>
    </Function>
    <Function name="QDirModel.nameFilters">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDirModel.setNameFilters">
      <Argument typename="QStringList" typetype="mappedtype" name="filters"/>
    </Function>
    <Function name="QDirModel.iconProvider">
      <Argument typename="QFileIconProvider" typetype="class" dir="out"/>
    </Function>
    <Function name="QDirModel.setIconProvider">
      <Argument typename="QFileIconProvider" typetype="class" name="provider"/>
    </Function>
    <Function name="QDirModel.supportedDropActions" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" dir="out"/>
    </Function>
    <Function name="QDirModel.dropMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
      <Argument typename="Qt.DropAction" typetype="enum" name="action"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
    </Function>
    <Function name="QDirModel.mimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out" transfer="back"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="indexes"/>
    </Function>
    <Function name="QDirModel.mimeTypes" virtual="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDirModel.sort" virtual="1">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.AscendingOrder"/>
    </Function>
    <Function name="QDirModel.flags" virtual="1">
      <Argument typename="Qt.ItemFlags" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QDirModel.hasChildren" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QDirModel.headerData" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="section"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="int" name="role" default="Qt.DisplayRole"/>
    </Function>
    <Function name="QDirModel.setData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
      <Argument typename="int" name="role" default="Qt.EditRole"/>
    </Function>
    <Function name="QDirModel.data" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="int" name="role" default="Qt.DisplayRole"/>
    </Function>
    <Function name="QDirModel.columnCount" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QDirModel.rowCount" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QDirModel.parent" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="child"/>
    </Function>
    <Function name="QDirModel.parent">
      <Argument typename="QObject" typetype="class" dir="out"/>
    </Function>
    <Function name="QDirModel.index" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QDirModel.index">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="path"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
  </Class>
  <Class name="QDockWidget" inherits="QWidget">
    <Function name="QDockWidget.__init__">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QDockWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QDockWidget.DockWidgetFeature">
      <EnumMember name="QDockWidget.DockWidgetClosable"/>
      <EnumMember name="QDockWidget.DockWidgetMovable"/>
      <EnumMember name="QDockWidget.DockWidgetFloatable"/>
      <EnumMember name="QDockWidget.DockWidgetVerticalTitleBar"/>
      <EnumMember name="QDockWidget.AllDockWidgetFeatures"/>
      <EnumMember name="QDockWidget.NoDockWidgetFeatures"/>
    </Enum>
    <Function name="QDockWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDockWidget.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDockWidget.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDockWidget.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QDockWidget.initStyleOption">
      <Argument typename="QStyleOptionDockWidget" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QDockWidget.visibilityChanged" sig="void visibilityChanged(bool)"/>
    <Signal default="1" name="QDockWidget.dockLocationChanged" sig="void dockLocationChanged( ::Qt::DockWidgetArea)"/>
    <Signal default="1" name="QDockWidget.allowedAreasChanged" sig="void allowedAreasChanged( ::Qt::DockWidgetAreas)"/>
    <Signal default="1" name="QDockWidget.topLevelChanged" sig="void topLevelChanged(bool)"/>
    <Signal default="1" name="QDockWidget.featuresChanged" sig="void featuresChanged( ::QDockWidget::DockWidgetFeatures)"/>
    <Function name="QDockWidget.titleBarWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QDockWidget.setTitleBarWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QDockWidget.toggleViewAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QDockWidget.isAreaAllowed">
      <Argument typename="bool" dir="out"/>
      <Argument typename="Qt.DockWidgetArea" typetype="enum" name="area"/>
    </Function>
    <Function name="QDockWidget.allowedAreas">
      <Argument typename="Qt.DockWidgetAreas" typetype="class" dir="out"/>
    </Function>
    <Function name="QDockWidget.setAllowedAreas">
      <Argument typename="Qt.DockWidgetAreas" typetype="class" name="areas"/>
    </Function>
    <Function name="QDockWidget.isFloating">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QDockWidget.setFloating">
      <Argument typename="bool" name="floating"/>
    </Function>
    <Function name="QDockWidget.features">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QDockWidget.setFeatures">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" name="features"/>
    </Function>
    <Function name="QDockWidget.setWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QDockWidget.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QDockWidget.DockWidgetFeatures" convert="1">
    <Function name="QDockWidget.DockWidgetFeatures.__init__"/>
    <Function name="QDockWidget.DockWidgetFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__init__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__ixor__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__xor__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__ior__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__or__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__iand__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__and__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__invert__">
      <Argument typename="QDockWidget.DockWidgetFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QDockWidget.DockWidgetFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QErrorMessage" inherits="QDialog">
    <Function name="QErrorMessage.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QErrorMessage.done" virtual="1">
      <Argument typename="int"/>
    </Function>
    <Function name="QErrorMessage.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QErrorMessage.showMessage" slot="void showMessage(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="message"/>
    </Function>
    <Function name="QErrorMessage.showMessage" slot="void showMessage(const QString&amp;,const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="message"/>
      <Argument typename="QString" typetype="mappedtype" name="type"/>
    </Function>
    <Function name="QErrorMessage.qtHandler" static="1">
      <Argument typename="QErrorMessage" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QFileDialog" inherits="QDialog">
    <Function name="QFileDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QFileDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
    </Function>
    <Enum name="QFileDialog.Option">
      <EnumMember name="QFileDialog.ShowDirsOnly"/>
      <EnumMember name="QFileDialog.DontResolveSymlinks"/>
      <EnumMember name="QFileDialog.DontConfirmOverwrite"/>
      <EnumMember name="QFileDialog.DontUseSheet"/>
      <EnumMember name="QFileDialog.DontUseNativeDialog"/>
      <EnumMember name="QFileDialog.ReadOnly"/>
      <EnumMember name="QFileDialog.HideNameFilterDetails"/>
      <EnumMember name="QFileDialog.DontUseCustomDirectoryIcons"/>
    </Enum>
    <Enum name="QFileDialog.DialogLabel">
      <EnumMember name="QFileDialog.LookIn"/>
      <EnumMember name="QFileDialog.FileName"/>
      <EnumMember name="QFileDialog.FileType"/>
      <EnumMember name="QFileDialog.Accept"/>
      <EnumMember name="QFileDialog.Reject"/>
    </Enum>
    <Enum name="QFileDialog.AcceptMode">
      <EnumMember name="QFileDialog.AcceptOpen"/>
      <EnumMember name="QFileDialog.AcceptSave"/>
    </Enum>
    <Enum name="QFileDialog.FileMode">
      <EnumMember name="QFileDialog.AnyFile"/>
      <EnumMember name="QFileDialog.ExistingFile"/>
      <EnumMember name="QFileDialog.Directory"/>
      <EnumMember name="QFileDialog.ExistingFiles"/>
      <EnumMember name="QFileDialog.DirectoryOnly"/>
    </Enum>
    <Enum name="QFileDialog.ViewMode">
      <EnumMember name="QFileDialog.Detail"/>
      <EnumMember name="QFileDialog.List"/>
    </Enum>
    <Function name="QFileDialog.getSaveFileUrl" static="1">
      <Argument typename="tuple" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="initialFilter" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="0"/>
      <Argument typename="QStringList" typetype="mappedtype" name="supportedSchemes" default="[]"/>
    </Function>
    <Function name="QFileDialog.getOpenFileUrls" static="1">
      <Argument typename="tuple" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="initialFilter" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="0"/>
      <Argument typename="QStringList" typetype="mappedtype" name="supportedSchemes" default="[]"/>
    </Function>
    <Function name="QFileDialog.getOpenFileUrl" static="1">
      <Argument typename="tuple" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="initialFilter" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="0"/>
      <Argument typename="QStringList" typetype="mappedtype" name="supportedSchemes" default="[]"/>
    </Function>
    <Signal default="1" name="QFileDialog.directoryUrlEntered" sig="void directoryUrlEntered(const  ::QUrl&amp;)"/>
    <Signal default="1" name="QFileDialog.currentUrlChanged" sig="void currentUrlChanged(const  ::QUrl&amp;)"/>
    <Signal default="1" name="QFileDialog.urlsSelected" sig="void urlsSelected(const QList&lt;QUrl&gt;&amp;)"/>
    <Signal default="1" name="QFileDialog.urlSelected" sig="void urlSelected(const  ::QUrl&amp;)"/>
    <Function name="QFileDialog.selectMimeTypeFilter">
      <Argument typename="QString" typetype="mappedtype" name="filter"/>
    </Function>
    <Function name="QFileDialog.mimeTypeFilters">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.setMimeTypeFilters">
      <Argument typename="QStringList" typetype="mappedtype" name="filters"/>
    </Function>
    <Function name="QFileDialog.selectedUrls">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.selectUrl">
      <Argument typename="QUrl" typetype="class" name="url"/>
    </Function>
    <Function name="QFileDialog.directoryUrl">
      <Argument typename="QUrl" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.setDirectoryUrl">
      <Argument typename="QUrl" typetype="class" name="directory"/>
    </Function>
    <Function name="QFileDialog.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QFileDialog.open" virtual="1"/>
    <Function name="QFileDialog.open">
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QFileDialog.options">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.setOptions">
      <Argument typename="QFileDialog.Options" typetype="class" name="options"/>
    </Function>
    <Function name="QFileDialog.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFileDialog.Option" typetype="enum" name="option"/>
    </Function>
    <Function name="QFileDialog.setOption">
      <Argument typename="QFileDialog.Option" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QFileDialog.setFilter">
      <Argument typename="QDir.Filters" typetype="class" name="filters"/>
    </Function>
    <Function name="QFileDialog.filter">
      <Argument typename="QDir.Filters" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.selectedNameFilter">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.selectNameFilter">
      <Argument typename="QString" typetype="mappedtype" name="filter"/>
    </Function>
    <Function name="QFileDialog.nameFilters">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.setNameFilters">
      <Argument typename="QStringList" typetype="mappedtype" name="filters"/>
    </Function>
    <Function name="QFileDialog.setNameFilter">
      <Argument typename="QString" typetype="mappedtype" name="filter"/>
    </Function>
    <Function name="QFileDialog.proxyModel">
      <Argument typename="QAbstractProxyModel" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.setProxyModel">
      <Argument typename="QAbstractProxyModel" typetype="class" name="model" transfer="to"/>
    </Function>
    <Function name="QFileDialog.restoreState">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QByteArray" typetype="class" name="state"/>
    </Function>
    <Function name="QFileDialog.saveState">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.sidebarUrls">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.setSidebarUrls">
      <Argument typename="unknown-type" typetype="mappedtype" name="urls"/>
    </Function>
    <Function name="QFileDialog.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QFileDialog.accept" virtual="1"/>
    <Function name="QFileDialog.done" virtual="1">
      <Argument typename="int" name="result"/>
    </Function>
    <Function name="QFileDialog.getSaveFileName" static="1">
      <Argument typename="tuple" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="initialFilter" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="0"/>
    </Function>
    <Function name="QFileDialog.getOpenFileNames" static="1">
      <Argument typename="tuple" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="initialFilter" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="0"/>
    </Function>
    <Function name="QFileDialog.getOpenFileName" static="1">
      <Argument typename="tuple" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="filter" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="initialFilter" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="0"/>
    </Function>
    <Function name="QFileDialog.getExistingDirectoryUrl" static="1">
      <Argument typename="QUrl" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QUrl" typetype="class" name="directory" default="QUrl()"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="QFileDialog.ShowDirsOnly"/>
      <Argument typename="QStringList" typetype="mappedtype" name="supportedSchemes" default="[]"/>
    </Function>
    <Function name="QFileDialog.getExistingDirectory" static="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QString" typetype="mappedtype" name="directory" default="''"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="options" default="QFileDialog.ShowDirsOnly"/>
    </Function>
    <Signal default="1" name="QFileDialog.fileSelected" sig="void fileSelected(const QString&amp;)"/>
    <Signal default="1" name="QFileDialog.filterSelected" sig="void filterSelected(const QString&amp;)"/>
    <Signal default="1" name="QFileDialog.filesSelected" sig="void filesSelected(const QStringList&amp;)"/>
    <Signal default="1" name="QFileDialog.directoryEntered" sig="void directoryEntered(const QString&amp;)"/>
    <Signal default="1" name="QFileDialog.currentChanged" sig="void currentChanged(const QString&amp;)"/>
    <Function name="QFileDialog.labelText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QFileDialog.DialogLabel" typetype="enum" name="label"/>
    </Function>
    <Function name="QFileDialog.setLabelText">
      <Argument typename="QFileDialog.DialogLabel" typetype="enum" name="label"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QFileDialog.iconProvider">
      <Argument typename="QFileIconProvider" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.setIconProvider">
      <Argument typename="QFileIconProvider" typetype="class" name="provider"/>
    </Function>
    <Function name="QFileDialog.itemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.setItemDelegate">
      <Argument typename="QAbstractItemDelegate" typetype="class" name="delegate"/>
    </Function>
    <Function name="QFileDialog.history">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.setHistory">
      <Argument typename="QStringList" typetype="mappedtype" name="paths"/>
    </Function>
    <Function name="QFileDialog.defaultSuffix">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.setDefaultSuffix">
      <Argument typename="QString" typetype="mappedtype" name="suffix"/>
    </Function>
    <Function name="QFileDialog.acceptMode">
      <Argument typename="QFileDialog.AcceptMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFileDialog.setAcceptMode">
      <Argument typename="QFileDialog.AcceptMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QFileDialog.fileMode">
      <Argument typename="QFileDialog.FileMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFileDialog.setFileMode">
      <Argument typename="QFileDialog.FileMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QFileDialog.viewMode">
      <Argument typename="QFileDialog.ViewMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFileDialog.setViewMode">
      <Argument typename="QFileDialog.ViewMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QFileDialog.selectedFiles">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileDialog.selectFile">
      <Argument typename="QString" typetype="mappedtype" name="filename"/>
    </Function>
    <Function name="QFileDialog.directory">
      <Argument typename="QDir" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.setDirectory">
      <Argument typename="QString" typetype="mappedtype" name="directory"/>
    </Function>
    <Function name="QFileDialog.setDirectory">
      <Argument typename="QDir" typetype="class" name="adirectory"/>
    </Function>
  </Class>
  <Class name="QFileDialog.Options" convert="1">
    <Function name="QFileDialog.Options.__init__"/>
    <Function name="QFileDialog.Options.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__init__">
      <Argument typename="QFileDialog.Options" typetype="class"/>
    </Function>
    <Function name="QFileDialog.Options.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFileDialog.Options.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFileDialog.Options.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFileDialog.Options" typetype="class" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__ixor__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__xor__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__ior__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__or__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__iand__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__and__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileDialog.Options.__invert__">
      <Argument typename="QFileDialog.Options" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileDialog.Options.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QFileIconProvider">
    <Function name="QFileIconProvider.__init__"/>
    <Enum name="QFileIconProvider.Option">
      <EnumMember name="QFileIconProvider.DontUseCustomDirectoryIcons"/>
    </Enum>
    <Enum name="QFileIconProvider.IconType">
      <EnumMember name="QFileIconProvider.Computer"/>
      <EnumMember name="QFileIconProvider.Desktop"/>
      <EnumMember name="QFileIconProvider.Trashcan"/>
      <EnumMember name="QFileIconProvider.Network"/>
      <EnumMember name="QFileIconProvider.Drive"/>
      <EnumMember name="QFileIconProvider.Folder"/>
      <EnumMember name="QFileIconProvider.File"/>
    </Enum>
    <Function name="QFileIconProvider.options">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileIconProvider.setOptions">
      <Argument typename="QFileIconProvider.Options" typetype="class" name="options"/>
    </Function>
    <Function name="QFileIconProvider.type" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QFileInfo" typetype="class" name="info"/>
    </Function>
    <Function name="QFileIconProvider.icon" virtual="1">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QFileIconProvider.IconType" typetype="enum" name="type"/>
    </Function>
    <Function name="QFileIconProvider.icon" virtual="1">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QFileInfo" typetype="class" name="info"/>
    </Function>
  </Class>
  <Class name="QFileIconProvider.Options" convert="1">
    <Function name="QFileIconProvider.Options.__init__"/>
    <Function name="QFileIconProvider.Options.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__init__">
      <Argument typename="QFileIconProvider.Options" typetype="class"/>
    </Function>
    <Function name="QFileIconProvider.Options.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFileIconProvider.Options.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFileIconProvider.Options.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFileIconProvider.Options" typetype="class" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFileIconProvider.Options" typetype="class" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__ixor__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__xor__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__ior__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__or__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__iand__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__and__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFileIconProvider.Options.__invert__">
      <Argument typename="QFileIconProvider.Options" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileIconProvider.Options.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QFileSystemModel" inherits="QAbstractItemModel">
    <Function name="QFileSystemModel.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QFileSystemModel.Roles">
      <EnumMember name="QFileSystemModel.FileIconRole"/>
      <EnumMember name="QFileSystemModel.FilePathRole"/>
      <EnumMember name="QFileSystemModel.FileNameRole"/>
      <EnumMember name="QFileSystemModel.FilePermissions"/>
    </Enum>
    <Function name="QFileSystemModel.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QFileSystemModel.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Signal default="1" name="QFileSystemModel.directoryLoaded" sig="void directoryLoaded(const QString&amp;)"/>
    <Signal default="1" name="QFileSystemModel.rootPathChanged" sig="void rootPathChanged(const QString&amp;)"/>
    <Signal default="1" name="QFileSystemModel.fileRenamed" sig="void fileRenamed(const QString&amp;,const QString&amp;,const QString&amp;)"/>
    <Function name="QFileSystemModel.remove">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.fileInfo">
      <Argument typename="QFileInfo" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="aindex"/>
    </Function>
    <Function name="QFileSystemModel.fileIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="aindex"/>
    </Function>
    <Function name="QFileSystemModel.fileName">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="aindex"/>
    </Function>
    <Function name="QFileSystemModel.rmdir">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.permissions">
      <Argument typename="QFileDevice.Permissions" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.mkdir">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="name"/>
    </Function>
    <Function name="QFileSystemModel.lastModified">
      <Argument typename="QDateTime" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.type">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.size">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.isDir">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.filePath">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.nameFilters">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setNameFilters">
      <Argument typename="QStringList" typetype="mappedtype" name="filters"/>
    </Function>
    <Function name="QFileSystemModel.nameFilterDisables">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setNameFilterDisables">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QFileSystemModel.isReadOnly">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setReadOnly">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QFileSystemModel.resolveSymlinks">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setResolveSymlinks">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QFileSystemModel.filter">
      <Argument typename="QDir.Filters" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setFilter">
      <Argument typename="QDir.Filters" typetype="class" name="filters"/>
    </Function>
    <Function name="QFileSystemModel.iconProvider">
      <Argument typename="QFileIconProvider" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setIconProvider">
      <Argument typename="QFileIconProvider" typetype="class" name="provider"/>
    </Function>
    <Function name="QFileSystemModel.rootDirectory">
      <Argument typename="QDir" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.rootPath">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.setRootPath">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="path"/>
    </Function>
    <Function name="QFileSystemModel.supportedDropActions" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.dropMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
      <Argument typename="Qt.DropAction" typetype="enum" name="action"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
    </Function>
    <Function name="QFileSystemModel.mimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="indexes"/>
    </Function>
    <Function name="QFileSystemModel.mimeTypes" virtual="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QFileSystemModel.sort" virtual="1">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.AscendingOrder"/>
    </Function>
    <Function name="QFileSystemModel.flags" virtual="1">
      <Argument typename="Qt.ItemFlags" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QFileSystemModel.headerData" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="section"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="int" name="role" default="Qt.DisplayRole"/>
    </Function>
    <Function name="QFileSystemModel.setData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="idx"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
      <Argument typename="int" name="role" default="Qt.EditRole"/>
    </Function>
    <Function name="QFileSystemModel.data" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="int" name="role" default="Qt.DisplayRole"/>
    </Function>
    <Function name="QFileSystemModel.myComputer">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="role" default="Qt.DisplayRole"/>
    </Function>
    <Function name="QFileSystemModel.columnCount" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QFileSystemModel.rowCount" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QFileSystemModel.fetchMore" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
    </Function>
    <Function name="QFileSystemModel.canFetchMore" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
    </Function>
    <Function name="QFileSystemModel.hasChildren" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QFileSystemModel.parent" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="child"/>
    </Function>
    <Function name="QFileSystemModel.index" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QModelIndex" typetype="class" name="parent" default="QModelIndex()"/>
    </Function>
    <Function name="QFileSystemModel.index">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="path"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
  </Class>
  <Class name="QFocusFrame" inherits="QWidget">
    <Function name="QFocusFrame.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QFocusFrame.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QFocusFrame.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QFocusFrame.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QFocusFrame.initStyleOption">
      <Argument typename="QStyleOption" typetype="class" name="option"/>
    </Function>
    <Function name="QFocusFrame.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QFocusFrame.setWidget">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
  </Class>
  <Class name="QFontComboBox" inherits="QComboBox">
    <Function name="QFontComboBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QFontComboBox.FontFilter">
      <EnumMember name="QFontComboBox.AllFonts"/>
      <EnumMember name="QFontComboBox.ScalableFonts"/>
      <EnumMember name="QFontComboBox.NonScalableFonts"/>
      <EnumMember name="QFontComboBox.MonospacedFonts"/>
      <EnumMember name="QFontComboBox.ProportionalFonts"/>
    </Enum>
    <Function name="QFontComboBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QFontComboBox.currentFontChanged" sig="void currentFontChanged(const  ::QFont&amp;)"/>
    <Function name="QFontComboBox.setCurrentFont" slot="void setCurrentFont(const  ::QFont&amp;)">
      <Argument typename="QFont" typetype="class" name="f"/>
    </Function>
    <Function name="QFontComboBox.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontComboBox.currentFont">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontComboBox.setFontFilters">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" name="filters"/>
    </Function>
    <Function name="QFontComboBox.writingSystem">
      <Argument typename="QFontDatabase.WritingSystem" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFontComboBox.setWritingSystem">
      <Argument typename="QFontDatabase.WritingSystem" typetype="enum"/>
    </Function>
    <Function name="QFontComboBox.fontFilters">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QFontComboBox.FontFilters" convert="1">
    <Function name="QFontComboBox.FontFilters.__init__"/>
    <Function name="QFontComboBox.FontFilters.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__init__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFontComboBox.FontFilters" typetype="class" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFontComboBox.FontFilters" typetype="class" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__ixor__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__xor__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__ior__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__or__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__iand__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__and__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__invert__">
      <Argument typename="QFontComboBox.FontFilters" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontComboBox.FontFilters.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QFontDialog" inherits="QDialog">
    <Function name="QFontDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QFontDialog.__init__">
      <Argument typename="QFont" typetype="class" name="initial"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QFontDialog.FontDialogOption">
      <EnumMember name="QFontDialog.NoButtons"/>
      <EnumMember name="QFontDialog.DontUseNativeDialog"/>
      <EnumMember name="QFontDialog.ScalableFonts"/>
      <EnumMember name="QFontDialog.NonScalableFonts"/>
      <EnumMember name="QFontDialog.MonospacedFonts"/>
      <EnumMember name="QFontDialog.ProportionalFonts"/>
    </Enum>
    <Signal default="1" name="QFontDialog.fontSelected" sig="void fontSelected(const  ::QFont&amp;)"/>
    <Signal default="1" name="QFontDialog.currentFontChanged" sig="void currentFontChanged(const  ::QFont&amp;)"/>
    <Function name="QFontDialog.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QFontDialog.open" virtual="1"/>
    <Function name="QFontDialog.open">
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QFontDialog.options">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontDialog.setOptions">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" name="options"/>
    </Function>
    <Function name="QFontDialog.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFontDialog.FontDialogOption" typetype="enum" name="option"/>
    </Function>
    <Function name="QFontDialog.setOption">
      <Argument typename="QFontDialog.FontDialogOption" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QFontDialog.selectedFont">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontDialog.currentFont">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontDialog.setCurrentFont">
      <Argument typename="QFont" typetype="class" name="font"/>
    </Function>
    <Function name="QFontDialog.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QFontDialog.done" virtual="1">
      <Argument typename="int" name="result"/>
    </Function>
    <Function name="QFontDialog.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QFontDialog.getFont" static="1">
      <Argument typename="QFont" typetype="class" dir="out"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="QFont" typetype="class" name="initial"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
      <Argument typename="QString" typetype="mappedtype" name="caption" default="''"/>
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" name="options" default="QFontDialog.FontDialogOptions()"/>
    </Function>
    <Function name="QFontDialog.getFont" static="1">
      <Argument typename="QFont" typetype="class" dir="out"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
    </Function>
  </Class>
  <Class name="QFontDialog.FontDialogOptions" convert="1">
    <Function name="QFontDialog.FontDialogOptions.__init__"/>
    <Function name="QFontDialog.FontDialogOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__init__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__ixor__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__xor__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__ior__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__or__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__iand__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__and__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__invert__">
      <Argument typename="QFontDialog.FontDialogOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QFontDialog.FontDialogOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QFormLayout" inherits="QLayout">
    <Function name="QFormLayout.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QFormLayout.ItemRole">
      <EnumMember name="QFormLayout.LabelRole"/>
      <EnumMember name="QFormLayout.FieldRole"/>
      <EnumMember name="QFormLayout.SpanningRole"/>
    </Enum>
    <Enum name="QFormLayout.RowWrapPolicy">
      <EnumMember name="QFormLayout.DontWrapRows"/>
      <EnumMember name="QFormLayout.WrapLongRows"/>
      <EnumMember name="QFormLayout.WrapAllRows"/>
    </Enum>
    <Enum name="QFormLayout.FieldGrowthPolicy">
      <EnumMember name="QFormLayout.FieldsStayAtSizeHint"/>
      <EnumMember name="QFormLayout.ExpandingFieldsGrow"/>
      <EnumMember name="QFormLayout.AllNonFixedFieldsGrow"/>
    </Enum>
    <Function name="QFormLayout.rowCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFormLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFormLayout.expandingDirections" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QFormLayout.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QFormLayout.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QFormLayout.invalidate" virtual="1"/>
    <Function name="QFormLayout.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QFormLayout.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QFormLayout.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
    </Function>
    <Function name="QFormLayout.takeAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QFormLayout.addItem" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QFormLayout.labelForField">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="field"/>
    </Function>
    <Function name="QFormLayout.labelForField">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QLayout" typetype="class" name="field"/>
    </Function>
    <Function name="QFormLayout.getLayoutPosition">
      <Argument typename="QLayout" typetype="class" name="layout"/>
      <Argument typename="int" name="rowPtr" dir="out"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="rolePtr" dir="out"/>
    </Function>
    <Function name="QFormLayout.getWidgetPosition">
      <Argument typename="QWidget" typetype="class" name="widget"/>
      <Argument typename="int" name="rowPtr" dir="out"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="rolePtr" dir="out"/>
    </Function>
    <Function name="QFormLayout.getItemPosition">
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="rowPtr" dir="out"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="rolePtr" dir="out"/>
    </Function>
    <Function name="QFormLayout.itemAt">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="role"/>
    </Function>
    <Function name="QFormLayout.itemAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QFormLayout.setLayout">
      <Argument typename="int" name="row"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="role"/>
      <Argument typename="QLayout" typetype="class" name="layout" transfer="to"/>
    </Function>
    <Function name="QFormLayout.setWidget">
      <Argument typename="int" name="row"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="role"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QFormLayout.setItem">
      <Argument typename="int" name="row"/>
      <Argument typename="QFormLayout.ItemRole" typetype="enum" name="role"/>
      <Argument typename="QLayoutItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QFormLayout.insertRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QWidget" typetype="class" name="label" transfer="to"/>
      <Argument typename="QWidget" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.insertRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QWidget" typetype="class" name="label" transfer="to"/>
      <Argument typename="QLayout" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.insertRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QString" typetype="mappedtype" name="labelText"/>
      <Argument typename="QWidget" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.insertRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QString" typetype="mappedtype" name="labelText"/>
      <Argument typename="QLayout" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.insertRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QFormLayout.insertRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QLayout" typetype="class" name="layout" transfer="to"/>
    </Function>
    <Function name="QFormLayout.addRow">
      <Argument typename="QWidget" typetype="class" name="label" transfer="to"/>
      <Argument typename="QWidget" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.addRow">
      <Argument typename="QWidget" typetype="class" name="label" transfer="to"/>
      <Argument typename="QLayout" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.addRow">
      <Argument typename="QString" typetype="mappedtype" name="labelText"/>
      <Argument typename="QWidget" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.addRow">
      <Argument typename="QString" typetype="mappedtype" name="labelText"/>
      <Argument typename="QLayout" typetype="class" name="field" transfer="to"/>
    </Function>
    <Function name="QFormLayout.addRow">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QFormLayout.addRow">
      <Argument typename="QLayout" typetype="class" name="layout" transfer="to"/>
    </Function>
    <Function name="QFormLayout.setSpacing">
      <Argument typename="int"/>
    </Function>
    <Function name="QFormLayout.spacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFormLayout.verticalSpacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFormLayout.setVerticalSpacing">
      <Argument typename="int" name="spacing"/>
    </Function>
    <Function name="QFormLayout.horizontalSpacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QFormLayout.setHorizontalSpacing">
      <Argument typename="int" name="spacing"/>
    </Function>
    <Function name="QFormLayout.formAlignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QFormLayout.setFormAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QFormLayout.labelAlignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QFormLayout.setLabelAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QFormLayout.rowWrapPolicy">
      <Argument typename="QFormLayout.RowWrapPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFormLayout.setRowWrapPolicy">
      <Argument typename="QFormLayout.RowWrapPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QFormLayout.fieldGrowthPolicy">
      <Argument typename="QFormLayout.FieldGrowthPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QFormLayout.setFieldGrowthPolicy">
      <Argument typename="QFormLayout.FieldGrowthPolicy" typetype="enum" name="policy"/>
    </Function>
  </Class>
  <Class name="QGesture" inherits="QObject">
    <Function name="QGesture.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGesture.GestureCancelPolicy">
      <EnumMember name="QGesture.CancelNone"/>
      <EnumMember name="QGesture.CancelAllInContext"/>
    </Enum>
    <Function name="QGesture.gestureCancelPolicy">
      <Argument typename="QGesture.GestureCancelPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGesture.setGestureCancelPolicy">
      <Argument typename="QGesture.GestureCancelPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QGesture.unsetHotSpot"/>
    <Function name="QGesture.hasHotSpot">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGesture.setHotSpot">
      <Argument typename="QPointF" typetype="class" name="value"/>
    </Function>
    <Function name="QGesture.hotSpot">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGesture.state">
      <Argument typename="Qt.GestureState" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGesture.gestureType">
      <Argument typename="Qt.GestureType" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QPanGesture" inherits="QGesture">
    <Function name="QPanGesture.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QPanGesture.setAcceleration">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPanGesture.setOffset">
      <Argument typename="QPointF" typetype="class" name="value"/>
    </Function>
    <Function name="QPanGesture.setLastOffset">
      <Argument typename="QPointF" typetype="class" name="value"/>
    </Function>
    <Function name="QPanGesture.acceleration">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPanGesture.delta">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPanGesture.offset">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPanGesture.lastOffset">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QPinchGesture" inherits="QGesture">
    <Function name="QPinchGesture.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QPinchGesture.ChangeFlag">
      <EnumMember name="QPinchGesture.ScaleFactorChanged"/>
      <EnumMember name="QPinchGesture.RotationAngleChanged"/>
      <EnumMember name="QPinchGesture.CenterPointChanged"/>
    </Enum>
    <Function name="QPinchGesture.setRotationAngle">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPinchGesture.setLastRotationAngle">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPinchGesture.setTotalRotationAngle">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPinchGesture.rotationAngle">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPinchGesture.lastRotationAngle">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPinchGesture.totalRotationAngle">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPinchGesture.setScaleFactor">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPinchGesture.setLastScaleFactor">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPinchGesture.setTotalScaleFactor">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QPinchGesture.scaleFactor">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPinchGesture.lastScaleFactor">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPinchGesture.totalScaleFactor">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QPinchGesture.setCenterPoint">
      <Argument typename="QPointF" typetype="class" name="value"/>
    </Function>
    <Function name="QPinchGesture.setLastCenterPoint">
      <Argument typename="QPointF" typetype="class" name="value"/>
    </Function>
    <Function name="QPinchGesture.setStartCenterPoint">
      <Argument typename="QPointF" typetype="class" name="value"/>
    </Function>
    <Function name="QPinchGesture.centerPoint">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPinchGesture.lastCenterPoint">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPinchGesture.startCenterPoint">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPinchGesture.setChangeFlags">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" name="value"/>
    </Function>
    <Function name="QPinchGesture.changeFlags">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QPinchGesture.setTotalChangeFlags">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" name="value"/>
    </Function>
    <Function name="QPinchGesture.totalChangeFlags">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QPinchGesture.ChangeFlags" convert="1">
    <Function name="QPinchGesture.ChangeFlags.__init__"/>
    <Function name="QPinchGesture.ChangeFlags.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__init__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__ixor__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__xor__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__ior__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__or__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__iand__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__and__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__invert__">
      <Argument typename="QPinchGesture.ChangeFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QPinchGesture.ChangeFlags.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QSwipeGesture" inherits="QGesture">
    <Function name="QSwipeGesture.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QSwipeGesture.SwipeDirection">
      <EnumMember name="QSwipeGesture.NoDirection"/>
      <EnumMember name="QSwipeGesture.Left"/>
      <EnumMember name="QSwipeGesture.Right"/>
      <EnumMember name="QSwipeGesture.Up"/>
      <EnumMember name="QSwipeGesture.Down"/>
    </Enum>
    <Function name="QSwipeGesture.setSwipeAngle">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QSwipeGesture.swipeAngle">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QSwipeGesture.verticalDirection">
      <Argument typename="QSwipeGesture.SwipeDirection" typetype="enum" dir="out"/>
    </Function>
    <Function name="QSwipeGesture.horizontalDirection">
      <Argument typename="QSwipeGesture.SwipeDirection" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QTapGesture" inherits="QGesture">
    <Function name="QTapGesture.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTapGesture.setPosition">
      <Argument typename="QPointF" typetype="class" name="pos"/>
    </Function>
    <Function name="QTapGesture.position">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QTapAndHoldGesture" inherits="QGesture">
    <Function name="QTapAndHoldGesture.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTapAndHoldGesture.timeout" static="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTapAndHoldGesture.setTimeout" static="1">
      <Argument typename="int" name="msecs"/>
    </Function>
    <Function name="QTapAndHoldGesture.setPosition">
      <Argument typename="QPointF" typetype="class" name="pos"/>
    </Function>
    <Function name="QTapAndHoldGesture.position">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGestureEvent" inherits="QEvent">
    <Function name="QGestureEvent.__init__">
      <Argument typename="unknown-type" typetype="mappedtype" name="gestures"/>
    </Function>
    <Function name="QGestureEvent.__init__">
      <Argument typename="QGestureEvent" typetype="class"/>
    </Function>
    <Function name="QGestureEvent.mapToGraphicsScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="gesturePoint"/>
    </Function>
    <Function name="QGestureEvent.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGestureEvent.ignore"/>
    <Function name="QGestureEvent.ignore">
      <Argument typename="QGesture" typetype="class"/>
    </Function>
    <Function name="QGestureEvent.ignore">
      <Argument typename="Qt.GestureType" typetype="enum"/>
    </Function>
    <Function name="QGestureEvent.accept"/>
    <Function name="QGestureEvent.accept">
      <Argument typename="QGesture" typetype="class"/>
    </Function>
    <Function name="QGestureEvent.accept">
      <Argument typename="Qt.GestureType" typetype="enum"/>
    </Function>
    <Function name="QGestureEvent.isAccepted">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGestureEvent.isAccepted">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGesture" typetype="class"/>
    </Function>
    <Function name="QGestureEvent.isAccepted">
      <Argument typename="bool" dir="out"/>
      <Argument typename="Qt.GestureType" typetype="enum"/>
    </Function>
    <Function name="QGestureEvent.setAccepted">
      <Argument typename="bool" name="accepted"/>
    </Function>
    <Function name="QGestureEvent.setAccepted">
      <Argument typename="QGesture" typetype="class"/>
      <Argument typename="bool"/>
    </Function>
    <Function name="QGestureEvent.setAccepted">
      <Argument typename="Qt.GestureType" typetype="enum"/>
      <Argument typename="bool"/>
    </Function>
    <Function name="QGestureEvent.canceledGestures">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGestureEvent.activeGestures">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGestureEvent.gesture">
      <Argument typename="QGesture" typetype="class" dir="out"/>
      <Argument typename="Qt.GestureType" typetype="enum" name="type"/>
    </Function>
    <Function name="QGestureEvent.gestures">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QGestureRecognizer">
    <Function name="QGestureRecognizer.__init__"/>
    <Function name="QGestureRecognizer.__init__">
      <Argument typename="QGestureRecognizer" typetype="class"/>
    </Function>
    <Enum name="QGestureRecognizer.ResultFlag">
      <EnumMember name="QGestureRecognizer.Ignore"/>
      <EnumMember name="QGestureRecognizer.MayBeGesture"/>
      <EnumMember name="QGestureRecognizer.TriggerGesture"/>
      <EnumMember name="QGestureRecognizer.FinishGesture"/>
      <EnumMember name="QGestureRecognizer.CancelGesture"/>
      <EnumMember name="QGestureRecognizer.ConsumeEventHint"/>
    </Enum>
    <Function name="QGestureRecognizer.unregisterRecognizer" static="1">
      <Argument typename="Qt.GestureType" typetype="enum" name="type"/>
    </Function>
    <Function name="QGestureRecognizer.registerRecognizer" static="1">
      <Argument typename="Qt.GestureType" typetype="enum" dir="out"/>
      <Argument typename="QGestureRecognizer" typetype="class" name="recognizer" transfer="to"/>
    </Function>
    <Function name="QGestureRecognizer.reset" virtual="1">
      <Argument typename="QGesture" typetype="class" name="state"/>
    </Function>
    <Function name="QGestureRecognizer.recognize" abstract="1" virtual="1">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="QGesture" typetype="class" name="state"/>
      <Argument typename="QObject" typetype="class" name="watched"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGestureRecognizer.create" virtual="1">
      <Argument typename="QGesture" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="target"/>
    </Function>
  </Class>
  <Class name="QGestureRecognizer.Result" convert="1">
    <Function name="QGestureRecognizer.Result.__init__"/>
    <Function name="QGestureRecognizer.Result.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__init__">
      <Argument typename="QGestureRecognizer.Result" typetype="class"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGestureRecognizer.Result" typetype="class" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGestureRecognizer.Result" typetype="class" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__ixor__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__xor__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__ior__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__or__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__iand__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__and__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__invert__">
      <Argument typename="QGestureRecognizer.Result" typetype="class" dir="out"/>
    </Function>
    <Function name="QGestureRecognizer.Result.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsAnchor" inherits="QObject">
    <Function name="QGraphicsAnchor.sizePolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsAnchor.setSizePolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QGraphicsAnchor.spacing">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsAnchor.unsetSpacing"/>
    <Function name="QGraphicsAnchor.setSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
  </Class>
  <Class name="QGraphicsLayoutItem">
    <Function name="QGraphicsLayoutItem.__init__">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="bool" name="isLayout" default="False"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setOwnedByLayout">
      <Argument typename="bool" name="ownedByLayout"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setGraphicsItem">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsLayoutItem.sizeHint" abstract="1" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsLayoutItem.ownedByLayout">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.graphicsItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.maximumHeight">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.maximumWidth">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.preferredHeight">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.preferredWidth">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.minimumHeight">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.minimumWidth">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.isLayout">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setParentLayoutItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QGraphicsLayoutItem.parentLayoutItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.updateGeometry" virtual="1"/>
    <Function name="QGraphicsLayoutItem.effectiveSizeHint">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsLayoutItem.contentsRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.getContentsMargins" virtual="1">
      <Argument typename="float" name="left" dir="out"/>
      <Argument typename="float" name="top" dir="out"/>
      <Argument typename="float" name="right" dir="out"/>
      <Argument typename="float" name="bottom" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.geometry">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setGeometry" virtual="1">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMaximumHeight">
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMaximumWidth">
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsLayoutItem.maximumSize">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMaximumSize">
      <Argument typename="QSizeF" typetype="class" name="size"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMaximumSize">
      <Argument typename="float" name="aw"/>
      <Argument typename="float" name="ah"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setPreferredHeight">
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setPreferredWidth">
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsLayoutItem.preferredSize">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setPreferredSize">
      <Argument typename="QSizeF" typetype="class" name="size"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setPreferredSize">
      <Argument typename="float" name="aw"/>
      <Argument typename="float" name="ah"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMinimumHeight">
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMinimumWidth">
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsLayoutItem.minimumSize">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMinimumSize">
      <Argument typename="QSizeF" typetype="class" name="size"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setMinimumSize">
      <Argument typename="float" name="aw"/>
      <Argument typename="float" name="ah"/>
    </Function>
    <Function name="QGraphicsLayoutItem.sizePolicy">
      <Argument typename="QSizePolicy" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setSizePolicy">
      <Argument typename="QSizePolicy" typetype="class" name="policy"/>
    </Function>
    <Function name="QGraphicsLayoutItem.setSizePolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="hPolicy"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="vPolicy"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="controlType" default="QSizePolicy.DefaultType"/>
    </Function>
  </Class>
  <Class name="QGraphicsLayout" inherits="QGraphicsLayoutItem">
    <Function name="QGraphicsLayout.__init__">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsLayout.addChildLayoutItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="layoutItem" transfer="to"/>
    </Function>
    <Function name="QGraphicsLayout.updateGeometry" virtual="1"/>
    <Function name="QGraphicsLayout.removeAt" abstract="1" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsLayout.itemAt" abstract="1" virtual="1">
      <Argument typename="QGraphicsLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="i"/>
    </Function>
    <Function name="QGraphicsLayout.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsLayout.count" abstract="1" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsLayout.widgetEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QGraphicsLayout.invalidate" virtual="1"/>
    <Function name="QGraphicsLayout.isActivated">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsLayout.activate"/>
    <Function name="QGraphicsLayout.getContentsMargins" virtual="1">
      <Argument typename="float" name="left" dir="out"/>
      <Argument typename="float" name="top" dir="out"/>
      <Argument typename="float" name="right" dir="out"/>
      <Argument typename="float" name="bottom" dir="out"/>
    </Function>
    <Function name="QGraphicsLayout.setContentsMargins">
      <Argument typename="float" name="left"/>
      <Argument typename="float" name="top"/>
      <Argument typename="float" name="right"/>
      <Argument typename="float" name="bottom"/>
    </Function>
  </Class>
  <Class name="QGraphicsAnchorLayout" inherits="QGraphicsLayout">
    <Function name="QGraphicsAnchorLayout.__init__">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.sizeHint" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.invalidate" virtual="1"/>
    <Function name="QGraphicsAnchorLayout.itemAt" virtual="1">
      <Argument typename="QGraphicsLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.setGeometry" virtual="1">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.removeAt" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.verticalSpacing">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.horizontalSpacing">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.setSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.setVerticalSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.setHorizontalSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.addAnchors">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="firstItem" transfer="to"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="secondItem" transfer="to"/>
      <Argument typename="Qt.Orientations" typetype="class" name="orientations" default="Qt.Horizontal|Qt.Vertical"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.addCornerAnchors">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="firstItem" transfer="to"/>
      <Argument typename="Qt.Corner" typetype="enum" name="firstCorner"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="secondItem" transfer="to"/>
      <Argument typename="Qt.Corner" typetype="enum" name="secondCorner"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.anchor">
      <Argument typename="QGraphicsAnchor" typetype="class" dir="out"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="firstItem"/>
      <Argument typename="Qt.AnchorPoint" typetype="enum" name="firstEdge"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="secondItem"/>
      <Argument typename="Qt.AnchorPoint" typetype="enum" name="secondEdge"/>
    </Function>
    <Function name="QGraphicsAnchorLayout.addAnchor">
      <Argument typename="QGraphicsAnchor" typetype="class" dir="out"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="firstItem" transfer="to"/>
      <Argument typename="Qt.AnchorPoint" typetype="enum" name="firstEdge"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="secondItem" transfer="to"/>
      <Argument typename="Qt.AnchorPoint" typetype="enum" name="secondEdge"/>
    </Function>
  </Class>
  <Class name="QGraphicsEffect" inherits="QObject">
    <Function name="QGraphicsEffect.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGraphicsEffect.PixmapPadMode">
      <EnumMember name="QGraphicsEffect.NoPad"/>
      <EnumMember name="QGraphicsEffect.PadToTransparentBorder"/>
      <EnumMember name="QGraphicsEffect.PadToEffectiveBoundingRect"/>
    </Enum>
    <Enum name="QGraphicsEffect.ChangeFlag">
      <EnumMember name="QGraphicsEffect.SourceAttached"/>
      <EnumMember name="QGraphicsEffect.SourceDetached"/>
      <EnumMember name="QGraphicsEffect.SourceBoundingRectChanged"/>
      <EnumMember name="QGraphicsEffect.SourceInvalidated"/>
    </Enum>
    <Function name="QGraphicsEffect.sourcePixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="Qt.CoordinateSystem" typetype="enum" name="system" default="Qt.LogicalCoordinates"/>
      <Argument typename="QPoint" typetype="class" name="offset" dir="out"/>
      <Argument typename="QGraphicsEffect.PixmapPadMode" typetype="enum" name="mode" default="QGraphicsEffect.PadToEffectiveBoundingRect"/>
    </Function>
    <Function name="QGraphicsEffect.drawSource">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Function name="QGraphicsEffect.sourceBoundingRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="Qt.CoordinateSystem" typetype="enum" name="system" default="Qt.LogicalCoordinates"/>
    </Function>
    <Function name="QGraphicsEffect.sourceIsPixmap">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsEffect.updateBoundingRect"/>
    <Function name="QGraphicsEffect.sourceChanged" virtual="1">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QGraphicsEffect.draw" abstract="1" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Signal default="1" name="QGraphicsEffect.enabledChanged" sig="void enabledChanged(bool)"/>
    <Function name="QGraphicsEffect.update" slot="void update()"/>
    <Function name="QGraphicsEffect.setEnabled" slot="void setEnabled(bool)">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QGraphicsEffect.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsEffect.boundingRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsEffect.boundingRectFor" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="sourceRect"/>
    </Function>
  </Class>
  <Class name="QGraphicsEffect.ChangeFlags" convert="1">
    <Function name="QGraphicsEffect.ChangeFlags.__init__"/>
    <Function name="QGraphicsEffect.ChangeFlags.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__init__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__ixor__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__xor__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__ior__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__or__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__iand__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__and__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__invert__">
      <Argument typename="QGraphicsEffect.ChangeFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsEffect.ChangeFlags.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsColorizeEffect" inherits="QGraphicsEffect">
    <Function name="QGraphicsColorizeEffect.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsColorizeEffect.draw" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Signal default="1" name="QGraphicsColorizeEffect.strengthChanged" sig="void strengthChanged( ::qreal)"/>
    <Signal default="1" name="QGraphicsColorizeEffect.colorChanged" sig="void colorChanged(const  ::QColor&amp;)"/>
    <Function name="QGraphicsColorizeEffect.setStrength" slot="void setStrength( ::qreal)">
      <Argument typename="float" name="strength"/>
    </Function>
    <Function name="QGraphicsColorizeEffect.setColor" slot="void setColor(const  ::QColor&amp;)">
      <Argument typename="QColor" typetype="class" name="c"/>
    </Function>
    <Function name="QGraphicsColorizeEffect.strength">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsColorizeEffect.color">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsBlurEffect" inherits="QGraphicsEffect">
    <Function name="QGraphicsBlurEffect.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGraphicsBlurEffect.BlurHint">
      <EnumMember name="QGraphicsBlurEffect.PerformanceHint"/>
      <EnumMember name="QGraphicsBlurEffect.QualityHint"/>
      <EnumMember name="QGraphicsBlurEffect.AnimationHint"/>
    </Enum>
    <Function name="QGraphicsBlurEffect.draw" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Signal default="1" name="QGraphicsBlurEffect.blurHintsChanged" sig="void blurHintsChanged( ::QGraphicsBlurEffect::BlurHints)"/>
    <Signal default="1" name="QGraphicsBlurEffect.blurRadiusChanged" sig="void blurRadiusChanged( ::qreal)"/>
    <Function name="QGraphicsBlurEffect.setBlurHints" slot="void setBlurHints( ::QGraphicsBlurEffect::BlurHints)">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" name="hints"/>
    </Function>
    <Function name="QGraphicsBlurEffect.setBlurRadius" slot="void setBlurRadius( ::qreal)">
      <Argument typename="float" name="blurRadius"/>
    </Function>
    <Function name="QGraphicsBlurEffect.blurHints">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsBlurEffect.blurRadius">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsBlurEffect.boundingRectFor" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
  </Class>
  <Class name="QGraphicsBlurEffect.BlurHints" convert="1">
    <Function name="QGraphicsBlurEffect.BlurHints.__init__"/>
    <Function name="QGraphicsBlurEffect.BlurHints.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__init__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__ixor__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__xor__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__ior__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__or__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__iand__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__and__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__invert__">
      <Argument typename="QGraphicsBlurEffect.BlurHints" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsBlurEffect.BlurHints.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsDropShadowEffect" inherits="QGraphicsEffect">
    <Function name="QGraphicsDropShadowEffect.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.draw" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Signal default="1" name="QGraphicsDropShadowEffect.colorChanged" sig="void colorChanged(const  ::QColor&amp;)"/>
    <Signal default="1" name="QGraphicsDropShadowEffect.blurRadiusChanged" sig="void blurRadiusChanged( ::qreal)"/>
    <Signal default="1" name="QGraphicsDropShadowEffect.offsetChanged" sig="void offsetChanged(const  ::QPointF&amp;)"/>
    <Function name="QGraphicsDropShadowEffect.setColor" slot="void setColor(const  ::QColor&amp;)">
      <Argument typename="QColor" typetype="class" name="color"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.setBlurRadius" slot="void setBlurRadius( ::qreal)">
      <Argument typename="float" name="blurRadius"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.setYOffset" slot="void setYOffset( ::qreal)">
      <Argument typename="float" name="dy"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.setXOffset" slot="void setXOffset( ::qreal)">
      <Argument typename="float" name="dx"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.setOffset" slot="void setOffset(const  ::QPointF&amp;)">
      <Argument typename="QPointF" typetype="class" name="ofs"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.setOffset" slot="void setOffset( ::qreal, ::qreal)">
      <Argument typename="float" name="dx"/>
      <Argument typename="float" name="dy"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.setOffset" slot="void setOffset( ::qreal)">
      <Argument typename="float" name="d"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.color">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.blurRadius">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.yOffset">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.xOffset">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.offset">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsDropShadowEffect.boundingRectFor" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
  </Class>
  <Class name="QGraphicsOpacityEffect" inherits="QGraphicsEffect">
    <Function name="QGraphicsOpacityEffect.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsOpacityEffect.draw" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Signal default="1" name="QGraphicsOpacityEffect.opacityMaskChanged" sig="void opacityMaskChanged(const  ::QBrush&amp;)"/>
    <Signal default="1" name="QGraphicsOpacityEffect.opacityChanged" sig="void opacityChanged( ::qreal)"/>
    <Function name="QGraphicsOpacityEffect.setOpacityMask" slot="void setOpacityMask(const  ::QBrush&amp;)">
      <Argument typename="QBrush" typetype="class" name="mask"/>
    </Function>
    <Function name="QGraphicsOpacityEffect.setOpacity" slot="void setOpacity( ::qreal)">
      <Argument typename="float" name="opacity"/>
    </Function>
    <Function name="QGraphicsOpacityEffect.opacityMask">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsOpacityEffect.opacity">
      <Argument typename="float" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsGridLayout" inherits="QGraphicsLayout">
    <Function name="QGraphicsGridLayout.__init__">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsGridLayout.removeItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item" transfer="back"/>
    </Function>
    <Function name="QGraphicsGridLayout.sizeHint" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsGridLayout.setGeometry" virtual="1">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsGridLayout.invalidate" virtual="1"/>
    <Function name="QGraphicsGridLayout.removeAt" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsGridLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsGridLayout.itemAt">
      <Argument typename="QGraphicsLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.itemAt" virtual="1">
      <Argument typename="QGraphicsLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsGridLayout.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsGridLayout.setAlignment">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnAlignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnAlignment">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowAlignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowAlignment">
      <Argument typename="int" name="row"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnFixedWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnMaximumWidth">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnMaximumWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnPreferredWidth">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnPreferredWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnMinimumWidth">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnMinimumWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowFixedHeight">
      <Argument typename="int" name="row"/>
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowMaximumHeight">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowMaximumHeight">
      <Argument typename="int" name="row"/>
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowPreferredHeight">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowPreferredHeight">
      <Argument typename="int" name="row"/>
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowMinimumHeight">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowMinimumHeight">
      <Argument typename="int" name="row"/>
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnStretchFactor">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnStretchFactor">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowStretchFactor">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowStretchFactor">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QGraphicsGridLayout.columnSpacing">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGraphicsGridLayout.setColumnSpacing">
      <Argument typename="int" name="column"/>
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsGridLayout.rowSpacing">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGraphicsGridLayout.setRowSpacing">
      <Argument typename="int" name="row"/>
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsGridLayout.setSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsGridLayout.verticalSpacing">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsGridLayout.setVerticalSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsGridLayout.horizontalSpacing">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsGridLayout.setHorizontalSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsGridLayout.addItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item" transfer="to"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="rowSpan"/>
      <Argument typename="int" name="columnSpan"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="Qt.Alignment()"/>
    </Function>
    <Function name="QGraphicsGridLayout.addItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item" transfer="to"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="Qt.Alignment()"/>
    </Function>
  </Class>
  <Class name="QGraphicsItem">
    <Function name="QGraphicsItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGraphicsItem.PanelModality">
      <EnumMember name="QGraphicsItem.NonModal"/>
      <EnumMember name="QGraphicsItem.PanelModal"/>
      <EnumMember name="QGraphicsItem.SceneModal"/>
    </Enum>
    <Enum name="QGraphicsItem.GraphicsItemFlag">
      <EnumMember name="QGraphicsItem.ItemIsMovable"/>
      <EnumMember name="QGraphicsItem.ItemIsSelectable"/>
      <EnumMember name="QGraphicsItem.ItemIsFocusable"/>
      <EnumMember name="QGraphicsItem.ItemClipsToShape"/>
      <EnumMember name="QGraphicsItem.ItemClipsChildrenToShape"/>
      <EnumMember name="QGraphicsItem.ItemIgnoresTransformations"/>
      <EnumMember name="QGraphicsItem.ItemIgnoresParentOpacity"/>
      <EnumMember name="QGraphicsItem.ItemDoesntPropagateOpacityToChildren"/>
      <EnumMember name="QGraphicsItem.ItemStacksBehindParent"/>
      <EnumMember name="QGraphicsItem.ItemUsesExtendedStyleOption"/>
      <EnumMember name="QGraphicsItem.ItemHasNoContents"/>
      <EnumMember name="QGraphicsItem.ItemSendsGeometryChanges"/>
      <EnumMember name="QGraphicsItem.ItemAcceptsInputMethod"/>
      <EnumMember name="QGraphicsItem.ItemNegativeZStacksBehindParent"/>
      <EnumMember name="QGraphicsItem.ItemIsPanel"/>
      <EnumMember name="QGraphicsItem.ItemSendsScenePositionChanges"/>
      <EnumMember name="QGraphicsItem.ItemContainsChildrenInShape"/>
    </Enum>
    <Enum name="QGraphicsItem.GraphicsItemChange">
      <EnumMember name="QGraphicsItem.ItemPositionChange"/>
      <EnumMember name="QGraphicsItem.ItemMatrixChange"/>
      <EnumMember name="QGraphicsItem.ItemVisibleChange"/>
      <EnumMember name="QGraphicsItem.ItemEnabledChange"/>
      <EnumMember name="QGraphicsItem.ItemSelectedChange"/>
      <EnumMember name="QGraphicsItem.ItemParentChange"/>
      <EnumMember name="QGraphicsItem.ItemChildAddedChange"/>
      <EnumMember name="QGraphicsItem.ItemChildRemovedChange"/>
      <EnumMember name="QGraphicsItem.ItemTransformChange"/>
      <EnumMember name="QGraphicsItem.ItemPositionHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemTransformHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemSceneChange"/>
      <EnumMember name="QGraphicsItem.ItemVisibleHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemEnabledHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemSelectedHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemParentHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemSceneHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemCursorChange"/>
      <EnumMember name="QGraphicsItem.ItemCursorHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemToolTipChange"/>
      <EnumMember name="QGraphicsItem.ItemToolTipHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemFlagsChange"/>
      <EnumMember name="QGraphicsItem.ItemFlagsHaveChanged"/>
      <EnumMember name="QGraphicsItem.ItemZValueChange"/>
      <EnumMember name="QGraphicsItem.ItemZValueHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemOpacityChange"/>
      <EnumMember name="QGraphicsItem.ItemOpacityHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemScenePositionHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemRotationChange"/>
      <EnumMember name="QGraphicsItem.ItemRotationHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemScaleChange"/>
      <EnumMember name="QGraphicsItem.ItemScaleHasChanged"/>
      <EnumMember name="QGraphicsItem.ItemTransformOriginPointChange"/>
      <EnumMember name="QGraphicsItem.ItemTransformOriginPointHasChanged"/>
    </Enum>
    <Enum name="QGraphicsItem.CacheMode">
      <EnumMember name="QGraphicsItem.NoCache"/>
      <EnumMember name="QGraphicsItem.ItemCoordinateCache"/>
      <EnumMember name="QGraphicsItem.DeviceCoordinateCache"/>
    </Enum>
    <Member name="QGraphicsItem.Type" const="1" static="1" typename="int"/>
    <Member name="QGraphicsItem.UserType" const="1" static="1" typename="int"/>
    <Function name="QGraphicsItem.updateMicroFocus"/>
    <Function name="QGraphicsItem.setInputMethodHints">
      <Argument typename="Qt.InputMethodHints" typetype="class" name="hints"/>
    </Function>
    <Function name="QGraphicsItem.inputMethodHints">
      <Argument typename="Qt.InputMethodHints" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.stackBefore">
      <Argument typename="QGraphicsItem" typetype="class" name="sibling"/>
    </Function>
    <Function name="QGraphicsItem.setTransformOriginPoint">
      <Argument typename="QPointF" typetype="class" name="origin"/>
    </Function>
    <Function name="QGraphicsItem.setTransformOriginPoint">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.transformOriginPoint">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setTransformations">
      <Argument typename="unknown-type" typetype="mappedtype" name="transformations"/>
    </Function>
    <Function name="QGraphicsItem.transformations">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.scale">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setScale">
      <Argument typename="float" name="scale"/>
    </Function>
    <Function name="QGraphicsItem.rotation">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setRotation">
      <Argument typename="float" name="angle"/>
    </Function>
    <Function name="QGraphicsItem.setY">
      <Argument typename="float" name="y"/>
    </Function>
    <Function name="QGraphicsItem.setX">
      <Argument typename="float" name="x"/>
    </Function>
    <Function name="QGraphicsItem.focusItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setFocusProxy">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsItem.focusProxy">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setActive">
      <Argument typename="bool" name="active"/>
    </Function>
    <Function name="QGraphicsItem.isActive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setFiltersChildEvents">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QGraphicsItem.filtersChildEvents">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setAcceptTouchEvents">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QGraphicsItem.acceptTouchEvents">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setGraphicsEffect">
      <Argument typename="QGraphicsEffect" typetype="class" name="effect" transfer="to"/>
    </Function>
    <Function name="QGraphicsItem.graphicsEffect">
      <Argument typename="QGraphicsEffect" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isBlockedByModalPanel">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="blockingPanel" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setPanelModality">
      <Argument typename="QGraphicsItem.PanelModality" typetype="enum" name="panelModality"/>
    </Function>
    <Function name="QGraphicsItem.panelModality">
      <Argument typename="QGraphicsItem.PanelModality" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.toGraphicsObject">
      <Argument typename="QGraphicsObject" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isPanel">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.panel">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.parentObject">
      <Argument typename="QGraphicsObject" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.mapRectFromScene">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapRectFromScene">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapRectFromParent">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapRectFromParent">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapRectFromItem">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapRectFromItem">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapRectToScene">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapRectToScene">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapRectToParent">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapRectToParent">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapRectToItem">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapRectToItem">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.clipPath">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isClipped">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.itemTransform">
      <Argument typename="QTransform" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="other"/>
      <Argument typename="bool" name="ok" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setOpacity">
      <Argument typename="float" name="opacity"/>
    </Function>
    <Function name="QGraphicsItem.effectiveOpacity">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.opacity">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isUnderMouse">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.commonAncestorItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="other"/>
    </Function>
    <Function name="QGraphicsItem.scroll">
      <Argument typename="float" name="dx"/>
      <Argument typename="float" name="dy"/>
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
    </Function>
    <Function name="QGraphicsItem.setBoundingRegionGranularity">
      <Argument typename="float" name="granularity"/>
    </Function>
    <Function name="QGraphicsItem.boundingRegionGranularity">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.boundingRegion">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QTransform" typetype="class" name="itemToDeviceTransform"/>
    </Function>
    <Function name="QGraphicsItem.ungrabKeyboard"/>
    <Function name="QGraphicsItem.grabKeyboard"/>
    <Function name="QGraphicsItem.ungrabMouse"/>
    <Function name="QGraphicsItem.grabMouse"/>
    <Function name="QGraphicsItem.setAcceptHoverEvents">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QGraphicsItem.acceptHoverEvents">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isVisibleTo">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent"/>
    </Function>
    <Function name="QGraphicsItem.setCacheMode">
      <Argument typename="QGraphicsItem.CacheMode" typetype="enum" name="mode"/>
      <Argument typename="QSize" typetype="class" name="logicalCacheSize" default="QSize()"/>
    </Function>
    <Function name="QGraphicsItem.cacheMode">
      <Argument typename="QGraphicsItem.CacheMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isWindow">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isWidget">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.childItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.window">
      <Argument typename="QGraphicsWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.topLevelWidget">
      <Argument typename="QGraphicsWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.parentWidget">
      <Argument typename="QGraphicsWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isObscured">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
    </Function>
    <Function name="QGraphicsItem.isObscured">
      <Argument typename="bool" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.resetTransform"/>
    <Function name="QGraphicsItem.setTransform">
      <Argument typename="QTransform" typetype="class" name="matrix"/>
      <Argument typename="bool" name="combine" default="False"/>
    </Function>
    <Function name="QGraphicsItem.deviceTransform">
      <Argument typename="QTransform" typetype="class" dir="out"/>
      <Argument typename="QTransform" typetype="class" name="viewportTransform"/>
    </Function>
    <Function name="QGraphicsItem.sceneTransform">
      <Argument typename="QTransform" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.transform">
      <Argument typename="QTransform" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.wheelEvent" virtual="1">
      <Argument typename="QGraphicsSceneWheelEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.sceneEventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="watched"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.sceneEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.prepareGeometryChange"/>
    <Function name="QGraphicsItem.mouseReleaseEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.mousePressEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.mouseMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.itemChange" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem.GraphicsItemChange" typetype="enum" name="change"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QGraphicsItem.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
    </Function>
    <Function name="QGraphicsItem.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.hoverMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.hoverLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.hoverEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.dropEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.dragMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.dragLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.dragEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.contextMenuEvent" virtual="1">
      <Argument typename="QGraphicsSceneContextMenuEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsItem.removeSceneEventFilter">
      <Argument typename="QGraphicsItem" typetype="class" name="filterItem"/>
    </Function>
    <Function name="QGraphicsItem.installSceneEventFilter">
      <Argument typename="QGraphicsItem" typetype="class" name="filterItem"/>
    </Function>
    <Function name="QGraphicsItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setData">
      <Argument typename="int" name="key"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QGraphicsItem.data">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="key"/>
    </Function>
    <Function name="QGraphicsItem.isAncestorOf">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="child"/>
    </Function>
    <Function name="QGraphicsItem.mapFromScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.mapFromScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapFromScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsItem.mapFromScene">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsItem.mapFromScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.mapFromScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapFromParent">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.mapFromParent">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapFromParent">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsItem.mapFromParent">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsItem.mapFromParent">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.mapFromParent">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapFromItem">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.mapFromItem">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapFromItem">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsItem.mapFromItem">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsItem.mapFromItem">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.mapFromItem">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapToScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.mapToScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapToScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsItem.mapToScene">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsItem.mapToScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.mapToScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapToParent">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.mapToParent">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapToParent">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsItem.mapToParent">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsItem.mapToParent">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.mapToParent">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.mapToItem">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.mapToItem">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsItem.mapToItem">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsItem.mapToItem">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsItem.mapToItem">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.mapToItem">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsItem.update">
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
    </Function>
    <Function name="QGraphicsItem.update">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="width"/>
      <Argument typename="float" name="height"/>
    </Function>
    <Function name="QGraphicsItem.paint" abstract="1" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsItem.collidingItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsItem.collidesWithPath" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsItem.collidesWithItem" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="other"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.sceneBoundingRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.childrenBoundingRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.boundingRect" abstract="1" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setZValue">
      <Argument typename="float" name="z"/>
    </Function>
    <Function name="QGraphicsItem.zValue">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.advance" virtual="1">
      <Argument typename="int" name="phase"/>
    </Function>
    <Function name="QGraphicsItem.ensureVisible">
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QGraphicsItem.ensureVisible">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QGraphicsItem.moveBy">
      <Argument typename="float" name="dx"/>
      <Argument typename="float" name="dy"/>
    </Function>
    <Function name="QGraphicsItem.setPos">
      <Argument typename="QPointF" typetype="class" name="pos"/>
    </Function>
    <Function name="QGraphicsItem.setPos">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsItem.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.y">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.x">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.pos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.clearFocus"/>
    <Function name="QGraphicsItem.setFocus">
      <Argument typename="Qt.FocusReason" typetype="enum" name="focusReason" default="Qt.OtherFocusReason"/>
    </Function>
    <Function name="QGraphicsItem.hasFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setAcceptedMouseButtons">
      <Argument typename="Qt.MouseButtons" typetype="class" name="buttons"/>
    </Function>
    <Function name="QGraphicsItem.acceptedMouseButtons">
      <Argument typename="Qt.MouseButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setAcceptDrops">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QGraphicsItem.acceptDrops">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setSelected">
      <Argument typename="bool" name="selected"/>
    </Function>
    <Function name="QGraphicsItem.isSelected">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setEnabled">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QGraphicsItem.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.show"/>
    <Function name="QGraphicsItem.hide"/>
    <Function name="QGraphicsItem.setVisible">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QGraphicsItem.isVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.unsetCursor"/>
    <Function name="QGraphicsItem.hasCursor">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setCursor">
      <Argument typename="QCursor" typetype="class" name="cursor"/>
    </Function>
    <Function name="QGraphicsItem.cursor">
      <Argument typename="QCursor" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setToolTip">
      <Argument typename="QString" typetype="mappedtype" name="toolTip"/>
    </Function>
    <Function name="QGraphicsItem.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setFlags">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QGraphicsItem.setFlag">
      <Argument typename="QGraphicsItem.GraphicsItemFlag" typetype="enum" name="flag"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QGraphicsItem.flags">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setGroup">
      <Argument typename="QGraphicsItemGroup" typetype="class" name="group"/>
    </Function>
    <Function name="QGraphicsItem.group">
      <Argument typename="QGraphicsItemGroup" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.setParentItem">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QGraphicsItem.topLevelItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.parentItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.scene">
      <Argument typename="QGraphicsScene" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsItem.GraphicsItemFlags" convert="1">
    <Function name="QGraphicsItem.GraphicsItemFlags.__init__"/>
    <Function name="QGraphicsItem.GraphicsItemFlags.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__init__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__ixor__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__xor__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__ior__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__or__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__iand__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__and__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__invert__">
      <Argument typename="QGraphicsItem.GraphicsItemFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItem.GraphicsItemFlags.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QAbstractGraphicsShapeItem" inherits="QGraphicsItem">
    <Function name="QAbstractGraphicsShapeItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QAbstractGraphicsShapeItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractGraphicsShapeItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QAbstractGraphicsShapeItem.setBrush">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QAbstractGraphicsShapeItem.brush">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QAbstractGraphicsShapeItem.setPen">
      <Argument typename="QPen" typetype="class" name="pen"/>
    </Function>
    <Function name="QAbstractGraphicsShapeItem.pen">
      <Argument typename="QPen" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsPathItem" inherits="QAbstractGraphicsShapeItem">
    <Function name="QGraphicsPathItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsPathItem.__init__">
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsPathItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsPathItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPathItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsPathItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsPathItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsPathItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPathItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPathItem.setPath">
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsPathItem.path">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsRectItem" inherits="QAbstractGraphicsShapeItem">
    <Function name="QGraphicsRectItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsRectItem.__init__">
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsRectItem.__init__">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsRectItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsRectItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsRectItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsRectItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsRectItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsRectItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsRectItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsRectItem.setRect">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsRectItem.setRect">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsRectItem.rect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsEllipseItem" inherits="QAbstractGraphicsShapeItem">
    <Function name="QGraphicsEllipseItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsEllipseItem.__init__">
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsEllipseItem.__init__">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsEllipseItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsEllipseItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsEllipseItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsEllipseItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsEllipseItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsEllipseItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsEllipseItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsEllipseItem.setSpanAngle">
      <Argument typename="int" name="angle"/>
    </Function>
    <Function name="QGraphicsEllipseItem.spanAngle">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsEllipseItem.setStartAngle">
      <Argument typename="int" name="angle"/>
    </Function>
    <Function name="QGraphicsEllipseItem.startAngle">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsEllipseItem.setRect">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsEllipseItem.setRect">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsEllipseItem.rect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsPolygonItem" inherits="QAbstractGraphicsShapeItem">
    <Function name="QGraphicsPolygonItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsPolygonItem.__init__">
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsPolygonItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsPolygonItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPolygonItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsPolygonItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsPolygonItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsPolygonItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPolygonItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPolygonItem.setFillRule">
      <Argument typename="Qt.FillRule" typetype="enum" name="rule"/>
    </Function>
    <Function name="QGraphicsPolygonItem.fillRule">
      <Argument typename="Qt.FillRule" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsPolygonItem.setPolygon">
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsPolygonItem.polygon">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsLineItem" inherits="QGraphicsItem">
    <Function name="QGraphicsLineItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsLineItem.__init__">
      <Argument typename="QLineF" typetype="class" name="line"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsLineItem.__init__">
      <Argument typename="float" name="x1"/>
      <Argument typename="float" name="y1"/>
      <Argument typename="float" name="x2"/>
      <Argument typename="float" name="y2"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsLineItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsLineItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLineItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsLineItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsLineItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsLineItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLineItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLineItem.setLine">
      <Argument typename="QLineF" typetype="class" name="line"/>
    </Function>
    <Function name="QGraphicsLineItem.setLine">
      <Argument typename="float" name="x1"/>
      <Argument typename="float" name="y1"/>
      <Argument typename="float" name="x2"/>
      <Argument typename="float" name="y2"/>
    </Function>
    <Function name="QGraphicsLineItem.line">
      <Argument typename="QLineF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsLineItem.setPen">
      <Argument typename="QPen" typetype="class" name="pen"/>
    </Function>
    <Function name="QGraphicsLineItem.pen">
      <Argument typename="QPen" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsPixmapItem" inherits="QGraphicsItem">
    <Function name="QGraphicsPixmapItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsPixmapItem.__init__">
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGraphicsPixmapItem.ShapeMode">
      <EnumMember name="QGraphicsPixmapItem.MaskShape"/>
      <EnumMember name="QGraphicsPixmapItem.BoundingRectShape"/>
      <EnumMember name="QGraphicsPixmapItem.HeuristicMaskShape"/>
    </Enum>
    <Function name="QGraphicsPixmapItem.setShapeMode">
      <Argument typename="QGraphicsPixmapItem.ShapeMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QGraphicsPixmapItem.shapeMode">
      <Argument typename="QGraphicsPixmapItem.ShapeMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsPixmapItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsPixmapItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsPixmapItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.setOffset">
      <Argument typename="QPointF" typetype="class" name="offset"/>
    </Function>
    <Function name="QGraphicsPixmapItem.setOffset">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsPixmapItem.offset">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.setTransformationMode">
      <Argument typename="Qt.TransformationMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QGraphicsPixmapItem.transformationMode">
      <Argument typename="Qt.TransformationMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsPixmapItem.setPixmap">
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QGraphicsPixmapItem.pixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSimpleTextItem" inherits="QAbstractGraphicsShapeItem">
    <Function name="QGraphicsSimpleTextItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.setFont">
      <Argument typename="QFont" typetype="class" name="font"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsSimpleTextItem.setText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
  </Class>
  <Class name="QGraphicsItemGroup" inherits="QGraphicsItem">
    <Function name="QGraphicsItemGroup.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsItemGroup.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsItemGroup.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItemGroup.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsItemGroup.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsItemGroup.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsItemGroup.removeFromGroup">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsItemGroup.addToGroup">
      <Argument typename="QGraphicsItem" typetype="class" name="item" transfer="to"/>
    </Function>
  </Class>
  <Class name="QGraphicsObject" inherits="QObject QGraphicsItem">
    <Function name="QGraphicsObject.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsObject.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QGraphicsObject.updateMicroFocus" slot="void updateMicroFocus()"/>
    <Signal default="1" name="QGraphicsObject.scaleChanged" sig="void scaleChanged()"/>
    <Signal default="1" name="QGraphicsObject.rotationChanged" sig="void rotationChanged()"/>
    <Signal default="1" name="QGraphicsObject.zChanged" sig="void zChanged()"/>
    <Signal default="1" name="QGraphicsObject.yChanged" sig="void yChanged()"/>
    <Signal default="1" name="QGraphicsObject.xChanged" sig="void xChanged()"/>
    <Signal default="1" name="QGraphicsObject.enabledChanged" sig="void enabledChanged()"/>
    <Signal default="1" name="QGraphicsObject.visibleChanged" sig="void visibleChanged()"/>
    <Signal default="1" name="QGraphicsObject.opacityChanged" sig="void opacityChanged()"/>
    <Signal default="1" name="QGraphicsObject.parentChanged" sig="void parentChanged()"/>
    <Function name="QGraphicsObject.ungrabGesture">
      <Argument typename="Qt.GestureType" typetype="enum" name="type"/>
    </Function>
    <Function name="QGraphicsObject.grabGesture">
      <Argument typename="Qt.GestureType" typetype="enum" name="type"/>
      <Argument typename="Qt.GestureFlags" typetype="class" name="flags" default="Qt.GestureFlags()"/>
    </Function>
  </Class>
  <Class name="QGraphicsTextItem" inherits="QGraphicsObject">
    <Function name="QGraphicsTextItem.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsTextItem.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsTextItem.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
    </Function>
    <Function name="QGraphicsTextItem.hoverLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.hoverMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.hoverEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.dropEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.dragMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.dragLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.dragEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.contextMenuEvent" virtual="1">
      <Argument typename="QGraphicsSceneContextMenuEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.mouseReleaseEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.mouseMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.mousePressEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsTextItem.sceneEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Signal default="1" name="QGraphicsTextItem.linkHovered" sig="void linkHovered(const QString&amp;)"/>
    <Signal default="1" name="QGraphicsTextItem.linkActivated" sig="void linkActivated(const QString&amp;)"/>
    <Function name="QGraphicsTextItem.textCursor">
      <Argument typename="QTextCursor" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setTextCursor">
      <Argument typename="QTextCursor" typetype="class" name="cursor"/>
    </Function>
    <Function name="QGraphicsTextItem.openExternalLinks">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setOpenExternalLinks">
      <Argument typename="bool" name="open"/>
    </Function>
    <Function name="QGraphicsTextItem.tabChangesFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setTabChangesFocus">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QGraphicsTextItem.textInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setTextInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QGraphicsTextItem.document">
      <Argument typename="QTextDocument" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setDocument">
      <Argument typename="QTextDocument" typetype="class" name="document"/>
    </Function>
    <Function name="QGraphicsTextItem.adjustSize"/>
    <Function name="QGraphicsTextItem.textWidth">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setTextWidth">
      <Argument typename="float" name="width"/>
    </Function>
    <Function name="QGraphicsTextItem.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.opaqueArea" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.isObscuredBy" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsTextItem.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsTextItem.contains" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsTextItem.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.defaultTextColor">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setDefaultTextColor">
      <Argument typename="QColor" typetype="class" name="c"/>
    </Function>
    <Function name="QGraphicsTextItem.setFont">
      <Argument typename="QFont" typetype="class" name="font"/>
    </Function>
    <Function name="QGraphicsTextItem.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setPlainText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QGraphicsTextItem.toPlainText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsTextItem.setHtml">
      <Argument typename="QString" typetype="mappedtype" name="html"/>
    </Function>
    <Function name="QGraphicsTextItem.toHtml">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsLinearLayout" inherits="QGraphicsLayout">
    <Function name="QGraphicsLinearLayout.__init__">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsLinearLayout.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsLinearLayout.sizeHint" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsLinearLayout.invalidate" virtual="1"/>
    <Function name="QGraphicsLinearLayout.itemAt" virtual="1">
      <Argument typename="QGraphicsLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsLinearLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsLinearLayout.setGeometry" virtual="1">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsLinearLayout.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsLinearLayout.setAlignment">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QGraphicsLinearLayout.stretchFactor">
      <Argument typename="int" dir="out"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsLinearLayout.setStretchFactor">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QGraphicsLinearLayout.itemSpacing">
      <Argument typename="float" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsLinearLayout.setItemSpacing">
      <Argument typename="int" name="index"/>
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsLinearLayout.spacing">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsLinearLayout.setSpacing">
      <Argument typename="float" name="spacing"/>
    </Function>
    <Function name="QGraphicsLinearLayout.removeAt" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QGraphicsLinearLayout.removeItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item" transfer="back"/>
    </Function>
    <Function name="QGraphicsLinearLayout.insertStretch">
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="stretch" default="1"/>
    </Function>
    <Function name="QGraphicsLinearLayout.insertItem">
      <Argument typename="int" name="index"/>
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QGraphicsLinearLayout.addStretch">
      <Argument typename="int" name="stretch" default="1"/>
    </Function>
    <Function name="QGraphicsLinearLayout.addItem">
      <Argument typename="QGraphicsLayoutItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QGraphicsLinearLayout.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsLinearLayout.setOrientation">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
    </Function>
  </Class>
  <Class name="QGraphicsWidget" inherits="QGraphicsObject QGraphicsLayoutItem">
    <Function name="QGraphicsWidget.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Signal default="1" name="QGraphicsWidget.geometryChanged" sig="void geometryChanged()"/>
    <Function name="QGraphicsWidget.setAutoFillBackground">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QGraphicsWidget.autoFillBackground">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.ungrabKeyboardEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.grabKeyboardEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.ungrabMouseEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.grabMouseEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.hoverLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.hoverMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.resizeEvent" virtual="1">
      <Argument typename="QGraphicsSceneResizeEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.polishEvent" virtual="1"/>
    <Function name="QGraphicsWidget.moveEvent" virtual="1">
      <Argument typename="QGraphicsSceneMoveEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QGraphicsWidget.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.windowFrameSectionAt" virtual="1">
      <Argument typename="Qt.WindowFrameSection" typetype="enum" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="pos"/>
    </Function>
    <Function name="QGraphicsWidget.windowFrameEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QGraphicsWidget.sceneEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsWidget.itemChange" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem.GraphicsItemChange" typetype="enum" name="change"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QGraphicsWidget.updateGeometry" virtual="1"/>
    <Function name="QGraphicsWidget.sizeHint" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsWidget.initStyleOption" virtual="1">
      <Argument typename="QStyleOption" typetype="class" name="option"/>
    </Function>
    <Function name="QGraphicsWidget.close" slot="bool close()">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.shape" virtual="1">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.boundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.paintWindowFrame" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsWidget.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QGraphicsWidget.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.testAttribute">
      <Argument typename="bool" dir="out"/>
      <Argument typename="Qt.WidgetAttribute" typetype="enum" name="attribute"/>
    </Function>
    <Function name="QGraphicsWidget.setAttribute">
      <Argument typename="Qt.WidgetAttribute" typetype="enum" name="attribute"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QGraphicsWidget.actions">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.removeAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QGraphicsWidget.insertActions">
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="actions"/>
    </Function>
    <Function name="QGraphicsWidget.insertAction">
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QGraphicsWidget.addActions">
      <Argument typename="unknown-type" typetype="mappedtype" name="actions"/>
    </Function>
    <Function name="QGraphicsWidget.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QGraphicsWidget.setShortcutAutoRepeat">
      <Argument typename="int" name="id"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QGraphicsWidget.setShortcutEnabled">
      <Argument typename="int" name="id"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QGraphicsWidget.releaseShortcut">
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QGraphicsWidget.grabShortcut">
      <Argument typename="int" dir="out"/>
      <Argument typename="QKeySequence" typetype="class" name="sequence"/>
      <Argument typename="Qt.ShortcutContext" typetype="enum" name="context" default="Qt.WindowShortcut"/>
    </Function>
    <Function name="QGraphicsWidget.focusWidget">
      <Argument typename="QGraphicsWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setTabOrder" static="1">
      <Argument typename="QGraphicsWidget" typetype="class" name="first"/>
      <Argument typename="QGraphicsWidget" typetype="class" name="second"/>
    </Function>
    <Function name="QGraphicsWidget.setFocusPolicy">
      <Argument typename="Qt.FocusPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QGraphicsWidget.focusPolicy">
      <Argument typename="Qt.FocusPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.windowTitle">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setWindowTitle">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QGraphicsWidget.isActiveWindow">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setWindowFlags">
      <Argument typename="Qt.WindowFlags" typetype="class" name="wFlags"/>
    </Function>
    <Function name="QGraphicsWidget.windowType">
      <Argument typename="Qt.WindowType" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.windowFlags">
      <Argument typename="Qt.WindowFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.windowFrameRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.windowFrameGeometry">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.unsetWindowFrameMargins"/>
    <Function name="QGraphicsWidget.getWindowFrameMargins">
      <Argument typename="float" name="left" dir="out"/>
      <Argument typename="float" name="top" dir="out"/>
      <Argument typename="float" name="right" dir="out"/>
      <Argument typename="float" name="bottom" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setWindowFrameMargins">
      <Argument typename="float" name="left"/>
      <Argument typename="float" name="top"/>
      <Argument typename="float" name="right"/>
      <Argument typename="float" name="bottom"/>
    </Function>
    <Function name="QGraphicsWidget.getContentsMargins" virtual="1">
      <Argument typename="float" name="left" dir="out"/>
      <Argument typename="float" name="top" dir="out"/>
      <Argument typename="float" name="right" dir="out"/>
      <Argument typename="float" name="bottom" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setContentsMargins">
      <Argument typename="float" name="left"/>
      <Argument typename="float" name="top"/>
      <Argument typename="float" name="right"/>
      <Argument typename="float" name="bottom"/>
    </Function>
    <Function name="QGraphicsWidget.rect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setGeometry" virtual="1">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsWidget.setGeometry">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="aw"/>
      <Argument typename="float" name="ah"/>
    </Function>
    <Function name="QGraphicsWidget.size">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.resize">
      <Argument typename="QSizeF" typetype="class" name="size"/>
    </Function>
    <Function name="QGraphicsWidget.resize">
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsWidget.setPalette">
      <Argument typename="QPalette" typetype="class" name="palette"/>
    </Function>
    <Function name="QGraphicsWidget.palette">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setFont">
      <Argument typename="QFont" typetype="class" name="font"/>
    </Function>
    <Function name="QGraphicsWidget.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.setStyle">
      <Argument typename="QStyle" typetype="class" name="style"/>
    </Function>
    <Function name="QGraphicsWidget.style">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.unsetLayoutDirection"/>
    <Function name="QGraphicsWidget.setLayoutDirection">
      <Argument typename="Qt.LayoutDirection" typetype="enum" name="direction"/>
    </Function>
    <Function name="QGraphicsWidget.layoutDirection">
      <Argument typename="Qt.LayoutDirection" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsWidget.adjustSize"/>
    <Function name="QGraphicsWidget.setLayout">
      <Argument typename="QGraphicsLayout" typetype="class" name="layout" transfer="to"/>
    </Function>
    <Function name="QGraphicsWidget.layout">
      <Argument typename="QGraphicsLayout" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsProxyWidget" inherits="QGraphicsWidget">
    <Function name="QGraphicsProxyWidget.__init__">
      <Argument typename="QGraphicsItem" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QGraphicsProxyWidget.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
    </Function>
    <Function name="QGraphicsProxyWidget.newProxyWidget">
      <Argument typename="QGraphicsProxyWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QGraphicsProxyWidget.dropEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.dragMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.dragLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.dragEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.resizeEvent" virtual="1">
      <Argument typename="QGraphicsSceneResizeEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.sizeHint" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
      <Argument typename="Qt.SizeHint" typetype="enum" name="which"/>
      <Argument typename="QSizeF" typetype="class" name="constraint" default="QSizeF()"/>
    </Function>
    <Function name="QGraphicsProxyWidget.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QGraphicsProxyWidget.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.wheelEvent" virtual="1">
      <Argument typename="QGraphicsSceneWheelEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.mouseReleaseEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.mousePressEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.mouseMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.ungrabMouseEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.grabMouseEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.hoverMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.hoverLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.hoverEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneHoverEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.contextMenuEvent" virtual="1">
      <Argument typename="QGraphicsSceneContextMenuEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsProxyWidget.itemChange" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QGraphicsItem.GraphicsItemChange" typetype="enum" name="change"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QGraphicsProxyWidget.createProxyForChildWidget">
      <Argument typename="QGraphicsProxyWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="child"/>
    </Function>
    <Function name="QGraphicsProxyWidget.type" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsProxyWidget.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsProxyWidget.setGeometry" virtual="1">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsProxyWidget.subWidgetRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsProxyWidget.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsProxyWidget.setWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
  </Class>
  <Class name="QGraphicsScene" inherits="QObject">
    <Function name="QGraphicsScene.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsScene.__init__">
      <Argument typename="QRectF" typetype="class" name="sceneRect"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsScene.__init__">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="width"/>
      <Argument typename="float" name="height"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGraphicsScene.SceneLayer">
      <EnumMember name="QGraphicsScene.ItemLayer"/>
      <EnumMember name="QGraphicsScene.BackgroundLayer"/>
      <EnumMember name="QGraphicsScene.ForegroundLayer"/>
      <EnumMember name="QGraphicsScene.AllLayers"/>
    </Enum>
    <Enum name="QGraphicsScene.ItemIndexMethod">
      <EnumMember name="QGraphicsScene.BspTreeIndex"/>
      <EnumMember name="QGraphicsScene.NoIndex"/>
    </Enum>
    <Signal default="1" name="QGraphicsScene.focusItemChanged" sig="void focusItemChanged( ::QGraphicsItem*, ::QGraphicsItem*, ::Qt::FocusReason)"/>
    <Function name="QGraphicsScene.setMinimumRenderSize">
      <Argument typename="float" name="minSize"/>
    </Function>
    <Function name="QGraphicsScene.minimumRenderSize">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.sendEvent">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.setActivePanel">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsScene.activePanel">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.isActive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.itemAt">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="pos"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform"/>
    </Function>
    <Function name="QGraphicsScene.itemAt">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform"/>
    </Function>
    <Function name="QGraphicsScene.stickyFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setStickyFocus">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QGraphicsScene.focusNextPrevChild">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QGraphicsScene.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="watched"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.setActiveWindow">
      <Argument typename="QGraphicsWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsScene.activeWindow">
      <Argument typename="QGraphicsWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setPalette">
      <Argument typename="QPalette" typetype="class" name="palette"/>
    </Function>
    <Function name="QGraphicsScene.palette">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setFont">
      <Argument typename="QFont" typetype="class" name="font"/>
    </Function>
    <Function name="QGraphicsScene.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setStyle">
      <Argument typename="QStyle" typetype="class" name="style" transfer="to"/>
    </Function>
    <Function name="QGraphicsScene.style">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.addWidget">
      <Argument typename="QGraphicsProxyWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QGraphicsScene.selectionArea">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setBspTreeDepth">
      <Argument typename="int" name="depth"/>
    </Function>
    <Function name="QGraphicsScene.bspTreeDepth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.drawForeground" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsScene.drawBackground" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsScene.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.wheelEvent" virtual="1">
      <Argument typename="QGraphicsSceneWheelEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.mouseReleaseEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.mouseMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.mousePressEvent" virtual="1">
      <Argument typename="QGraphicsSceneMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.helpEvent" virtual="1">
      <Argument typename="QGraphicsSceneHelpEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.dropEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.dragLeaveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.dragMoveEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.dragEnterEvent" virtual="1">
      <Argument typename="QGraphicsSceneDragDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.contextMenuEvent" virtual="1">
      <Argument typename="QGraphicsSceneContextMenuEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsScene.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Signal default="1" name="QGraphicsScene.selectionChanged" sig="void selectionChanged()"/>
    <Signal default="1" name="QGraphicsScene.sceneRectChanged" sig="void sceneRectChanged(const  ::QRectF&amp;)"/>
    <Signal default="1" name="QGraphicsScene.changed" sig="void changed(const QList&lt;QRectF&gt;&amp;)"/>
    <Function name="QGraphicsScene.clear" slot="void clear()"/>
    <Function name="QGraphicsScene.invalidate" slot="void invalidate(const  ::QRectF&amp; = QRectF(), ::QGraphicsScene::SceneLayers = QGraphicsScene.AllLayers)">
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" name="layers" default="QGraphicsScene.AllLayers"/>
    </Function>
    <Function name="QGraphicsScene.invalidate">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" name="layers" default="QGraphicsScene.AllLayers"/>
    </Function>
    <Function name="QGraphicsScene.update" slot="void update(const  ::QRectF&amp; = QRectF())">
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
    </Function>
    <Function name="QGraphicsScene.update">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsScene.advance" slot="void advance()"/>
    <Function name="QGraphicsScene.views">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
    </Function>
    <Function name="QGraphicsScene.setForegroundBrush">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QGraphicsScene.foregroundBrush">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setBackgroundBrush">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QGraphicsScene.backgroundBrush">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.mouseGrabberItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.clearFocus"/>
    <Function name="QGraphicsScene.setFocus">
      <Argument typename="Qt.FocusReason" typetype="enum" name="focusReason" default="Qt.OtherFocusReason"/>
    </Function>
    <Function name="QGraphicsScene.hasFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setFocusItem">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="Qt.FocusReason" typetype="enum" name="focusReason" default="Qt.OtherFocusReason"/>
    </Function>
    <Function name="QGraphicsScene.focusItem">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.removeItem">
      <Argument typename="QGraphicsItem" typetype="class" name="item" transfer="back"/>
    </Function>
    <Function name="QGraphicsScene.addText">
      <Argument typename="QGraphicsTextItem" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QFont" typetype="class" name="font" default="QFont()"/>
    </Function>
    <Function name="QGraphicsScene.addSimpleText">
      <Argument typename="QGraphicsSimpleTextItem" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QFont" typetype="class" name="font" default="QFont()"/>
    </Function>
    <Function name="QGraphicsScene.addRect">
      <Argument typename="QGraphicsRectItem" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
      <Argument typename="QBrush" typetype="class" name="brush" default="QBrush()"/>
    </Function>
    <Function name="QGraphicsScene.addRect">
      <Argument typename="QGraphicsRectItem" typetype="class" dir="out"/>
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
      <Argument typename="QBrush" typetype="class" name="brush" default="QBrush()"/>
    </Function>
    <Function name="QGraphicsScene.addPolygon">
      <Argument typename="QGraphicsPolygonItem" typetype="class" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
      <Argument typename="QBrush" typetype="class" name="brush" default="QBrush()"/>
    </Function>
    <Function name="QGraphicsScene.addPixmap">
      <Argument typename="QGraphicsPixmapItem" typetype="class" dir="out"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QGraphicsScene.addPath">
      <Argument typename="QGraphicsPathItem" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
      <Argument typename="QBrush" typetype="class" name="brush" default="QBrush()"/>
    </Function>
    <Function name="QGraphicsScene.addLine">
      <Argument typename="QGraphicsLineItem" typetype="class" dir="out"/>
      <Argument typename="QLineF" typetype="class" name="line"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
    </Function>
    <Function name="QGraphicsScene.addLine">
      <Argument typename="QGraphicsLineItem" typetype="class" dir="out"/>
      <Argument typename="float" name="x1"/>
      <Argument typename="float" name="y1"/>
      <Argument typename="float" name="x2"/>
      <Argument typename="float" name="y2"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
    </Function>
    <Function name="QGraphicsScene.addEllipse">
      <Argument typename="QGraphicsEllipseItem" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
      <Argument typename="QBrush" typetype="class" name="brush" default="QBrush()"/>
    </Function>
    <Function name="QGraphicsScene.addEllipse">
      <Argument typename="QGraphicsEllipseItem" typetype="class" dir="out"/>
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="QPen" typetype="class" name="pen" default="QPen()"/>
      <Argument typename="QBrush" typetype="class" name="brush" default="QBrush()"/>
    </Function>
    <Function name="QGraphicsScene.addItem">
      <Argument typename="QGraphicsItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QGraphicsScene.destroyItemGroup">
      <Argument typename="QGraphicsItemGroup" typetype="class" name="group" transfer="to"/>
    </Function>
    <Function name="QGraphicsScene.createItemGroup">
      <Argument typename="QGraphicsItemGroup" typetype="class" dir="out"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="items" transfer="to"/>
    </Function>
    <Function name="QGraphicsScene.clearSelection"/>
    <Function name="QGraphicsScene.setSelectionArea">
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform"/>
    </Function>
    <Function name="QGraphicsScene.setSelectionArea">
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform" default="QTransform()"/>
    </Function>
    <Function name="QGraphicsScene.selectedItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.collidingItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsScene.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.DescendingOrder"/>
    </Function>
    <Function name="QGraphicsScene.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="pos"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.DescendingOrder"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform" default="QTransform()"/>
    </Function>
    <Function name="QGraphicsScene.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.DescendingOrder"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform" default="QTransform()"/>
    </Function>
    <Function name="QGraphicsScene.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.DescendingOrder"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform" default="QTransform()"/>
    </Function>
    <Function name="QGraphicsScene.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.DescendingOrder"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform" default="QTransform()"/>
    </Function>
    <Function name="QGraphicsScene.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order"/>
      <Argument typename="QTransform" typetype="class" name="deviceTransform" default="QTransform()"/>
    </Function>
    <Function name="QGraphicsScene.itemsBoundingRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.setItemIndexMethod">
      <Argument typename="QGraphicsScene.ItemIndexMethod" typetype="enum" name="method"/>
    </Function>
    <Function name="QGraphicsScene.itemIndexMethod">
      <Argument typename="QGraphicsScene.ItemIndexMethod" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.render">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRectF" typetype="class" name="target" default="QRectF()"/>
      <Argument typename="QRectF" typetype="class" name="source" default="QRectF()"/>
      <Argument typename="Qt.AspectRatioMode" typetype="enum" name="mode" default="Qt.KeepAspectRatio"/>
    </Function>
    <Function name="QGraphicsScene.setSceneRect">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsScene.setSceneRect">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsScene.height">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.width">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.sceneRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsScene.SceneLayers" convert="1">
    <Function name="QGraphicsScene.SceneLayers.__init__"/>
    <Function name="QGraphicsScene.SceneLayers.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__init__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__ixor__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__xor__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__ior__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__or__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__iand__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__and__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__invert__">
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsScene.SceneLayers.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneEvent" inherits="QEvent">
    <Function name="QGraphicsSceneEvent.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneMouseEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneMouseEvent.flags">
      <Argument typename="Qt.MouseEventFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.source">
      <Argument typename="Qt.MouseEventSource" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.modifiers">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.button">
      <Argument typename="Qt.MouseButton" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.buttons">
      <Argument typename="Qt.MouseButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.lastScreenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.lastScenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.lastPos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.buttonDownScreenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="Qt.MouseButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.buttonDownScenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="Qt.MouseButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.buttonDownPos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="Qt.MouseButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.screenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMouseEvent.pos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneWheelEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneWheelEvent.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneWheelEvent.delta">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneWheelEvent.modifiers">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneWheelEvent.buttons">
      <Argument typename="Qt.MouseButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneWheelEvent.screenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneWheelEvent.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneWheelEvent.pos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneContextMenuEvent" inherits="QGraphicsSceneEvent">
    <Enum name="QGraphicsSceneContextMenuEvent.Reason">
      <EnumMember name="QGraphicsSceneContextMenuEvent.Mouse"/>
      <EnumMember name="QGraphicsSceneContextMenuEvent.Keyboard"/>
      <EnumMember name="QGraphicsSceneContextMenuEvent.Other"/>
    </Enum>
    <Function name="QGraphicsSceneContextMenuEvent.reason">
      <Argument typename="QGraphicsSceneContextMenuEvent.Reason" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneContextMenuEvent.modifiers">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneContextMenuEvent.screenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneContextMenuEvent.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneContextMenuEvent.pos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneHoverEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneHoverEvent.modifiers">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHoverEvent.lastScreenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHoverEvent.lastScenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHoverEvent.lastPos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHoverEvent.screenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHoverEvent.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHoverEvent.pos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneHelpEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneHelpEvent.screenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneHelpEvent.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneDragDropEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneDragDropEvent.mimeData">
      <Argument typename="QMimeData" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.source">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.setDropAction">
      <Argument typename="Qt.DropAction" typetype="enum" name="action"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.dropAction">
      <Argument typename="Qt.DropAction" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.acceptProposedAction"/>
    <Function name="QGraphicsSceneDragDropEvent.proposedAction">
      <Argument typename="Qt.DropAction" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.possibleActions">
      <Argument typename="Qt.DropActions" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.modifiers">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.buttons">
      <Argument typename="Qt.MouseButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.screenPos">
      <Argument typename="QPoint" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.scenePos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneDragDropEvent.pos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneResizeEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneResizeEvent.__init__"/>
    <Function name="QGraphicsSceneResizeEvent.newSize">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneResizeEvent.oldSize">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsSceneMoveEvent" inherits="QGraphicsSceneEvent">
    <Function name="QGraphicsSceneMoveEvent.__init__"/>
    <Function name="QGraphicsSceneMoveEvent.newPos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsSceneMoveEvent.oldPos">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsTransform" inherits="QObject">
    <Function name="QGraphicsTransform.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsTransform.update" slot="void update()"/>
    <Function name="QGraphicsTransform.applyTo" abstract="1" virtual="1">
      <Argument typename="QMatrix4x4" typetype="class" name="matrix"/>
    </Function>
  </Class>
  <Class name="QGraphicsScale" inherits="QGraphicsTransform">
    <Function name="QGraphicsScale.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Signal default="1" name="QGraphicsScale.zScaleChanged" sig="void zScaleChanged()"/>
    <Signal default="1" name="QGraphicsScale.yScaleChanged" sig="void yScaleChanged()"/>
    <Signal default="1" name="QGraphicsScale.xScaleChanged" sig="void xScaleChanged()"/>
    <Signal default="1" name="QGraphicsScale.scaleChanged" sig="void scaleChanged()"/>
    <Signal default="1" name="QGraphicsScale.originChanged" sig="void originChanged()"/>
    <Function name="QGraphicsScale.applyTo" virtual="1">
      <Argument typename="QMatrix4x4" typetype="class" name="matrix"/>
    </Function>
    <Function name="QGraphicsScale.setZScale">
      <Argument typename="float"/>
    </Function>
    <Function name="QGraphicsScale.zScale">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsScale.setYScale">
      <Argument typename="float"/>
    </Function>
    <Function name="QGraphicsScale.yScale">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsScale.setXScale">
      <Argument typename="float"/>
    </Function>
    <Function name="QGraphicsScale.xScale">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsScale.setOrigin">
      <Argument typename="QVector3D" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsScale.origin">
      <Argument typename="QVector3D" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsRotation" inherits="QGraphicsTransform">
    <Function name="QGraphicsRotation.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Signal default="1" name="QGraphicsRotation.axisChanged" sig="void axisChanged()"/>
    <Signal default="1" name="QGraphicsRotation.angleChanged" sig="void angleChanged()"/>
    <Signal default="1" name="QGraphicsRotation.originChanged" sig="void originChanged()"/>
    <Function name="QGraphicsRotation.applyTo" virtual="1">
      <Argument typename="QMatrix4x4" typetype="class" name="matrix"/>
    </Function>
    <Function name="QGraphicsRotation.setAxis">
      <Argument typename="QVector3D" typetype="class" name="axis"/>
    </Function>
    <Function name="QGraphicsRotation.setAxis">
      <Argument typename="Qt.Axis" typetype="enum" name="axis"/>
    </Function>
    <Function name="QGraphicsRotation.axis">
      <Argument typename="QVector3D" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsRotation.setAngle">
      <Argument typename="float"/>
    </Function>
    <Function name="QGraphicsRotation.angle">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QGraphicsRotation.setOrigin">
      <Argument typename="QVector3D" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsRotation.origin">
      <Argument typename="QVector3D" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsView" inherits="QAbstractScrollArea">
    <Function name="QGraphicsView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGraphicsView.__init__">
      <Argument typename="QGraphicsScene" typetype="class" name="scene"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QGraphicsView.OptimizationFlag">
      <EnumMember name="QGraphicsView.DontClipPainter"/>
      <EnumMember name="QGraphicsView.DontSavePainterState"/>
      <EnumMember name="QGraphicsView.DontAdjustForAntialiasing"/>
    </Enum>
    <Enum name="QGraphicsView.ViewportUpdateMode">
      <EnumMember name="QGraphicsView.FullViewportUpdate"/>
      <EnumMember name="QGraphicsView.MinimalViewportUpdate"/>
      <EnumMember name="QGraphicsView.SmartViewportUpdate"/>
      <EnumMember name="QGraphicsView.BoundingRectViewportUpdate"/>
      <EnumMember name="QGraphicsView.NoViewportUpdate"/>
    </Enum>
    <Enum name="QGraphicsView.ViewportAnchor">
      <EnumMember name="QGraphicsView.NoAnchor"/>
      <EnumMember name="QGraphicsView.AnchorViewCenter"/>
      <EnumMember name="QGraphicsView.AnchorUnderMouse"/>
    </Enum>
    <Enum name="QGraphicsView.DragMode">
      <EnumMember name="QGraphicsView.NoDrag"/>
      <EnumMember name="QGraphicsView.ScrollHandDrag"/>
      <EnumMember name="QGraphicsView.RubberBandDrag"/>
    </Enum>
    <Enum name="QGraphicsView.CacheModeFlag">
      <EnumMember name="QGraphicsView.CacheNone"/>
      <EnumMember name="QGraphicsView.CacheBackground"/>
    </Enum>
    <Signal default="1" name="QGraphicsView.rubberBandChanged" sig="void rubberBandChanged( ::QRect, ::QPointF, ::QPointF)"/>
    <Function name="QGraphicsView.rubberBandRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.isTransformed">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsView.resetTransform"/>
    <Function name="QGraphicsView.setTransform">
      <Argument typename="QTransform" typetype="class" name="matrix"/>
      <Argument typename="bool" name="combine" default="False"/>
    </Function>
    <Function name="QGraphicsView.viewportTransform">
      <Argument typename="QTransform" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.transform">
      <Argument typename="QTransform" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setRubberBandSelectionMode">
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QGraphicsView.rubberBandSelectionMode">
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setOptimizationFlags">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QGraphicsView.setOptimizationFlag">
      <Argument typename="QGraphicsView.OptimizationFlag" typetype="enum" name="flag"/>
      <Argument typename="bool" name="enabled" default="True"/>
    </Function>
    <Function name="QGraphicsView.optimizationFlags">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setViewportUpdateMode">
      <Argument typename="QGraphicsView.ViewportUpdateMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QGraphicsView.viewportUpdateMode">
      <Argument typename="QGraphicsView.ViewportUpdateMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsView.drawForeground" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsView.drawBackground" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsView.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QGraphicsView.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QGraphicsView.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.viewportEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGraphicsView.setupViewport" slot="void setupViewport( ::QWidget*)" virtual="1">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QGraphicsView.updateSceneRect" slot="void updateSceneRect(const  ::QRectF&amp;)">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsView.updateScene" slot="void updateScene(const QList&lt;QRectF&gt;&amp;)">
      <Argument typename="unknown-type" typetype="mappedtype" name="rects"/>
    </Function>
    <Function name="QGraphicsView.invalidateScene" slot="void invalidateScene(const  ::QRectF&amp; = QRectF(), ::QGraphicsScene::SceneLayers = QGraphicsScene.AllLayers)">
      <Argument typename="QRectF" typetype="class" name="rect" default="QRectF()"/>
      <Argument typename="QGraphicsScene.SceneLayers" typetype="class" name="layers" default="QGraphicsScene.AllLayers"/>
    </Function>
    <Function name="QGraphicsView.setForegroundBrush">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QGraphicsView.foregroundBrush">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setBackgroundBrush">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QGraphicsView.backgroundBrush">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
    </Function>
    <Function name="QGraphicsView.mapFromScene">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="QPointF" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsView.mapFromScene">
      <Argument typename="QPolygon" typetype="class" dir="out"/>
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsView.mapFromScene">
      <Argument typename="QPolygon" typetype="class" dir="out"/>
      <Argument typename="QPolygonF" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsView.mapFromScene">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsView.mapFromScene">
      <Argument typename="QPoint" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsView.mapFromScene">
      <Argument typename="QPolygon" typetype="class" dir="out"/>
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
    </Function>
    <Function name="QGraphicsView.mapToScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="point"/>
    </Function>
    <Function name="QGraphicsView.mapToScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsView.mapToScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="QPolygon" typetype="class" name="polygon"/>
    </Function>
    <Function name="QGraphicsView.mapToScene">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QGraphicsView.mapToScene">
      <Argument typename="QPointF" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QGraphicsView.mapToScene">
      <Argument typename="QPolygonF" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QGraphicsView.itemAt">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QGraphicsView.itemAt">
      <Argument typename="QGraphicsItem" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="x"/>
      <Argument typename="int" name="y"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="x"/>
      <Argument typename="int" name="y"/>
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QPolygon" typetype="class" name="polygon"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsView.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QPainterPath" typetype="class" name="path"/>
      <Argument typename="Qt.ItemSelectionMode" typetype="enum" name="mode" default="Qt.IntersectsItemShape"/>
    </Function>
    <Function name="QGraphicsView.render">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRectF" typetype="class" name="target" default="QRectF()"/>
      <Argument typename="QRect" typetype="class" name="source" default="QRect()"/>
      <Argument typename="Qt.AspectRatioMode" typetype="enum" name="mode" default="Qt.KeepAspectRatio"/>
    </Function>
    <Function name="QGraphicsView.fitInView">
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="Qt.AspectRatioMode" typetype="enum" name="mode" default="Qt.IgnoreAspectRatio"/>
    </Function>
    <Function name="QGraphicsView.fitInView">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="Qt.AspectRatioMode" typetype="enum" name="mode" default="Qt.IgnoreAspectRatio"/>
    </Function>
    <Function name="QGraphicsView.fitInView">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="Qt.AspectRatioMode" typetype="enum" name="mode" default="Qt.IgnoreAspectRatio"/>
    </Function>
    <Function name="QGraphicsView.ensureVisible">
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QGraphicsView.ensureVisible">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QGraphicsView.ensureVisible">
      <Argument typename="float" name="x"/>
      <Argument typename="float" name="y"/>
      <Argument typename="float" name="w"/>
      <Argument typename="float" name="h"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QGraphicsView.centerOn">
      <Argument typename="QPointF" typetype="class" name="pos"/>
    </Function>
    <Function name="QGraphicsView.centerOn">
      <Argument typename="QGraphicsItem" typetype="class" name="item"/>
    </Function>
    <Function name="QGraphicsView.centerOn">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
    </Function>
    <Function name="QGraphicsView.translate">
      <Argument typename="float" name="dx"/>
      <Argument typename="float" name="dy"/>
    </Function>
    <Function name="QGraphicsView.shear">
      <Argument typename="float" name="sh"/>
      <Argument typename="float" name="sv"/>
    </Function>
    <Function name="QGraphicsView.scale">
      <Argument typename="float" name="sx"/>
      <Argument typename="float" name="sy"/>
    </Function>
    <Function name="QGraphicsView.rotate">
      <Argument typename="float" name="angle"/>
    </Function>
    <Function name="QGraphicsView.setSceneRect">
      <Argument typename="QRectF" typetype="class" name="rect"/>
    </Function>
    <Function name="QGraphicsView.setSceneRect">
      <Argument typename="float" name="ax"/>
      <Argument typename="float" name="ay"/>
      <Argument typename="float" name="aw"/>
      <Argument typename="float" name="ah"/>
    </Function>
    <Function name="QGraphicsView.sceneRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setScene">
      <Argument typename="QGraphicsScene" typetype="class" name="scene"/>
    </Function>
    <Function name="QGraphicsView.scene">
      <Argument typename="QGraphicsScene" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setInteractive">
      <Argument typename="bool" name="allowed"/>
    </Function>
    <Function name="QGraphicsView.isInteractive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGraphicsView.resetCachedContent"/>
    <Function name="QGraphicsView.setCacheMode">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" name="mode"/>
    </Function>
    <Function name="QGraphicsView.cacheMode">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setDragMode">
      <Argument typename="QGraphicsView.DragMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QGraphicsView.dragMode">
      <Argument typename="QGraphicsView.DragMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setResizeAnchor">
      <Argument typename="QGraphicsView.ViewportAnchor" typetype="enum" name="anchor"/>
    </Function>
    <Function name="QGraphicsView.resizeAnchor">
      <Argument typename="QGraphicsView.ViewportAnchor" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setTransformationAnchor">
      <Argument typename="QGraphicsView.ViewportAnchor" typetype="enum" name="anchor"/>
    </Function>
    <Function name="QGraphicsView.transformationAnchor">
      <Argument typename="QGraphicsView.ViewportAnchor" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QGraphicsView.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.setRenderHints">
      <Argument typename="QPainter.RenderHints" typetype="class" name="hints"/>
    </Function>
    <Function name="QGraphicsView.setRenderHint">
      <Argument typename="QPainter.RenderHint" typetype="enum" name="hint"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QGraphicsView.renderHints">
      <Argument typename="QPainter.RenderHints" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsView.CacheMode" convert="1">
    <Function name="QGraphicsView.CacheMode.__init__"/>
    <Function name="QGraphicsView.CacheMode.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__init__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsView.CacheMode" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsView.CacheMode" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__ixor__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__xor__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__ior__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__or__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__iand__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__and__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__invert__">
      <Argument typename="QGraphicsView.CacheMode" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.CacheMode.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QGraphicsView.OptimizationFlags" convert="1">
    <Function name="QGraphicsView.OptimizationFlags.__init__"/>
    <Function name="QGraphicsView.OptimizationFlags.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__init__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__ixor__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__xor__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__ior__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__or__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__iand__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__and__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__invert__">
      <Argument typename="QGraphicsView.OptimizationFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QGraphicsView.OptimizationFlags.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QGridLayout" inherits="QLayout">
    <Function name="QGridLayout.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QGridLayout.__init__"/>
    <Function name="QGridLayout.itemAtPosition">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGridLayout.spacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGridLayout.setSpacing">
      <Argument typename="int" name="spacing"/>
    </Function>
    <Function name="QGridLayout.verticalSpacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGridLayout.setVerticalSpacing">
      <Argument typename="int" name="spacing"/>
    </Function>
    <Function name="QGridLayout.horizontalSpacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGridLayout.setHorizontalSpacing">
      <Argument typename="int" name="spacing"/>
    </Function>
    <Function name="QGridLayout.getItemPosition">
      <Argument typename="int" name="idx"/>
      <Argument typename="int" name="row" dir="out"/>
      <Argument typename="int" name="column" dir="out"/>
      <Argument typename="int" name="rowSpan" dir="out"/>
      <Argument typename="int" name="columnSpan" dir="out"/>
    </Function>
    <Function name="QGridLayout.setDefaultPositioning">
      <Argument typename="int" name="n"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orient"/>
    </Function>
    <Function name="QGridLayout.addItem">
      <Argument typename="QLayoutItem" typetype="class" name="item" transfer="to"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="rowSpan" default="1"/>
      <Argument typename="int" name="columnSpan" default="1"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="Qt.Alignment()"/>
    </Function>
    <Function name="QGridLayout.addItem" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" transfer="to"/>
    </Function>
    <Function name="QGridLayout.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QGridLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGridLayout.takeAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QGridLayout.itemAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QGridLayout.originCorner">
      <Argument typename="Qt.Corner" typetype="enum" dir="out"/>
    </Function>
    <Function name="QGridLayout.setOriginCorner">
      <Argument typename="Qt.Corner" typetype="enum"/>
    </Function>
    <Function name="QGridLayout.addLayout">
      <Argument typename="QLayout" typetype="class" transfer="to"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="Qt.Alignment()"/>
    </Function>
    <Function name="QGridLayout.addLayout">
      <Argument typename="QLayout" typetype="class" transfer="to"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="rowSpan"/>
      <Argument typename="int" name="columnSpan"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="Qt.Alignment()"/>
    </Function>
    <Function name="QGridLayout.addWidget">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QGridLayout.addWidget">
      <Argument typename="QWidget" typetype="class"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="0"/>
    </Function>
    <Function name="QGridLayout.addWidget">
      <Argument typename="QWidget" typetype="class"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="rowSpan"/>
      <Argument typename="int" name="columnSpan"/>
      <Argument typename="Qt.Alignment" typetype="class" name="alignment" default="0"/>
    </Function>
    <Function name="QGridLayout.invalidate" virtual="1"/>
    <Function name="QGridLayout.expandingDirections" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QGridLayout.minimumHeightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QGridLayout.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QGridLayout.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGridLayout.cellRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGridLayout.rowCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGridLayout.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QGridLayout.columnMinimumWidth">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGridLayout.rowMinimumHeight">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGridLayout.setColumnMinimumWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="minSize"/>
    </Function>
    <Function name="QGridLayout.setRowMinimumHeight">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="minSize"/>
    </Function>
    <Function name="QGridLayout.columnStretch">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QGridLayout.rowStretch">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QGridLayout.setColumnStretch">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QGridLayout.setRowStretch">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QGridLayout.maximumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QGridLayout.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QGridLayout.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QGroupBox" inherits="QWidget">
    <Function name="QGroupBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGroupBox.__init__">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QGroupBox.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGroupBox.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGroupBox.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QGroupBox.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QGroupBox.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QGroupBox.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QGroupBox.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QGroupBox.childEvent" virtual="1">
      <Argument typename="QChildEvent" typetype="class"/>
    </Function>
    <Function name="QGroupBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QGroupBox.initStyleOption">
      <Argument typename="QStyleOptionGroupBox" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QGroupBox.toggled" sig="void toggled(bool)"/>
    <Signal default="1" name="QGroupBox.clicked" sig="void clicked(bool = 0)"/>
    <Function name="QGroupBox.setChecked" slot="void setChecked(bool)">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QGroupBox.isChecked">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGroupBox.setCheckable">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QGroupBox.isCheckable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGroupBox.setFlat">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QGroupBox.isFlat">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QGroupBox.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QGroupBox.setAlignment">
      <Argument typename="int"/>
    </Function>
    <Function name="QGroupBox.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QGroupBox.setTitle">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QGroupBox.title">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QHeaderView" inherits="QAbstractItemView">
    <Function name="QHeaderView.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QHeaderView.ResizeMode">
      <EnumMember name="QHeaderView.Interactive"/>
      <EnumMember name="QHeaderView.Fixed"/>
      <EnumMember name="QHeaderView.Stretch"/>
      <EnumMember name="QHeaderView.ResizeToContents"/>
      <EnumMember name="QHeaderView.Custom"/>
    </Enum>
    <Function name="QHeaderView.setMaximumSectionSize">
      <Argument typename="int" name="size"/>
    </Function>
    <Function name="QHeaderView.maximumSectionSize">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.resizeContentsPrecision">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.setResizeContentsPrecision">
      <Argument typename="int" name="precision"/>
    </Function>
    <Function name="QHeaderView.setVisible" virtual="1">
      <Argument typename="bool" name="v"/>
    </Function>
    <Function name="QHeaderView.setSectionResizeMode">
      <Argument typename="int" name="logicalIndex"/>
      <Argument typename="QHeaderView.ResizeMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QHeaderView.setSectionResizeMode">
      <Argument typename="QHeaderView.ResizeMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QHeaderView.sectionResizeMode">
      <Argument typename="QHeaderView.ResizeMode" typetype="enum" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.sectionsClickable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.setSectionsClickable">
      <Argument typename="bool" name="clickable"/>
    </Function>
    <Function name="QHeaderView.sectionsMovable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.setSectionsMovable">
      <Argument typename="bool" name="movable"/>
    </Function>
    <Function name="QHeaderView.initStyleOption">
      <Argument typename="QStyleOptionHeader" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QHeaderView.sortIndicatorChanged" sig="void sortIndicatorChanged(int, ::Qt::SortOrder)"/>
    <Signal default="1" name="QHeaderView.sectionEntered" sig="void sectionEntered(int)"/>
    <Function name="QHeaderView.setOffsetToLastSection" slot="void setOffsetToLastSection()"/>
    <Function name="QHeaderView.reset" virtual="1"/>
    <Function name="QHeaderView.restoreState">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QByteArray" typetype="class" name="state"/>
    </Function>
    <Function name="QHeaderView.saveState">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
    </Function>
    <Function name="QHeaderView.setMinimumSectionSize">
      <Argument typename="int" name="size"/>
    </Function>
    <Function name="QHeaderView.minimumSectionSize">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.setCascadingSectionResizes">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QHeaderView.cascadingSectionResizes">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.swapSections">
      <Argument typename="int" name="first"/>
      <Argument typename="int" name="second"/>
    </Function>
    <Function name="QHeaderView.sectionsHidden">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.setDefaultAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QHeaderView.defaultAlignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QHeaderView.setDefaultSectionSize">
      <Argument typename="int" name="size"/>
    </Function>
    <Function name="QHeaderView.defaultSectionSize">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.hiddenSectionCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.showSection">
      <Argument typename="int" name="alogicalIndex"/>
    </Function>
    <Function name="QHeaderView.hideSection">
      <Argument typename="int" name="alogicalIndex"/>
    </Function>
    <Function name="QHeaderView.visualRegionForSelection" virtual="1">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QItemSelection" typetype="class" name="selection"/>
    </Function>
    <Function name="QHeaderView.setSelection" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QHeaderView.moveCursor" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QAbstractItemView.CursorAction" typetype="enum"/>
      <Argument typename="Qt.KeyboardModifiers" typetype="class"/>
    </Function>
    <Function name="QHeaderView.isIndexHidden" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QHeaderView.indexAt" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QHeaderView.scrollTo" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint"/>
    </Function>
    <Function name="QHeaderView.visualRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QHeaderView.rowsInserted" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QHeaderView.dataChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="topLeft"/>
      <Argument typename="QModelIndex" typetype="class" name="bottomRight"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="roles" default="[]"/>
    </Function>
    <Function name="QHeaderView.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QHeaderView.updateGeometries" virtual="1"/>
    <Function name="QHeaderView.verticalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.horizontalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.sectionSizeFromContents" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.paintSection" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.viewportEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QHeaderView.currentChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="current"/>
      <Argument typename="QModelIndex" typetype="class" name="old"/>
    </Function>
    <Function name="QHeaderView.initializeSections"/>
    <Function name="QHeaderView.initializeSections">
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QHeaderView.initialize"/>
    <Function name="QHeaderView.sectionsAboutToBeRemoved" slot="void sectionsAboutToBeRemoved(const  ::QModelIndex&amp;,int,int)">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="logicalFirst"/>
      <Argument typename="int" name="logicalLast"/>
    </Function>
    <Function name="QHeaderView.sectionsInserted" slot="void sectionsInserted(const  ::QModelIndex&amp;,int,int)">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="logicalFirst"/>
      <Argument typename="int" name="logicalLast"/>
    </Function>
    <Function name="QHeaderView.resizeSections" slot="void resizeSections()"/>
    <Function name="QHeaderView.resizeSections">
      <Argument typename="QHeaderView.ResizeMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QHeaderView.updateSection" slot="void updateSection(int)">
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Signal default="1" name="QHeaderView.sectionHandleDoubleClicked" sig="void sectionHandleDoubleClicked(int)"/>
    <Signal default="1" name="QHeaderView.sectionCountChanged" sig="void sectionCountChanged(int,int)"/>
    <Signal default="1" name="QHeaderView.sectionDoubleClicked" sig="void sectionDoubleClicked(int)"/>
    <Signal default="1" name="QHeaderView.sectionClicked" sig="void sectionClicked(int)"/>
    <Signal default="1" name="QHeaderView.sectionPressed" sig="void sectionPressed(int)"/>
    <Signal default="1" name="QHeaderView.sectionResized" sig="void sectionResized(int,int,int)"/>
    <Signal default="1" name="QHeaderView.sectionMoved" sig="void sectionMoved(int,int,int)"/>
    <Signal default="1" name="QHeaderView.geometriesChanged" sig="void geometriesChanged()"/>
    <Function name="QHeaderView.setOffsetToSectionPosition" slot="void setOffsetToSectionPosition(int)">
      <Argument typename="int" name="visualIndex"/>
    </Function>
    <Function name="QHeaderView.headerDataChanged" slot="void headerDataChanged( ::Qt::Orientation,int,int)">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="int" name="logicalFirst"/>
      <Argument typename="int" name="logicalLast"/>
    </Function>
    <Function name="QHeaderView.setOffset" slot="void setOffset(int)">
      <Argument typename="int" name="offset"/>
    </Function>
    <Function name="QHeaderView.sectionsMoved">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.setStretchLastSection">
      <Argument typename="bool" name="stretch"/>
    </Function>
    <Function name="QHeaderView.stretchLastSection">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.sortIndicatorOrder">
      <Argument typename="Qt.SortOrder" typetype="enum" dir="out"/>
    </Function>
    <Function name="QHeaderView.sortIndicatorSection">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.setSortIndicator">
      <Argument typename="int" name="logicalIndex"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order"/>
    </Function>
    <Function name="QHeaderView.isSortIndicatorShown">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.setSortIndicatorShown">
      <Argument typename="bool" name="show"/>
    </Function>
    <Function name="QHeaderView.stretchSectionCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.highlightSections">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QHeaderView.setHighlightSections">
      <Argument typename="bool" name="highlight"/>
    </Function>
    <Function name="QHeaderView.logicalIndex">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="visualIndex"/>
    </Function>
    <Function name="QHeaderView.visualIndex">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.setSectionHidden">
      <Argument typename="int" name="logicalIndex"/>
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QHeaderView.isSectionHidden">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.resizeSection">
      <Argument typename="int" name="logicalIndex"/>
      <Argument typename="int" name="size"/>
    </Function>
    <Function name="QHeaderView.moveSection">
      <Argument typename="int" name="from"/>
      <Argument typename="int" name="to"/>
    </Function>
    <Function name="QHeaderView.sectionViewportPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.sectionPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.sectionSize">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.logicalIndexAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="position"/>
    </Function>
    <Function name="QHeaderView.logicalIndexAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QHeaderView.logicalIndexAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="apos"/>
    </Function>
    <Function name="QHeaderView.visualIndexAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="position"/>
    </Function>
    <Function name="QHeaderView.sectionSizeHint">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QHeaderView.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QHeaderView.length">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.offset">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QHeaderView.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QHeaderView.setModel" virtual="1">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
  </Class>
  <Class name="QInputDialog" inherits="QDialog">
    <Function name="QInputDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QInputDialog.InputMode">
      <EnumMember name="QInputDialog.TextInput"/>
      <EnumMember name="QInputDialog.IntInput"/>
      <EnumMember name="QInputDialog.DoubleInput"/>
    </Enum>
    <Enum name="QInputDialog.InputDialogOption">
      <EnumMember name="QInputDialog.NoButtons"/>
      <EnumMember name="QInputDialog.UseListViewForComboBoxItems"/>
      <EnumMember name="QInputDialog.UsePlainTextEditForTextInput"/>
    </Enum>
    <Signal default="1" name="QInputDialog.doubleValueSelected" sig="void doubleValueSelected(double)"/>
    <Signal default="1" name="QInputDialog.doubleValueChanged" sig="void doubleValueChanged(double)"/>
    <Signal default="1" name="QInputDialog.intValueSelected" sig="void intValueSelected(int)"/>
    <Signal default="1" name="QInputDialog.intValueChanged" sig="void intValueChanged(int)"/>
    <Signal default="1" name="QInputDialog.textValueSelected" sig="void textValueSelected(const QString&amp;)"/>
    <Signal default="1" name="QInputDialog.textValueChanged" sig="void textValueChanged(const QString&amp;)"/>
    <Function name="QInputDialog.done" virtual="1">
      <Argument typename="int" name="result"/>
    </Function>
    <Function name="QInputDialog.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QInputDialog.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QInputDialog.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QInputDialog.open" virtual="1"/>
    <Function name="QInputDialog.open">
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QInputDialog.cancelButtonText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QInputDialog.setCancelButtonText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QInputDialog.okButtonText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QInputDialog.setOkButtonText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QInputDialog.doubleDecimals">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.setDoubleDecimals">
      <Argument typename="int" name="decimals"/>
    </Function>
    <Function name="QInputDialog.setDoubleRange">
      <Argument typename="float" name="min"/>
      <Argument typename="float" name="max"/>
    </Function>
    <Function name="QInputDialog.doubleMaximum">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QInputDialog.setDoubleMaximum">
      <Argument typename="float" name="max"/>
    </Function>
    <Function name="QInputDialog.doubleMinimum">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QInputDialog.setDoubleMinimum">
      <Argument typename="float" name="min"/>
    </Function>
    <Function name="QInputDialog.doubleValue">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QInputDialog.setDoubleValue">
      <Argument typename="float" name="value"/>
    </Function>
    <Function name="QInputDialog.intStep">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.setIntStep">
      <Argument typename="int" name="step"/>
    </Function>
    <Function name="QInputDialog.setIntRange">
      <Argument typename="int" name="min"/>
      <Argument typename="int" name="max"/>
    </Function>
    <Function name="QInputDialog.intMaximum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.setIntMaximum">
      <Argument typename="int" name="max"/>
    </Function>
    <Function name="QInputDialog.intMinimum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.setIntMinimum">
      <Argument typename="int" name="min"/>
    </Function>
    <Function name="QInputDialog.intValue">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.setIntValue">
      <Argument typename="int" name="value"/>
    </Function>
    <Function name="QInputDialog.comboBoxItems">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QInputDialog.setComboBoxItems">
      <Argument typename="QStringList" typetype="mappedtype" name="items"/>
    </Function>
    <Function name="QInputDialog.isComboBoxEditable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QInputDialog.setComboBoxEditable">
      <Argument typename="bool" name="editable"/>
    </Function>
    <Function name="QInputDialog.textEchoMode">
      <Argument typename="QLineEdit.EchoMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QInputDialog.setTextEchoMode">
      <Argument typename="QLineEdit.EchoMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QInputDialog.textValue">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QInputDialog.setTextValue">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QInputDialog.options">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QInputDialog.setOptions">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" name="options"/>
    </Function>
    <Function name="QInputDialog.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QInputDialog.InputDialogOption" typetype="enum" name="option"/>
    </Function>
    <Function name="QInputDialog.setOption">
      <Argument typename="QInputDialog.InputDialogOption" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QInputDialog.labelText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QInputDialog.setLabelText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QInputDialog.inputMode">
      <Argument typename="QInputDialog.InputMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QInputDialog.setInputMode">
      <Argument typename="QInputDialog.InputMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QInputDialog.getMultiLineText" static="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
      <Argument typename="QString" typetype="mappedtype" name="text" default="''"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
      <Argument typename="Qt.InputMethodHints" typetype="class" name="inputMethodHints" default="Qt.ImhNone"/>
    </Function>
    <Function name="QInputDialog.getItem" static="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
      <Argument typename="QStringList" typetype="mappedtype" name="items"/>
      <Argument typename="int" name="current" default="0"/>
      <Argument typename="bool" name="editable" default="True"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
      <Argument typename="Qt.InputMethodHints" typetype="class" name="inputMethodHints" default="Qt.ImhNone"/>
    </Function>
    <Function name="QInputDialog.getDouble" static="1">
      <Argument typename="float" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
      <Argument typename="float" name="value" default="0"/>
      <Argument typename="float" name="min" default="-2147483647"/>
      <Argument typename="float" name="max" default="2147483647"/>
      <Argument typename="int" name="decimals" default="1"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QInputDialog.getInt" static="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
      <Argument typename="int" name="value" default="0"/>
      <Argument typename="int" name="min" default="-2147483647"/>
      <Argument typename="int" name="max" default="2147483647"/>
      <Argument typename="int" name="step" default="1"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QInputDialog.getText" static="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
      <Argument typename="QLineEdit.EchoMode" typetype="enum" name="echo" default="QLineEdit.Normal"/>
      <Argument typename="QString" typetype="mappedtype" name="text" default="''"/>
      <Argument typename="bool" name="ok" dir="out"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
      <Argument typename="Qt.InputMethodHints" typetype="class" name="inputMethodHints" default="Qt.ImhNone"/>
    </Function>
  </Class>
  <Class name="QInputDialog.InputDialogOptions" convert="1">
    <Function name="QInputDialog.InputDialogOptions.__init__"/>
    <Function name="QInputDialog.InputDialogOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__init__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__ixor__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__xor__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__ior__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__or__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__iand__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__and__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__invert__">
      <Argument typename="QInputDialog.InputDialogOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QInputDialog.InputDialogOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QItemDelegate" inherits="QAbstractItemDelegate">
    <Function name="QItemDelegate.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QItemDelegate.editorEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QItemDelegate.drawFocus" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
    </Function>
    <Function name="QItemDelegate.drawDisplay" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QItemDelegate.drawDecoration" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QItemDelegate.drawCheck" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="Qt.CheckState" typetype="enum" name="state"/>
    </Function>
    <Function name="QItemDelegate.drawBackground">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.setClipping">
      <Argument typename="bool" name="clip"/>
    </Function>
    <Function name="QItemDelegate.hasClipping">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QItemDelegate.setItemEditorFactory">
      <Argument typename="QItemEditorFactory" typetype="class" name="factory"/>
    </Function>
    <Function name="QItemDelegate.itemEditorFactory">
      <Argument typename="QItemEditorFactory" typetype="class" dir="out"/>
    </Function>
    <Function name="QItemDelegate.updateEditorGeometry" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.setModelData" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.setEditorData" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.createEditor" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QItemDelegate.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
  </Class>
  <Class name="QItemEditorCreatorBase">
    <Function name="QItemEditorCreatorBase.__init__"/>
    <Function name="QItemEditorCreatorBase.__init__">
      <Argument typename="QItemEditorCreatorBase" typetype="class"/>
    </Function>
    <Function name="QItemEditorCreatorBase.valuePropertyName" abstract="1" virtual="1">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
    </Function>
    <Function name="QItemEditorCreatorBase.createWidget" abstract="1" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
  </Class>
  <Class name="QItemEditorFactory">
    <Function name="QItemEditorFactory.__init__"/>
    <Function name="QItemEditorFactory.__init__">
      <Argument typename="QItemEditorFactory" typetype="class"/>
    </Function>
    <Function name="QItemEditorFactory.setDefaultFactory" static="1">
      <Argument typename="QItemEditorFactory" typetype="class" name="factory" transfer="to"/>
    </Function>
    <Function name="QItemEditorFactory.defaultFactory" static="1">
      <Argument typename="QItemEditorFactory" typetype="class" dir="out"/>
    </Function>
    <Function name="QItemEditorFactory.registerEditor">
      <Argument typename="int" name="userType"/>
      <Argument typename="QItemEditorCreatorBase" typetype="class" name="creator" transfer="to"/>
    </Function>
    <Function name="QItemEditorFactory.valuePropertyName" virtual="1">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
      <Argument typename="int" name="userType"/>
    </Function>
    <Function name="QItemEditorFactory.createEditor" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="userType"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
  </Class>
  <Class name="QKeyEventTransition" inherits="QEventTransition">
    <Function name="QKeyEventTransition.__init__">
      <Argument typename="QState" typetype="class" name="sourceState" transfer="this" default="None"/>
    </Function>
    <Function name="QKeyEventTransition.__init__">
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent.Type" typetype="enum" name="type"/>
      <Argument typename="int" name="key"/>
      <Argument typename="QState" typetype="class" name="sourceState" transfer="this" default="None"/>
    </Function>
    <Function name="QKeyEventTransition.eventTest" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QKeyEventTransition.onTransition" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QKeyEventTransition.setModifierMask">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Function name="QKeyEventTransition.modifierMask">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QKeyEventTransition.setKey">
      <Argument typename="int" name="key"/>
    </Function>
    <Function name="QKeyEventTransition.key">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QKeySequenceEdit" inherits="QWidget">
    <Function name="QKeySequenceEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QKeySequenceEdit.__init__">
      <Argument typename="QKeySequence" typetype="class" name="keySequence"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QKeySequenceEdit.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class"/>
    </Function>
    <Function name="QKeySequenceEdit.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QKeySequenceEdit.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QKeySequenceEdit.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Signal default="1" name="QKeySequenceEdit.keySequenceChanged" sig="void keySequenceChanged(const  ::QKeySequence&amp;)"/>
    <Signal default="1" name="QKeySequenceEdit.editingFinished" sig="void editingFinished()"/>
    <Function name="QKeySequenceEdit.clear" slot="void clear()"/>
    <Function name="QKeySequenceEdit.setKeySequence" slot="void setKeySequence(const  ::QKeySequence&amp;)">
      <Argument typename="QKeySequence" typetype="class" name="keySequence"/>
    </Function>
    <Function name="QKeySequenceEdit.keySequence">
      <Argument typename="QKeySequence" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QLabel" inherits="QFrame">
    <Function name="QLabel.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QLabel.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QLabel.selectionStart">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLabel.selectedText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QLabel.hasSelectedText">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLabel.setSelection">
      <Argument typename="int"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QLabel.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QLabel.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QLabel.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QLabel.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QLabel.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QLabel.linkHovered" sig="void linkHovered(const QString&amp;)"/>
    <Signal default="1" name="QLabel.linkActivated" sig="void linkActivated(const QString&amp;)"/>
    <Function name="QLabel.setText" slot="void setText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QLabel.setPixmap" slot="void setPixmap(const  ::QPixmap&amp;)">
      <Argument typename="QPixmap" typetype="class"/>
    </Function>
    <Function name="QLabel.setPicture" slot="void setPicture(const  ::QPicture&amp;)">
      <Argument typename="QPicture" typetype="class"/>
    </Function>
    <Function name="QLabel.setNum" slot="void setNum(double)">
      <Argument typename="float"/>
    </Function>
    <Function name="QLabel.setNum" slot="void setNum(int)">
      <Argument typename="int"/>
    </Function>
    <Function name="QLabel.setMovie" slot="void setMovie( ::QMovie*)">
      <Argument typename="QMovie" typetype="class" name="movie"/>
    </Function>
    <Function name="QLabel.clear" slot="void clear()"/>
    <Function name="QLabel.setOpenExternalLinks">
      <Argument typename="bool" name="open"/>
    </Function>
    <Function name="QLabel.textInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.setTextInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QLabel.openExternalLinks">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLabel.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QLabel.buddy">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.setBuddy">
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QLabel.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.setScaledContents">
      <Argument typename="bool"/>
    </Function>
    <Function name="QLabel.hasScaledContents">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLabel.setMargin">
      <Argument typename="int"/>
    </Function>
    <Function name="QLabel.margin">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLabel.setIndent">
      <Argument typename="int"/>
    </Function>
    <Function name="QLabel.indent">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLabel.wordWrap">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLabel.setWordWrap">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QLabel.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class"/>
    </Function>
    <Function name="QLabel.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.setTextFormat">
      <Argument typename="Qt.TextFormat" typetype="enum"/>
    </Function>
    <Function name="QLabel.textFormat">
      <Argument typename="Qt.TextFormat" typetype="enum" dir="out"/>
    </Function>
    <Function name="QLabel.movie">
      <Argument typename="QMovie" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.picture">
      <Argument typename="QPicture" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.pixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
    </Function>
    <Function name="QLabel.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QSpacerItem" inherits="QLayoutItem">
    <Function name="QSpacerItem.__init__">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="hPolicy" default="QSizePolicy.Minimum"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="vPolicy" default="QSizePolicy.Minimum"/>
    </Function>
    <Function name="QSpacerItem.__init__">
      <Argument typename="QSpacerItem" typetype="class"/>
    </Function>
    <Function name="QSpacerItem.spacerItem" virtual="1">
      <Argument typename="QSpacerItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QSpacerItem.geometry" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QSpacerItem.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QSpacerItem.isEmpty" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSpacerItem.expandingDirections" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QSpacerItem.maximumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSpacerItem.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSpacerItem.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSpacerItem.changeSize">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="hPolicy" default="QSizePolicy.Minimum"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="vPolicy" default="QSizePolicy.Minimum"/>
    </Function>
  </Class>
  <Class name="QWidgetItem" inherits="QLayoutItem">
    <Function name="QWidgetItem.__init__">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QWidgetItem.controlTypes" virtual="1">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetItem.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QWidgetItem.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidgetItem.widget" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetItem.geometry" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetItem.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class"/>
    </Function>
    <Function name="QWidgetItem.isEmpty" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWidgetItem.expandingDirections" virtual="1">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetItem.maximumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetItem.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetItem.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QLCDNumber" inherits="QFrame">
    <Function name="QLCDNumber.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QLCDNumber.__init__">
      <Argument typename="int" name="numDigits"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QLCDNumber.SegmentStyle">
      <EnumMember name="QLCDNumber.Outline"/>
      <EnumMember name="QLCDNumber.Filled"/>
      <EnumMember name="QLCDNumber.Flat"/>
    </Enum>
    <Enum name="QLCDNumber.Mode">
      <EnumMember name="QLCDNumber.Hex"/>
      <EnumMember name="QLCDNumber.Dec"/>
      <EnumMember name="QLCDNumber.Oct"/>
      <EnumMember name="QLCDNumber.Bin"/>
    </Enum>
    <Function name="QLCDNumber.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QLCDNumber.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QLCDNumber.overflow" sig="void overflow()"/>
    <Function name="QLCDNumber.setSmallDecimalPoint">
      <Argument typename="bool"/>
    </Function>
    <Function name="QLCDNumber.setBinMode"/>
    <Function name="QLCDNumber.setOctMode"/>
    <Function name="QLCDNumber.setDecMode"/>
    <Function name="QLCDNumber.setHexMode"/>
    <Function name="QLCDNumber.display">
      <Argument typename="QString" typetype="mappedtype" name="str"/>
    </Function>
    <Function name="QLCDNumber.display">
      <Argument typename="float" name="num"/>
    </Function>
    <Function name="QLCDNumber.display">
      <Argument typename="int" name="num"/>
    </Function>
    <Function name="QLCDNumber.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLCDNumber.intValue">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLCDNumber.value">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QLCDNumber.setSegmentStyle">
      <Argument typename="QLCDNumber.SegmentStyle" typetype="enum"/>
    </Function>
    <Function name="QLCDNumber.segmentStyle">
      <Argument typename="QLCDNumber.SegmentStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QLCDNumber.setMode">
      <Argument typename="QLCDNumber.Mode" typetype="enum"/>
    </Function>
    <Function name="QLCDNumber.mode">
      <Argument typename="QLCDNumber.Mode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QLCDNumber.checkOverflow">
      <Argument typename="bool" dir="out"/>
      <Argument typename="float" name="num"/>
    </Function>
    <Function name="QLCDNumber.checkOverflow">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="num"/>
    </Function>
    <Function name="QLCDNumber.setNumDigits">
      <Argument typename="int" name="nDigits"/>
    </Function>
    <Function name="QLCDNumber.setDigitCount">
      <Argument typename="int" name="nDigits"/>
    </Function>
    <Function name="QLCDNumber.digitCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLCDNumber.smallDecimalPoint">
      <Argument typename="bool" dir="out"/>
    </Function>
  </Class>
  <Class name="QLineEdit" inherits="QWidget">
    <Function name="QLineEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QLineEdit.__init__">
      <Argument typename="QString" typetype="mappedtype" name="contents"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QLineEdit.ActionPosition">
      <EnumMember name="QLineEdit.LeadingPosition"/>
      <EnumMember name="QLineEdit.TrailingPosition"/>
    </Enum>
    <Enum name="QLineEdit.EchoMode">
      <EnumMember name="QLineEdit.Normal"/>
      <EnumMember name="QLineEdit.NoEcho"/>
      <EnumMember name="QLineEdit.Password"/>
      <EnumMember name="QLineEdit.PasswordEchoOnEdit"/>
    </Enum>
    <Function name="QLineEdit.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QLineEdit.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
      <Argument typename="QLineEdit.ActionPosition" typetype="enum" name="position"/>
    </Function>
    <Function name="QLineEdit.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QLineEdit.ActionPosition" typetype="enum" name="position"/>
    </Function>
    <Function name="QLineEdit.isClearButtonEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.setClearButtonEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QLineEdit.cursorMoveStyle">
      <Argument typename="Qt.CursorMoveStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QLineEdit.setCursorMoveStyle">
      <Argument typename="Qt.CursorMoveStyle" typetype="enum" name="style"/>
    </Function>
    <Function name="QLineEdit.setPlaceholderText">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QLineEdit.placeholderText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QLineEdit.textMargins">
      <Argument typename="QMargins" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.getTextMargins">
      <Argument typename="int" name="left" dir="out"/>
      <Argument typename="int" name="top" dir="out"/>
      <Argument typename="int" name="right" dir="out"/>
      <Argument typename="int" name="bottom" dir="out"/>
    </Function>
    <Function name="QLineEdit.setTextMargins">
      <Argument typename="int" name="left"/>
      <Argument typename="int" name="top"/>
      <Argument typename="int" name="right"/>
      <Argument typename="int" name="bottom"/>
    </Function>
    <Function name="QLineEdit.setTextMargins">
      <Argument typename="QMargins" typetype="class" name="margins"/>
    </Function>
    <Function name="QLineEdit.completer">
      <Argument typename="QCompleter" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.setCompleter">
      <Argument typename="QCompleter" typetype="class" name="completer"/>
    </Function>
    <Function name="QLineEdit.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum"/>
    </Function>
    <Function name="QLineEdit.cursorRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QLineEdit.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QLineEdit.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QLineEdit.initStyleOption">
      <Argument typename="QStyleOptionFrame" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QLineEdit.selectionChanged" sig="void selectionChanged()"/>
    <Signal default="1" name="QLineEdit.editingFinished" sig="void editingFinished()"/>
    <Signal default="1" name="QLineEdit.returnPressed" sig="void returnPressed()"/>
    <Signal default="1" name="QLineEdit.cursorPositionChanged" sig="void cursorPositionChanged(int,int)"/>
    <Signal default="1" name="QLineEdit.textEdited" sig="void textEdited(const QString&amp;)"/>
    <Signal default="1" name="QLineEdit.textChanged" sig="void textChanged(const QString&amp;)"/>
    <Function name="QLineEdit.createStandardContextMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.insert">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QLineEdit.deselect"/>
    <Function name="QLineEdit.paste"/>
    <Function name="QLineEdit.copy"/>
    <Function name="QLineEdit.cut"/>
    <Function name="QLineEdit.redo"/>
    <Function name="QLineEdit.undo"/>
    <Function name="QLineEdit.selectAll"/>
    <Function name="QLineEdit.clear"/>
    <Function name="QLineEdit.setText">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QLineEdit.hasAcceptableInput">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.setInputMask">
      <Argument typename="QString" typetype="mappedtype" name="inputMask"/>
    </Function>
    <Function name="QLineEdit.inputMask">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QLineEdit.dragEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.setDragEnabled">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QLineEdit.isRedoAvailable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.isUndoAvailable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.selectionStart">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLineEdit.selectedText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QLineEdit.hasSelectedText">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.setSelection">
      <Argument typename="int"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QLineEdit.setModified">
      <Argument typename="bool"/>
    </Function>
    <Function name="QLineEdit.isModified">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.end">
      <Argument typename="bool" name="mark"/>
    </Function>
    <Function name="QLineEdit.home">
      <Argument typename="bool" name="mark"/>
    </Function>
    <Function name="QLineEdit.del_"/>
    <Function name="QLineEdit.backspace"/>
    <Function name="QLineEdit.cursorWordBackward">
      <Argument typename="bool" name="mark"/>
    </Function>
    <Function name="QLineEdit.cursorWordForward">
      <Argument typename="bool" name="mark"/>
    </Function>
    <Function name="QLineEdit.cursorBackward">
      <Argument typename="bool" name="mark"/>
      <Argument typename="int" name="steps" default="1"/>
    </Function>
    <Function name="QLineEdit.cursorForward">
      <Argument typename="bool" name="mark"/>
      <Argument typename="int" name="steps" default="1"/>
    </Function>
    <Function name="QLineEdit.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="flag"/>
    </Function>
    <Function name="QLineEdit.cursorPositionAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QLineEdit.setCursorPosition">
      <Argument typename="int"/>
    </Function>
    <Function name="QLineEdit.cursorPosition">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLineEdit.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.validator">
      <Argument typename="QValidator" typetype="class" dir="out"/>
    </Function>
    <Function name="QLineEdit.setValidator">
      <Argument typename="QValidator" typetype="class"/>
    </Function>
    <Function name="QLineEdit.setReadOnly">
      <Argument typename="bool"/>
    </Function>
    <Function name="QLineEdit.isReadOnly">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.setEchoMode">
      <Argument typename="QLineEdit.EchoMode" typetype="enum"/>
    </Function>
    <Function name="QLineEdit.echoMode">
      <Argument typename="QLineEdit.EchoMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QLineEdit.hasFrame">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QLineEdit.setFrame">
      <Argument typename="bool"/>
    </Function>
    <Function name="QLineEdit.setMaxLength">
      <Argument typename="int"/>
    </Function>
    <Function name="QLineEdit.maxLength">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QLineEdit.displayText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QLineEdit.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QListView" inherits="QAbstractItemView">
    <Function name="QListView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QListView.ViewMode">
      <EnumMember name="QListView.ListMode"/>
      <EnumMember name="QListView.IconMode"/>
    </Enum>
    <Enum name="QListView.LayoutMode">
      <EnumMember name="QListView.SinglePass"/>
      <EnumMember name="QListView.Batched"/>
    </Enum>
    <Enum name="QListView.ResizeMode">
      <EnumMember name="QListView.Fixed"/>
      <EnumMember name="QListView.Adjust"/>
    </Enum>
    <Enum name="QListView.Flow">
      <EnumMember name="QListView.LeftToRight"/>
      <EnumMember name="QListView.TopToBottom"/>
    </Enum>
    <Enum name="QListView.Movement">
      <EnumMember name="QListView.Static"/>
      <EnumMember name="QListView.Free"/>
      <EnumMember name="QListView.Snap"/>
    </Enum>
    <Function name="QListView.currentChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="current"/>
      <Argument typename="QModelIndex" typetype="class" name="previous"/>
    </Function>
    <Function name="QListView.selectionChanged" virtual="1">
      <Argument typename="QItemSelection" typetype="class" name="selected"/>
      <Argument typename="QItemSelection" typetype="class" name="deselected"/>
    </Function>
    <Function name="QListView.isSelectionRectVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListView.setSelectionRectVisible">
      <Argument typename="bool" name="show"/>
    </Function>
    <Function name="QListView.wordWrap">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListView.setWordWrap">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QListView.batchSize">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListView.setBatchSize">
      <Argument typename="int" name="batchSize"/>
    </Function>
    <Function name="QListView.viewportSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QListView.isIndexHidden" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QListView.updateGeometries" virtual="1"/>
    <Function name="QListView.selectedIndexes" virtual="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QListView.visualRegionForSelection" virtual="1">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QItemSelection" typetype="class" name="selection"/>
    </Function>
    <Function name="QListView.setSelection" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QListView.setPositionForIndex">
      <Argument typename="QPoint" typetype="class" name="position"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QListView.rectForIndex">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QListView.moveCursor" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QAbstractItemView.CursorAction" typetype="enum" name="cursorAction"/>
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Function name="QListView.verticalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListView.horizontalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListView.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.viewOptions" virtual="1">
      <Argument typename="QStyleOptionViewItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QListView.startDrag" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" name="supportedActions"/>
    </Function>
    <Function name="QListView.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListView.rowsAboutToBeRemoved" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QListView.rowsInserted" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QListView.dataChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="topLeft"/>
      <Argument typename="QModelIndex" typetype="class" name="bottomRight"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="roles" default="[]"/>
    </Function>
    <Function name="QListView.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Signal default="1" name="QListView.indexesMoved" sig="void indexesMoved(const  ::QModelIndexList&amp;)"/>
    <Function name="QListView.setRootIndex" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QListView.reset" virtual="1"/>
    <Function name="QListView.indexAt" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QListView.scrollTo" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QListView.visualRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QListView.uniformItemSizes">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListView.setUniformItemSizes">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QListView.modelColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListView.setModelColumn">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QListView.setRowHidden">
      <Argument typename="int" name="row"/>
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QListView.isRowHidden">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QListView.clearPropertyFlags"/>
    <Function name="QListView.viewMode">
      <Argument typename="QListView.ViewMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QListView.setViewMode">
      <Argument typename="QListView.ViewMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QListView.gridSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QListView.setGridSize">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QListView.spacing">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListView.setSpacing">
      <Argument typename="int" name="space"/>
    </Function>
    <Function name="QListView.layoutMode">
      <Argument typename="QListView.LayoutMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QListView.setLayoutMode">
      <Argument typename="QListView.LayoutMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QListView.resizeMode">
      <Argument typename="QListView.ResizeMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QListView.setResizeMode">
      <Argument typename="QListView.ResizeMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QListView.isWrapping">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListView.setWrapping">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QListView.flow">
      <Argument typename="QListView.Flow" typetype="enum" dir="out"/>
    </Function>
    <Function name="QListView.setFlow">
      <Argument typename="QListView.Flow" typetype="enum" name="flow"/>
    </Function>
    <Function name="QListView.movement">
      <Argument typename="QListView.Movement" typetype="enum" dir="out"/>
    </Function>
    <Function name="QListView.setMovement">
      <Argument typename="QListView.Movement" typetype="enum" name="movement"/>
    </Function>
  </Class>
  <Class name="QListWidgetItem">
    <Function name="QListWidgetItem.__init__">
      <Argument typename="QListWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="int" name="type" default="QListWidgetItem.Type"/>
    </Function>
    <Function name="QListWidgetItem.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QListWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="int" name="type" default="QListWidgetItem.Type"/>
    </Function>
    <Function name="QListWidgetItem.__init__">
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QListWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="int" name="type" default="QListWidgetItem.Type"/>
    </Function>
    <Function name="QListWidgetItem.__init__">
      <Argument typename="QListWidgetItem" typetype="class" name="other"/>
    </Function>
    <Enum name="QListWidgetItem.ItemType">
      <EnumMember name="QListWidgetItem.Type"/>
      <EnumMember name="QListWidgetItem.UserType"/>
    </Enum>
    <Function name="QListWidgetItem.__ge__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QListWidgetItem" typetype="class" name="other"/>
    </Function>
    <Function name="QListWidgetItem.isHidden">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.setHidden">
      <Argument typename="bool" name="ahide"/>
    </Function>
    <Function name="QListWidgetItem.isSelected">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.setSelected">
      <Argument typename="bool" name="aselect"/>
    </Function>
    <Function name="QListWidgetItem.setForeground">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QListWidgetItem.foreground">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.setBackground">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QListWidgetItem.background">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.setFont">
      <Argument typename="QFont" typetype="class" name="afont"/>
    </Function>
    <Function name="QListWidgetItem.setWhatsThis">
      <Argument typename="QString" typetype="mappedtype" name="awhatsThis"/>
    </Function>
    <Function name="QListWidgetItem.setToolTip">
      <Argument typename="QString" typetype="mappedtype" name="atoolTip"/>
    </Function>
    <Function name="QListWidgetItem.setStatusTip">
      <Argument typename="QString" typetype="mappedtype" name="astatusTip"/>
    </Function>
    <Function name="QListWidgetItem.setIcon">
      <Argument typename="QIcon" typetype="class" name="aicon"/>
    </Function>
    <Function name="QListWidgetItem.setText">
      <Argument typename="QString" typetype="mappedtype" name="atext"/>
    </Function>
    <Function name="QListWidgetItem.setFlags">
      <Argument typename="Qt.ItemFlags" typetype="class" name="aflags"/>
    </Function>
    <Function name="QListWidgetItem.type">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.write" virtual="1">
      <Argument typename="QDataStream" typetype="class" name="out"/>
    </Function>
    <Function name="QListWidgetItem.read" virtual="1">
      <Argument typename="QDataStream" typetype="class" name="in"/>
    </Function>
    <Function name="QListWidgetItem.__lt__" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QListWidgetItem" typetype="class" name="other"/>
    </Function>
    <Function name="QListWidgetItem.setData" virtual="1">
      <Argument typename="int" name="role"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QListWidgetItem.data" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="role"/>
    </Function>
    <Function name="QListWidgetItem.setSizeHint">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QListWidgetItem.sizeHint">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.setCheckState">
      <Argument typename="Qt.CheckState" typetype="enum" name="state"/>
    </Function>
    <Function name="QListWidgetItem.checkState">
      <Argument typename="Qt.CheckState" typetype="enum" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.setTextAlignment">
      <Argument typename="int" name="alignment"/>
    </Function>
    <Function name="QListWidgetItem.textAlignment">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.whatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.statusTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.flags">
      <Argument typename="Qt.ItemFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.listWidget">
      <Argument typename="QListWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidgetItem.clone" virtual="1">
      <Argument typename="QListWidgetItem" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QListWidget" inherits="QListView">
    <Function name="QListWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QListWidget.removeItemWidget">
      <Argument typename="QListWidgetItem" typetype="class" name="aItem"/>
    </Function>
    <Function name="QListWidget.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QListWidget.isSortingEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QListWidget.setSortingEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QListWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QListWidget.itemFromIndex">
      <Argument typename="QListWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QListWidget.indexFromItem">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
    </Function>
    <Function name="QListWidget.supportedDropActions" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidget.dropMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
      <Argument typename="Qt.DropAction" typetype="enum" name="action"/>
    </Function>
    <Function name="QListWidget.mimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out" transfer="back"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="items"/>
    </Function>
    <Function name="QListWidget.mimeTypes" virtual="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Signal default="1" name="QListWidget.itemSelectionChanged" sig="void itemSelectionChanged()"/>
    <Signal default="1" name="QListWidget.currentRowChanged" sig="void currentRowChanged(int)"/>
    <Signal default="1" name="QListWidget.currentTextChanged" sig="void currentTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QListWidget.currentItemChanged" sig="void currentItemChanged( ::QListWidgetItem*, ::QListWidgetItem*)"/>
    <Signal default="1" name="QListWidget.itemChanged" sig="void itemChanged( ::QListWidgetItem*)"/>
    <Signal default="1" name="QListWidget.itemEntered" sig="void itemEntered( ::QListWidgetItem*)"/>
    <Signal default="1" name="QListWidget.itemActivated" sig="void itemActivated( ::QListWidgetItem*)"/>
    <Signal default="1" name="QListWidget.itemDoubleClicked" sig="void itemDoubleClicked( ::QListWidgetItem*)"/>
    <Signal default="1" name="QListWidget.itemClicked" sig="void itemClicked( ::QListWidgetItem*)"/>
    <Signal default="1" name="QListWidget.itemPressed" sig="void itemPressed( ::QListWidgetItem*)"/>
    <Function name="QListWidget.scrollToItem" slot="void scrollToItem(const  ::QListWidgetItem*, ::QAbstractItemView::ScrollHint = QAbstractItemView.EnsureVisible)">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QListWidget.clear" slot="void clear()"/>
    <Function name="QListWidget.findItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="Qt.MatchFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QListWidget.selectedItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QListWidget.closePersistentEditor">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.openPersistentEditor">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.editItem">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.sortItems">
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.AscendingOrder"/>
    </Function>
    <Function name="QListWidget.visualItemRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.setItemWidget">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QListWidget.itemWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.itemAt">
      <Argument typename="QListWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QListWidget.itemAt">
      <Argument typename="QListWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QListWidget.setCurrentRow">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QListWidget.setCurrentRow">
      <Argument typename="int" name="row"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QListWidget.currentRow">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListWidget.setCurrentItem">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.setCurrentItem">
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QListWidget.currentItem">
      <Argument typename="QListWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QListWidget.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListWidget.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QListWidget.takeItem">
      <Argument typename="QListWidgetItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QListWidget.addItems">
      <Argument typename="QStringList" typetype="mappedtype" name="labels"/>
    </Function>
    <Function name="QListWidget.addItem">
      <Argument typename="QListWidgetItem" typetype="class" name="aitem" transfer="to"/>
    </Function>
    <Function name="QListWidget.addItem">
      <Argument typename="QString" typetype="mappedtype" name="label"/>
    </Function>
    <Function name="QListWidget.insertItems">
      <Argument typename="int" name="row"/>
      <Argument typename="QStringList" typetype="mappedtype" name="labels"/>
    </Function>
    <Function name="QListWidget.insertItem">
      <Argument typename="int" name="row"/>
      <Argument typename="QListWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QListWidget.insertItem">
      <Argument typename="int" name="row"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
    </Function>
    <Function name="QListWidget.row">
      <Argument typename="int" dir="out"/>
      <Argument typename="QListWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QListWidget.item">
      <Argument typename="QListWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
  </Class>
  <Class name="QMainWindow" inherits="QWidget">
    <Function name="QMainWindow.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QMainWindow.DockOption">
      <EnumMember name="QMainWindow.AnimatedDocks"/>
      <EnumMember name="QMainWindow.AllowNestedDocks"/>
      <EnumMember name="QMainWindow.AllowTabbedDocks"/>
      <EnumMember name="QMainWindow.ForceTabbedDocks"/>
      <EnumMember name="QMainWindow.VerticalTabs"/>
    </Enum>
    <Function name="QMainWindow.takeCentralWidget">
      <Argument typename="QWidget" typetype="class" dir="out" transfer="back"/>
    </Function>
    <Function name="QMainWindow.tabifiedDockWidgets">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QDockWidget" typetype="class" name="dockwidget"/>
    </Function>
    <Function name="QMainWindow.setTabPosition">
      <Argument typename="Qt.DockWidgetAreas" typetype="class" name="areas"/>
      <Argument typename="QTabWidget.TabPosition" typetype="enum" name="tabPosition"/>
    </Function>
    <Function name="QMainWindow.tabPosition">
      <Argument typename="QTabWidget.TabPosition" typetype="enum" dir="out"/>
      <Argument typename="Qt.DockWidgetArea" typetype="enum" name="area"/>
    </Function>
    <Function name="QMainWindow.setTabShape">
      <Argument typename="QTabWidget.TabShape" typetype="enum" name="tabShape"/>
    </Function>
    <Function name="QMainWindow.tabShape">
      <Argument typename="QTabWidget.TabShape" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMainWindow.setDocumentMode">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QMainWindow.documentMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMainWindow.restoreDockWidget">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QDockWidget" typetype="class" name="dockwidget"/>
    </Function>
    <Function name="QMainWindow.unifiedTitleAndToolBarOnMac">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMainWindow.setUnifiedTitleAndToolBarOnMac">
      <Argument typename="bool" name="set"/>
    </Function>
    <Function name="QMainWindow.toolBarBreak">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QToolBar" typetype="class" name="toolbar"/>
    </Function>
    <Function name="QMainWindow.removeToolBarBreak">
      <Argument typename="QToolBar" typetype="class" name="before"/>
    </Function>
    <Function name="QMainWindow.dockOptions">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.setDockOptions">
      <Argument typename="QMainWindow.DockOptions" typetype="class" name="options"/>
    </Function>
    <Function name="QMainWindow.tabifyDockWidget">
      <Argument typename="QDockWidget" typetype="class" name="first"/>
      <Argument typename="QDockWidget" typetype="class" name="second"/>
    </Function>
    <Function name="QMainWindow.setMenuWidget">
      <Argument typename="QWidget" typetype="class" name="menubar" transfer="to"/>
    </Function>
    <Function name="QMainWindow.menuWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.isSeparator">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QMainWindow.isDockNestingEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMainWindow.isAnimated">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMainWindow.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMainWindow.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="event"/>
    </Function>
    <Signal default="1" name="QMainWindow.toolButtonStyleChanged" sig="void toolButtonStyleChanged( ::Qt::ToolButtonStyle)"/>
    <Signal default="1" name="QMainWindow.iconSizeChanged" sig="void iconSizeChanged(const  ::QSize&amp;)"/>
    <Function name="QMainWindow.setDockNestingEnabled" slot="void setDockNestingEnabled(bool)">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QMainWindow.setAnimated" slot="void setAnimated(bool)">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QMainWindow.createPopupMenu" virtual="1">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.restoreState">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QByteArray" typetype="class" name="state"/>
      <Argument typename="int" name="version" default="0"/>
    </Function>
    <Function name="QMainWindow.saveState">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
      <Argument typename="int" name="version" default="0"/>
    </Function>
    <Function name="QMainWindow.dockWidgetArea">
      <Argument typename="Qt.DockWidgetArea" typetype="enum" dir="out"/>
      <Argument typename="QDockWidget" typetype="class" name="dockwidget"/>
    </Function>
    <Function name="QMainWindow.removeDockWidget">
      <Argument typename="QDockWidget" typetype="class" name="dockwidget" transfer="back"/>
    </Function>
    <Function name="QMainWindow.splitDockWidget">
      <Argument typename="QDockWidget" typetype="class" name="after"/>
      <Argument typename="QDockWidget" typetype="class" name="dockwidget" transfer="to"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
    </Function>
    <Function name="QMainWindow.addDockWidget">
      <Argument typename="Qt.DockWidgetArea" typetype="enum" name="area"/>
      <Argument typename="QDockWidget" typetype="class" name="dockwidget" transfer="to"/>
    </Function>
    <Function name="QMainWindow.addDockWidget">
      <Argument typename="Qt.DockWidgetArea" typetype="enum" name="area"/>
      <Argument typename="QDockWidget" typetype="class" name="dockwidget" transfer="to"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
    </Function>
    <Function name="QMainWindow.toolBarArea">
      <Argument typename="Qt.ToolBarArea" typetype="enum" dir="out"/>
      <Argument typename="QToolBar" typetype="class" name="toolbar"/>
    </Function>
    <Function name="QMainWindow.removeToolBar">
      <Argument typename="QToolBar" typetype="class" name="toolbar"/>
    </Function>
    <Function name="QMainWindow.insertToolBar">
      <Argument typename="QToolBar" typetype="class" name="before"/>
      <Argument typename="QToolBar" typetype="class" name="toolbar" transfer="to"/>
    </Function>
    <Function name="QMainWindow.addToolBar">
      <Argument typename="Qt.ToolBarArea" typetype="enum" name="area"/>
      <Argument typename="QToolBar" typetype="class" name="toolbar" transfer="to"/>
    </Function>
    <Function name="QMainWindow.addToolBar">
      <Argument typename="QToolBar" typetype="class" name="toolbar" transfer="to"/>
    </Function>
    <Function name="QMainWindow.addToolBar">
      <Argument typename="QToolBar" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMainWindow.insertToolBarBreak">
      <Argument typename="QToolBar" typetype="class" name="before"/>
    </Function>
    <Function name="QMainWindow.addToolBarBreak">
      <Argument typename="Qt.ToolBarArea" typetype="enum" name="area" default="Qt.TopToolBarArea"/>
    </Function>
    <Function name="QMainWindow.corner">
      <Argument typename="Qt.DockWidgetArea" typetype="enum" dir="out"/>
      <Argument typename="Qt.Corner" typetype="enum" name="corner"/>
    </Function>
    <Function name="QMainWindow.setCorner">
      <Argument typename="Qt.Corner" typetype="enum" name="corner"/>
      <Argument typename="Qt.DockWidgetArea" typetype="enum" name="area"/>
    </Function>
    <Function name="QMainWindow.setCentralWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QMainWindow.centralWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.setStatusBar">
      <Argument typename="QStatusBar" typetype="class" name="statusbar" transfer="to"/>
    </Function>
    <Function name="QMainWindow.statusBar">
      <Argument typename="QStatusBar" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.setMenuBar">
      <Argument typename="QMenuBar" typetype="class" name="menubar" transfer="to"/>
    </Function>
    <Function name="QMainWindow.menuBar">
      <Argument typename="QMenuBar" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.setToolButtonStyle">
      <Argument typename="Qt.ToolButtonStyle" typetype="enum" name="toolButtonStyle"/>
    </Function>
    <Function name="QMainWindow.toolButtonStyle">
      <Argument typename="Qt.ToolButtonStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMainWindow.setIconSize">
      <Argument typename="QSize" typetype="class" name="iconSize"/>
    </Function>
    <Function name="QMainWindow.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QMainWindow.DockOptions" convert="1">
    <Function name="QMainWindow.DockOptions.__init__"/>
    <Function name="QMainWindow.DockOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__init__">
      <Argument typename="QMainWindow.DockOptions" typetype="class"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMainWindow.DockOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMainWindow.DockOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__ixor__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__xor__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__ior__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__or__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__iand__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__and__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__invert__">
      <Argument typename="QMainWindow.DockOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QMainWindow.DockOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QMdiArea" inherits="QAbstractScrollArea">
    <Function name="QMdiArea.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QMdiArea.WindowOrder">
      <EnumMember name="QMdiArea.CreationOrder"/>
      <EnumMember name="QMdiArea.StackingOrder"/>
      <EnumMember name="QMdiArea.ActivationHistoryOrder"/>
    </Enum>
    <Enum name="QMdiArea.ViewMode">
      <EnumMember name="QMdiArea.SubWindowView"/>
      <EnumMember name="QMdiArea.TabbedView"/>
    </Enum>
    <Enum name="QMdiArea.AreaOption">
      <EnumMember name="QMdiArea.DontMaximizeSubWindowOnActivation"/>
    </Enum>
    <Function name="QMdiArea.tabsMovable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMdiArea.setTabsMovable">
      <Argument typename="bool" name="movable"/>
    </Function>
    <Function name="QMdiArea.tabsClosable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMdiArea.setTabsClosable">
      <Argument typename="bool" name="closable"/>
    </Function>
    <Function name="QMdiArea.setDocumentMode">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QMdiArea.documentMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMdiArea.tabPosition">
      <Argument typename="QTabWidget.TabPosition" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMdiArea.setTabPosition">
      <Argument typename="QTabWidget.TabPosition" typetype="enum" name="position"/>
    </Function>
    <Function name="QMdiArea.tabShape">
      <Argument typename="QTabWidget.TabShape" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMdiArea.setTabShape">
      <Argument typename="QTabWidget.TabShape" typetype="enum" name="shape"/>
    </Function>
    <Function name="QMdiArea.viewMode">
      <Argument typename="QMdiArea.ViewMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMdiArea.setViewMode">
      <Argument typename="QMdiArea.ViewMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QMdiArea.setActivationOrder">
      <Argument typename="QMdiArea.WindowOrder" typetype="enum" name="order"/>
    </Function>
    <Function name="QMdiArea.activationOrder">
      <Argument typename="QMdiArea.WindowOrder" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMdiArea.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QMdiArea.viewportEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMdiArea.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="showEvent"/>
    </Function>
    <Function name="QMdiArea.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="timerEvent"/>
    </Function>
    <Function name="QMdiArea.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="resizeEvent"/>
    </Function>
    <Function name="QMdiArea.childEvent" virtual="1">
      <Argument typename="QChildEvent" typetype="class" name="childEvent"/>
    </Function>
    <Function name="QMdiArea.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="paintEvent"/>
    </Function>
    <Function name="QMdiArea.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMdiArea.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMdiArea.setupViewport" virtual="1">
      <Argument typename="QWidget" typetype="class" name="viewport"/>
    </Function>
    <Function name="QMdiArea.activatePreviousSubWindow" slot="void activatePreviousSubWindow()"/>
    <Function name="QMdiArea.activateNextSubWindow" slot="void activateNextSubWindow()"/>
    <Function name="QMdiArea.closeAllSubWindows" slot="void closeAllSubWindows()"/>
    <Function name="QMdiArea.closeActiveSubWindow" slot="void closeActiveSubWindow()"/>
    <Function name="QMdiArea.cascadeSubWindows" slot="void cascadeSubWindows()"/>
    <Function name="QMdiArea.tileSubWindows" slot="void tileSubWindows()"/>
    <Function name="QMdiArea.setActiveSubWindow" slot="void setActiveSubWindow( ::QMdiSubWindow*)">
      <Argument typename="QMdiSubWindow" typetype="class" name="window"/>
    </Function>
    <Signal default="1" name="QMdiArea.subWindowActivated" sig="void subWindowActivated( ::QMdiSubWindow*)"/>
    <Function name="QMdiArea.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMdiArea.AreaOption" typetype="enum" name="opton"/>
    </Function>
    <Function name="QMdiArea.setOption">
      <Argument typename="QMdiArea.AreaOption" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QMdiArea.setBackground">
      <Argument typename="QBrush" typetype="class" name="background"/>
    </Function>
    <Function name="QMdiArea.background">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiArea.removeSubWindow">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QMdiArea.currentSubWindow">
      <Argument typename="QMdiSubWindow" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiArea.subWindowList">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QMdiArea.WindowOrder" typetype="enum" name="order" default="QMdiArea.CreationOrder"/>
    </Function>
    <Function name="QMdiArea.addSubWindow">
      <Argument typename="QMdiSubWindow" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QMdiArea.activeSubWindow">
      <Argument typename="QMdiSubWindow" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiArea.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiArea.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QMdiArea.AreaOptions" convert="1">
    <Function name="QMdiArea.AreaOptions.__init__"/>
    <Function name="QMdiArea.AreaOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__init__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMdiArea.AreaOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMdiArea.AreaOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__ixor__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__xor__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__ior__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__or__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__iand__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__and__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__invert__">
      <Argument typename="QMdiArea.AreaOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiArea.AreaOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QMdiSubWindow" inherits="QWidget">
    <Function name="QMdiSubWindow.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QMdiSubWindow.SubWindowOption">
      <EnumMember name="QMdiSubWindow.RubberBandResize"/>
      <EnumMember name="QMdiSubWindow.RubberBandMove"/>
    </Enum>
    <Function name="QMdiSubWindow.childEvent" virtual="1">
      <Argument typename="QChildEvent" typetype="class" name="childEvent"/>
    </Function>
    <Function name="QMdiSubWindow.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="focusOutEvent"/>
    </Function>
    <Function name="QMdiSubWindow.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="focusInEvent"/>
    </Function>
    <Function name="QMdiSubWindow.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="contextMenuEvent"/>
    </Function>
    <Function name="QMdiSubWindow.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="keyEvent"/>
    </Function>
    <Function name="QMdiSubWindow.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="mouseEvent"/>
    </Function>
    <Function name="QMdiSubWindow.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="mouseEvent"/>
    </Function>
    <Function name="QMdiSubWindow.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="mouseEvent"/>
    </Function>
    <Function name="QMdiSubWindow.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="mouseEvent"/>
    </Function>
    <Function name="QMdiSubWindow.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="paintEvent"/>
    </Function>
    <Function name="QMdiSubWindow.moveEvent" virtual="1">
      <Argument typename="QMoveEvent" typetype="class" name="moveEvent"/>
    </Function>
    <Function name="QMdiSubWindow.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="timerEvent"/>
    </Function>
    <Function name="QMdiSubWindow.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="resizeEvent"/>
    </Function>
    <Function name="QMdiSubWindow.leaveEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="leaveEvent"/>
    </Function>
    <Function name="QMdiSubWindow.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class" name="closeEvent"/>
    </Function>
    <Function name="QMdiSubWindow.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="changeEvent"/>
    </Function>
    <Function name="QMdiSubWindow.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class" name="hideEvent"/>
    </Function>
    <Function name="QMdiSubWindow.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="showEvent"/>
    </Function>
    <Function name="QMdiSubWindow.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMdiSubWindow.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMdiSubWindow.showShaded" slot="void showShaded()"/>
    <Function name="QMdiSubWindow.showSystemMenu" slot="void showSystemMenu()"/>
    <Signal default="1" name="QMdiSubWindow.aboutToActivate" sig="void aboutToActivate()"/>
    <Signal default="1" name="QMdiSubWindow.windowStateChanged" sig="void windowStateChanged( ::Qt::WindowStates, ::Qt::WindowStates)"/>
    <Function name="QMdiSubWindow.mdiArea">
      <Argument typename="QMdiArea" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.systemMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.setSystemMenu">
      <Argument typename="QMenu" typetype="class" name="systemMenu" transfer="to"/>
    </Function>
    <Function name="QMdiSubWindow.keyboardPageStep">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.setKeyboardPageStep">
      <Argument typename="int" name="step"/>
    </Function>
    <Function name="QMdiSubWindow.keyboardSingleStep">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.setKeyboardSingleStep">
      <Argument typename="int" name="step"/>
    </Function>
    <Function name="QMdiSubWindow.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMdiSubWindow.SubWindowOption" typetype="enum"/>
    </Function>
    <Function name="QMdiSubWindow.setOption">
      <Argument typename="QMdiSubWindow.SubWindowOption" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QMdiSubWindow.isShaded">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.setWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QMdiSubWindow.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QMdiSubWindow.SubWindowOptions" convert="1">
    <Function name="QMdiSubWindow.SubWindowOptions.__init__"/>
    <Function name="QMdiSubWindow.SubWindowOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__init__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__ixor__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__xor__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__ior__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__or__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__iand__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__and__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__invert__">
      <Argument typename="QMdiSubWindow.SubWindowOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QMdiSubWindow.SubWindowOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QMenu" inherits="QWidget">
    <Function name="QMenu.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QMenu.__init__">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QMenu.setAsDockMenu"/>
    <Function name="QMenu.setToolTipsVisible">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QMenu.toolTipsVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenu.insertSection">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenu.insertSection">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenu.addSection">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenu.addSection">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenu.setSeparatorsCollapsible">
      <Argument typename="bool" name="collapse"/>
    </Function>
    <Function name="QMenu.separatorsCollapsible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenu.isEmpty">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenu.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QMenu.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.actionEvent" virtual="1">
      <Argument typename="QActionEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.leaveEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.enterEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenu.initStyleOption">
      <Argument typename="QStyleOptionMenuItem" typetype="class" name="option"/>
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QMenu.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Signal default="1" name="QMenu.triggered" sig="void triggered( ::QAction*)"/>
    <Signal default="1" name="QMenu.hovered" sig="void hovered( ::QAction*)"/>
    <Signal default="1" name="QMenu.aboutToShow" sig="void aboutToShow()"/>
    <Signal default="1" name="QMenu.aboutToHide" sig="void aboutToHide()"/>
    <Function name="QMenu.setNoReplayFor">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QMenu.setIcon">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QMenu.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.setTitle">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMenu.title">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QMenu.menuAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.actionAt">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QMenu.actionGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class"/>
    </Function>
    <Function name="QMenu.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.exec">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.exec">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QAction" typetype="class" name="action" default="None"/>
    </Function>
    <Function name="QMenu.exec" static="1">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="actions"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QAction" typetype="class" name="at" default="None"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
    </Function>
    <Function name="QMenu.exec_">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.exec_">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
      <Argument typename="QAction" typetype="class" name="action" default="None"/>
    </Function>
    <Function name="QMenu.exec_" static="1">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="actions"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QAction" typetype="class" name="at" default="None"/>
      <Argument typename="QWidget" typetype="class" name="parent" default="None"/>
    </Function>
    <Function name="QMenu.popup">
      <Argument typename="QPoint" typetype="class" name="p"/>
      <Argument typename="QAction" typetype="class" name="action" default="None"/>
    </Function>
    <Function name="QMenu.activeAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.setActiveAction">
      <Argument typename="QAction" typetype="class" name="act"/>
    </Function>
    <Function name="QMenu.defaultAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.setDefaultAction">
      <Argument typename="QAction" typetype="class"/>
    </Function>
    <Function name="QMenu.hideTearOffMenu"/>
    <Function name="QMenu.isTearOffMenuVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenu.isTearOffEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenu.setTearOffEnabled">
      <Argument typename="bool"/>
    </Function>
    <Function name="QMenu.clear"/>
    <Function name="QMenu.insertSeparator">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
    </Function>
    <Function name="QMenu.insertMenu">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QMenu.addSeparator">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenu.addMenu">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QMenu.addMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMenu.addMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMenu.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QMenu.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenu.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenu.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="object" name="slot"/>
      <Argument typename="QKeySequence" typetype="class" name="shortcut" default="0"/>
    </Function>
    <Function name="QMenu.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="object" name="slot"/>
      <Argument typename="QKeySequence" typetype="class" name="shortcut" default="0"/>
    </Function>
  </Class>
  <Class name="QMenuBar" inherits="QWidget">
    <Function name="QMenuBar.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QMenuBar.setNativeMenuBar">
      <Argument typename="bool" name="nativeMenuBar"/>
    </Function>
    <Function name="QMenuBar.isNativeMenuBar">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenuBar.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.actionEvent" virtual="1">
      <Argument typename="QActionEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.leaveEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMenuBar.initStyleOption">
      <Argument typename="QStyleOptionMenuItem" typetype="class" name="option"/>
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Signal default="1" name="QMenuBar.hovered" sig="void hovered( ::QAction*)"/>
    <Signal default="1" name="QMenuBar.triggered" sig="void triggered( ::QAction*)"/>
    <Function name="QMenuBar.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QMenuBar.cornerWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="Qt.Corner" typetype="enum" name="corner" default="Qt.TopRightCorner"/>
    </Function>
    <Function name="QMenuBar.setCornerWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="Qt.Corner" typetype="enum" name="corner" default="Qt.TopRightCorner"/>
    </Function>
    <Function name="QMenuBar.actionAt">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QMenuBar.actionGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class"/>
    </Function>
    <Function name="QMenuBar.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QMenuBar.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenuBar.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenuBar.isDefaultUp">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QMenuBar.setDefaultUp">
      <Argument typename="bool"/>
    </Function>
    <Function name="QMenuBar.setActiveAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QMenuBar.activeAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenuBar.clear"/>
    <Function name="QMenuBar.insertSeparator">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
    </Function>
    <Function name="QMenuBar.insertMenu">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QMenuBar.addSeparator">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QMenuBar.addMenu">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QMenuBar.addMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMenuBar.addMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMenuBar.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QMenuBar.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMenuBar.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="object" name="slot"/>
    </Function>
  </Class>
  <Class name="QMessageBox" inherits="QDialog">
    <Function name="QMessageBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QMessageBox.__init__">
      <Argument typename="QMessageBox.Icon" typetype="enum" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="buttons" default="QMessageBox.NoButton"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.Dialog|Qt.MSWindowsFixedSizeDialogHint"/>
    </Function>
    <Enum name="QMessageBox.StandardButton">
      <EnumMember name="QMessageBox.NoButton"/>
      <EnumMember name="QMessageBox.Ok"/>
      <EnumMember name="QMessageBox.Save"/>
      <EnumMember name="QMessageBox.SaveAll"/>
      <EnumMember name="QMessageBox.Open"/>
      <EnumMember name="QMessageBox.Yes"/>
      <EnumMember name="QMessageBox.YesToAll"/>
      <EnumMember name="QMessageBox.No"/>
      <EnumMember name="QMessageBox.NoToAll"/>
      <EnumMember name="QMessageBox.Abort"/>
      <EnumMember name="QMessageBox.Retry"/>
      <EnumMember name="QMessageBox.Ignore"/>
      <EnumMember name="QMessageBox.Close"/>
      <EnumMember name="QMessageBox.Cancel"/>
      <EnumMember name="QMessageBox.Discard"/>
      <EnumMember name="QMessageBox.Help"/>
      <EnumMember name="QMessageBox.Apply"/>
      <EnumMember name="QMessageBox.Reset"/>
      <EnumMember name="QMessageBox.RestoreDefaults"/>
      <EnumMember name="QMessageBox.FirstButton"/>
      <EnumMember name="QMessageBox.LastButton"/>
      <EnumMember name="QMessageBox.YesAll"/>
      <EnumMember name="QMessageBox.NoAll"/>
      <EnumMember name="QMessageBox.Default"/>
      <EnumMember name="QMessageBox.Escape"/>
      <EnumMember name="QMessageBox.FlagMask"/>
      <EnumMember name="QMessageBox.ButtonMask"/>
    </Enum>
    <Enum name="QMessageBox.Icon">
      <EnumMember name="QMessageBox.NoIcon"/>
      <EnumMember name="QMessageBox.Information"/>
      <EnumMember name="QMessageBox.Warning"/>
      <EnumMember name="QMessageBox.Critical"/>
      <EnumMember name="QMessageBox.Question"/>
    </Enum>
    <Enum name="QMessageBox.ButtonRole">
      <EnumMember name="QMessageBox.InvalidRole"/>
      <EnumMember name="QMessageBox.AcceptRole"/>
      <EnumMember name="QMessageBox.RejectRole"/>
      <EnumMember name="QMessageBox.DestructiveRole"/>
      <EnumMember name="QMessageBox.ActionRole"/>
      <EnumMember name="QMessageBox.HelpRole"/>
      <EnumMember name="QMessageBox.YesRole"/>
      <EnumMember name="QMessageBox.NoRole"/>
      <EnumMember name="QMessageBox.ResetRole"/>
      <EnumMember name="QMessageBox.ApplyRole"/>
    </Enum>
    <Function name="QMessageBox.checkBox">
      <Argument typename="QCheckBox" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.setCheckBox">
      <Argument typename="QCheckBox" typetype="class" name="cb"/>
    </Function>
    <Function name="QMessageBox.textInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.setTextInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" name="flags"/>
    </Function>
    <Signal default="1" name="QMessageBox.buttonClicked" sig="void buttonClicked( ::QAbstractButton*)"/>
    <Function name="QMessageBox.buttonRole">
      <Argument typename="QMessageBox.ButtonRole" typetype="enum" dir="out"/>
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
    </Function>
    <Function name="QMessageBox.buttons">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QMessageBox.open" virtual="1"/>
    <Function name="QMessageBox.open">
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QMessageBox.setWindowModality">
      <Argument typename="Qt.WindowModality" typetype="enum" name="windowModality"/>
    </Function>
    <Function name="QMessageBox.setWindowTitle">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QMessageBox.setDetailedText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMessageBox.detailedText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QMessageBox.setInformativeText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMessageBox.informativeText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QMessageBox.clickedButton">
      <Argument typename="QAbstractButton" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.setEscapeButton">
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
    </Function>
    <Function name="QMessageBox.setEscapeButton">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QMessageBox.escapeButton">
      <Argument typename="QAbstractButton" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.setDefaultButton">
      <Argument typename="QPushButton" typetype="class" name="button"/>
    </Function>
    <Function name="QMessageBox.setDefaultButton">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QMessageBox.defaultButton">
      <Argument typename="QPushButton" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.button">
      <Argument typename="QAbstractButton" typetype="class" dir="out"/>
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="which"/>
    </Function>
    <Function name="QMessageBox.standardButton">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" dir="out"/>
      <Argument typename="QAbstractButton" typetype="class" name="button"/>
    </Function>
    <Function name="QMessageBox.standardButtons">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.setStandardButtons">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="buttons"/>
    </Function>
    <Function name="QMessageBox.removeButton">
      <Argument typename="QAbstractButton" typetype="class" name="button" transfer="back"/>
    </Function>
    <Function name="QMessageBox.addButton">
      <Argument typename="QAbstractButton" typetype="class" name="button" transfer="to"/>
      <Argument typename="QMessageBox.ButtonRole" typetype="enum" name="role"/>
    </Function>
    <Function name="QMessageBox.addButton">
      <Argument typename="QPushButton" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QMessageBox.ButtonRole" typetype="enum" name="role"/>
    </Function>
    <Function name="QMessageBox.addButton">
      <Argument typename="QPushButton" typetype="class" dir="out"/>
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QMessageBox.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QMessageBox.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QMessageBox.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class"/>
    </Function>
    <Function name="QMessageBox.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QMessageBox.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QMessageBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QMessageBox.standardIcon" static="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QMessageBox.Icon" typetype="enum" name="icon"/>
    </Function>
    <Function name="QMessageBox.aboutQt" static="1">
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title" default="''"/>
    </Function>
    <Function name="QMessageBox.about" static="1">
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="caption"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QMessageBox.critical" static="1">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="buttons" default="QMessageBox.Ok"/>
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="defaultButton" default="QMessageBox.NoButton"/>
    </Function>
    <Function name="QMessageBox.warning" static="1">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="buttons" default="QMessageBox.Ok"/>
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="defaultButton" default="QMessageBox.NoButton"/>
    </Function>
    <Function name="QMessageBox.question" static="1">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="buttons" default="QMessageBox.StandardButtons(QMessageBox.Yes|QMessageBox.No)"/>
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="defaultButton" default="QMessageBox.NoButton"/>
    </Function>
    <Function name="QMessageBox.information" static="1">
      <Argument typename="QMessageBox.StandardButton" typetype="enum" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent"/>
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="buttons" default="QMessageBox.Ok"/>
      <Argument typename="QMessageBox.StandardButton" typetype="enum" name="defaultButton" default="QMessageBox.NoButton"/>
    </Function>
    <Function name="QMessageBox.setTextFormat">
      <Argument typename="Qt.TextFormat" typetype="enum"/>
    </Function>
    <Function name="QMessageBox.textFormat">
      <Argument typename="Qt.TextFormat" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMessageBox.setIconPixmap">
      <Argument typename="QPixmap" typetype="class"/>
    </Function>
    <Function name="QMessageBox.iconPixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.setIcon">
      <Argument typename="QMessageBox.Icon" typetype="enum"/>
    </Function>
    <Function name="QMessageBox.icon">
      <Argument typename="QMessageBox.Icon" typetype="enum" dir="out"/>
    </Function>
    <Function name="QMessageBox.setText">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QMessageBox.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QMessageBox.StandardButtons" convert="1">
    <Function name="QMessageBox.StandardButtons.__init__"/>
    <Function name="QMessageBox.StandardButtons.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__init__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMessageBox.StandardButtons" typetype="class" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__ixor__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__xor__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__ior__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__or__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__iand__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__and__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__invert__">
      <Argument typename="QMessageBox.StandardButtons" typetype="class" dir="out"/>
    </Function>
    <Function name="QMessageBox.StandardButtons.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QMouseEventTransition" inherits="QEventTransition">
    <Function name="QMouseEventTransition.__init__">
      <Argument typename="QState" typetype="class" name="sourceState" transfer="this" default="None"/>
    </Function>
    <Function name="QMouseEventTransition.__init__">
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent.Type" typetype="enum" name="type"/>
      <Argument typename="Qt.MouseButton" typetype="enum" name="button"/>
      <Argument typename="QState" typetype="class" name="sourceState" transfer="this" default="None"/>
    </Function>
    <Function name="QMouseEventTransition.eventTest" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMouseEventTransition.onTransition" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QMouseEventTransition.setHitTestPath">
      <Argument typename="QPainterPath" typetype="class" name="path"/>
    </Function>
    <Function name="QMouseEventTransition.hitTestPath">
      <Argument typename="QPainterPath" typetype="class" dir="out"/>
    </Function>
    <Function name="QMouseEventTransition.setModifierMask">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Function name="QMouseEventTransition.modifierMask">
      <Argument typename="Qt.KeyboardModifiers" typetype="class" dir="out"/>
    </Function>
    <Function name="QMouseEventTransition.setButton">
      <Argument typename="Qt.MouseButton" typetype="enum" name="button"/>
    </Function>
    <Function name="QMouseEventTransition.button">
      <Argument typename="Qt.MouseButton" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QOpenGLWidget" inherits="QWidget">
    <Function name="QOpenGLWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QOpenGLWidget.paintEngine" virtual="1">
      <Argument typename="QPaintEngine" typetype="class" dir="out"/>
    </Function>
    <Function name="QOpenGLWidget.metric" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPaintDevice.PaintDeviceMetric" typetype="enum" name="metric"/>
    </Function>
    <Function name="QOpenGLWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QOpenGLWidget.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QOpenGLWidget.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QOpenGLWidget.paintGL" virtual="1"/>
    <Function name="QOpenGLWidget.resizeGL" virtual="1">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QOpenGLWidget.initializeGL" virtual="1"/>
    <Signal default="1" name="QOpenGLWidget.resized" sig="void resized()"/>
    <Signal default="1" name="QOpenGLWidget.aboutToResize" sig="void aboutToResize()"/>
    <Signal default="1" name="QOpenGLWidget.frameSwapped" sig="void frameSwapped()"/>
    <Signal default="1" name="QOpenGLWidget.aboutToCompose" sig="void aboutToCompose()"/>
    <Function name="QOpenGLWidget.grabFramebuffer">
      <Argument typename="QImage" typetype="class" dir="out"/>
    </Function>
    <Function name="QOpenGLWidget.defaultFramebufferObject">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QOpenGLWidget.context">
      <Argument typename="QOpenGLContext" typetype="class" dir="out"/>
    </Function>
    <Function name="QOpenGLWidget.doneCurrent"/>
    <Function name="QOpenGLWidget.makeCurrent"/>
    <Function name="QOpenGLWidget.isValid">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QOpenGLWidget.format">
      <Argument typename="QSurfaceFormat" typetype="class" dir="out"/>
    </Function>
    <Function name="QOpenGLWidget.setFormat">
      <Argument typename="QSurfaceFormat" typetype="class" name="format"/>
    </Function>
  </Class>
  <Class name="QPlainTextEdit" inherits="QAbstractScrollArea">
    <Function name="QPlainTextEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QPlainTextEdit.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QPlainTextEdit.LineWrapMode">
      <EnumMember name="QPlainTextEdit.NoWrap"/>
      <EnumMember name="QPlainTextEdit.WidgetWidth"/>
    </Enum>
    <Function name="QPlainTextEdit.placeholderText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setPlaceholderText">
      <Argument typename="QString" typetype="mappedtype" name="placeholderText"/>
    </Function>
    <Function name="QPlainTextEdit.zoomOut" slot="void zoomOut(int = 1)">
      <Argument typename="int" name="range" default="1"/>
    </Function>
    <Function name="QPlainTextEdit.zoomIn" slot="void zoomIn(int = 1)">
      <Argument typename="int" name="range" default="1"/>
    </Function>
    <Function name="QPlainTextEdit.anchorAt">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QPlainTextEdit.getPaintContext">
      <Argument typename="QAbstractTextDocumentLayout.PaintContext" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.blockBoundingGeometry">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QTextBlock" typetype="class" name="block"/>
    </Function>
    <Function name="QPlainTextEdit.blockBoundingRect">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QTextBlock" typetype="class" name="block"/>
    </Function>
    <Function name="QPlainTextEdit.contentOffset">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.firstVisibleBlock">
      <Argument typename="QTextBlock" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QPlainTextEdit.insertFromMimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" name="source"/>
    </Function>
    <Function name="QPlainTextEdit.canInsertFromMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMimeData" typetype="class" name="source"/>
    </Function>
    <Function name="QPlainTextEdit.createMimeDataFromSelection" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="property"/>
    </Function>
    <Function name="QPlainTextEdit.inputMethodQuery">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
      <Argument typename="QVariant" typetype="class" name="argument"/>
    </Function>
    <Function name="QPlainTextEdit.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class"/>
    </Function>
    <Function name="QPlainTextEdit.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QPlainTextEdit.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QPlainTextEdit.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QPlainTextEdit.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QPlainTextEdit.modificationChanged" sig="void modificationChanged(bool)"/>
    <Signal default="1" name="QPlainTextEdit.blockCountChanged" sig="void blockCountChanged(int)"/>
    <Signal default="1" name="QPlainTextEdit.updateRequest" sig="void updateRequest(const  ::QRect&amp;,int)"/>
    <Signal default="1" name="QPlainTextEdit.cursorPositionChanged" sig="void cursorPositionChanged()"/>
    <Signal default="1" name="QPlainTextEdit.selectionChanged" sig="void selectionChanged()"/>
    <Signal default="1" name="QPlainTextEdit.copyAvailable" sig="void copyAvailable(bool)"/>
    <Signal default="1" name="QPlainTextEdit.redoAvailable" sig="void redoAvailable(bool)"/>
    <Signal default="1" name="QPlainTextEdit.undoAvailable" sig="void undoAvailable(bool)"/>
    <Signal default="1" name="QPlainTextEdit.textChanged" sig="void textChanged()"/>
    <Function name="QPlainTextEdit.centerCursor" slot="void centerCursor()"/>
    <Function name="QPlainTextEdit.appendHtml" slot="void appendHtml(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="html"/>
    </Function>
    <Function name="QPlainTextEdit.appendPlainText" slot="void appendPlainText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QPlainTextEdit.insertPlainText" slot="void insertPlainText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QPlainTextEdit.selectAll" slot="void selectAll()"/>
    <Function name="QPlainTextEdit.clear" slot="void clear()"/>
    <Function name="QPlainTextEdit.redo" slot="void redo()"/>
    <Function name="QPlainTextEdit.undo" slot="void undo()"/>
    <Function name="QPlainTextEdit.paste" slot="void paste()"/>
    <Function name="QPlainTextEdit.copy" slot="void copy()"/>
    <Function name="QPlainTextEdit.cut" slot="void cut()"/>
    <Function name="QPlainTextEdit.setPlainText" slot="void setPlainText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QPlainTextEdit.blockCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.print">
      <Argument typename="QPagedPaintDevice" typetype="class" name="printer"/>
    </Function>
    <Function name="QPlainTextEdit.print_">
      <Argument typename="QPagedPaintDevice" typetype="class" name="printer"/>
    </Function>
    <Function name="QPlainTextEdit.canPaste">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.moveCursor">
      <Argument typename="QTextCursor.MoveOperation" typetype="enum" name="operation"/>
      <Argument typename="QTextCursor.MoveMode" typetype="enum" name="mode" default="QTextCursor.MoveAnchor"/>
    </Function>
    <Function name="QPlainTextEdit.extraSelections">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setExtraSelections">
      <Argument typename="unknown-type" typetype="mappedtype" name="selections"/>
    </Function>
    <Function name="QPlainTextEdit.setCursorWidth">
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QPlainTextEdit.cursorWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setTabStopWidth">
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QPlainTextEdit.tabStopWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setOverwriteMode">
      <Argument typename="bool" name="overwrite"/>
    </Function>
    <Function name="QPlainTextEdit.overwriteMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.cursorRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QTextCursor" typetype="class" name="cursor"/>
    </Function>
    <Function name="QPlainTextEdit.cursorRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.cursorForPosition">
      <Argument typename="QTextCursor" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QPlainTextEdit.createStandardContextMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.loadResource" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="type"/>
      <Argument typename="QUrl" typetype="class" name="name"/>
    </Function>
    <Function name="QPlainTextEdit.ensureCursorVisible"/>
    <Function name="QPlainTextEdit.toPlainText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.find">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="exp"/>
      <Argument typename="QTextDocument.FindFlags" typetype="class" name="options" default="QTextDocument.FindFlags()"/>
    </Function>
    <Function name="QPlainTextEdit.find">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QRegExp" typetype="class" name="exp"/>
      <Argument typename="QTextDocument.FindFlags" typetype="class" name="options" default="QTextDocument.FindFlags()"/>
    </Function>
    <Function name="QPlainTextEdit.centerOnScroll">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setCenterOnScroll">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QPlainTextEdit.backgroundVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setBackgroundVisible">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QPlainTextEdit.setWordWrapMode">
      <Argument typename="QTextOption.WrapMode" typetype="enum" name="policy"/>
    </Function>
    <Function name="QPlainTextEdit.wordWrapMode">
      <Argument typename="QTextOption.WrapMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setLineWrapMode">
      <Argument typename="QPlainTextEdit.LineWrapMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QPlainTextEdit.lineWrapMode">
      <Argument typename="QPlainTextEdit.LineWrapMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.maximumBlockCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setMaximumBlockCount">
      <Argument typename="int" name="maximum"/>
    </Function>
    <Function name="QPlainTextEdit.setUndoRedoEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QPlainTextEdit.isUndoRedoEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.documentTitle">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setDocumentTitle">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QPlainTextEdit.setTabChangesFocus">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QPlainTextEdit.tabChangesFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.currentCharFormat">
      <Argument typename="QTextCharFormat" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setCurrentCharFormat">
      <Argument typename="QTextCharFormat" typetype="class" name="format"/>
    </Function>
    <Function name="QPlainTextEdit.mergeCurrentCharFormat">
      <Argument typename="QTextCharFormat" typetype="class" name="modifier"/>
    </Function>
    <Function name="QPlainTextEdit.textInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setTextInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QPlainTextEdit.setReadOnly">
      <Argument typename="bool" name="ro"/>
    </Function>
    <Function name="QPlainTextEdit.isReadOnly">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.textCursor">
      <Argument typename="QTextCursor" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setTextCursor">
      <Argument typename="QTextCursor" typetype="class" name="cursor"/>
    </Function>
    <Function name="QPlainTextEdit.document">
      <Argument typename="QTextDocument" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextEdit.setDocument">
      <Argument typename="QTextDocument" typetype="class" name="document"/>
    </Function>
  </Class>
  <Class name="QPlainTextDocumentLayout" inherits="QAbstractTextDocumentLayout">
    <Function name="QPlainTextDocumentLayout.__init__">
      <Argument typename="QTextDocument" typetype="class" name="document"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.documentChanged" virtual="1">
      <Argument typename="int" name="from"/>
      <Argument typename="int"/>
      <Argument typename="int" name="charsAdded"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.requestUpdate"/>
    <Function name="QPlainTextDocumentLayout.cursorWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.setCursorWidth">
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.ensureBlockLayout">
      <Argument typename="QTextBlock" typetype="class" name="block"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.blockBoundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QTextBlock" typetype="class" name="block"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.frameBoundingRect" virtual="1">
      <Argument typename="QRectF" typetype="class" dir="out"/>
      <Argument typename="QTextFrame" typetype="class"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.documentSize" virtual="1">
      <Argument typename="QSizeF" typetype="class" dir="out"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.pageCount" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.hitTest" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPointF" typetype="class"/>
      <Argument typename="Qt.HitTestAccuracy" typetype="enum"/>
    </Function>
    <Function name="QPlainTextDocumentLayout.draw" virtual="1">
      <Argument typename="QPainter" typetype="class"/>
      <Argument typename="QAbstractTextDocumentLayout.PaintContext" typetype="class"/>
    </Function>
  </Class>
  <Class name="QProgressBar" inherits="QWidget">
    <Function name="QProgressBar.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QProgressBar.Direction">
      <EnumMember name="QProgressBar.TopToBottom"/>
      <EnumMember name="QProgressBar.BottomToTop"/>
    </Enum>
    <Function name="QProgressBar.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QProgressBar.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QProgressBar.initStyleOption">
      <Argument typename="QStyleOptionProgressBar" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QProgressBar.valueChanged" sig="void valueChanged(int)"/>
    <Function name="QProgressBar.setOrientation" slot="void setOrientation( ::Qt::Orientation)">
      <Argument typename="Qt.Orientation" typetype="enum"/>
    </Function>
    <Function name="QProgressBar.setValue" slot="void setValue(int)">
      <Argument typename="int" name="value"/>
    </Function>
    <Function name="QProgressBar.setMaximum" slot="void setMaximum(int)">
      <Argument typename="int" name="maximum"/>
    </Function>
    <Function name="QProgressBar.setMinimum" slot="void setMinimum(int)">
      <Argument typename="int" name="minimum"/>
    </Function>
    <Function name="QProgressBar.reset" slot="void reset()"/>
    <Function name="QProgressBar.resetFormat"/>
    <Function name="QProgressBar.format">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QProgressBar.setFormat">
      <Argument typename="QString" typetype="mappedtype" name="format"/>
    </Function>
    <Function name="QProgressBar.setTextDirection">
      <Argument typename="QProgressBar.Direction" typetype="enum" name="textDirection"/>
    </Function>
    <Function name="QProgressBar.setInvertedAppearance">
      <Argument typename="bool" name="invert"/>
    </Function>
    <Function name="QProgressBar.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QProgressBar.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QProgressBar.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QProgressBar.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class" name="alignment"/>
    </Function>
    <Function name="QProgressBar.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QProgressBar.isTextVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QProgressBar.setTextVisible">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QProgressBar.text" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QProgressBar.value">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QProgressBar.setRange">
      <Argument typename="int" name="minimum"/>
      <Argument typename="int" name="maximum"/>
    </Function>
    <Function name="QProgressBar.maximum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QProgressBar.minimum">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QProgressDialog" inherits="QDialog">
    <Function name="QProgressDialog.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QProgressDialog.__init__">
      <Argument typename="QString" typetype="mappedtype" name="labelText"/>
      <Argument typename="QString" typetype="mappedtype" name="cancelButtonText"/>
      <Argument typename="int" name="minimum"/>
      <Argument typename="int" name="maximum"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QProgressDialog.open" virtual="1"/>
    <Function name="QProgressDialog.open">
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QProgressDialog.forceShow"/>
    <Function name="QProgressDialog.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QProgressDialog.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QProgressDialog.closeEvent" virtual="1">
      <Argument typename="QCloseEvent" typetype="class"/>
    </Function>
    <Function name="QProgressDialog.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Signal default="1" name="QProgressDialog.canceled" sig="void canceled()"/>
    <Function name="QProgressDialog.setMinimumDuration" slot="void setMinimumDuration(int)">
      <Argument typename="int" name="ms"/>
    </Function>
    <Function name="QProgressDialog.setCancelButtonText" slot="void setCancelButtonText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QProgressDialog.setLabelText" slot="void setLabelText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QProgressDialog.setValue" slot="void setValue(int)">
      <Argument typename="int" name="progress"/>
    </Function>
    <Function name="QProgressDialog.setMinimum" slot="void setMinimum(int)">
      <Argument typename="int" name="minimum"/>
    </Function>
    <Function name="QProgressDialog.setMaximum" slot="void setMaximum(int)">
      <Argument typename="int" name="maximum"/>
    </Function>
    <Function name="QProgressDialog.reset" slot="void reset()"/>
    <Function name="QProgressDialog.cancel" slot="void cancel()"/>
    <Function name="QProgressDialog.autoClose">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QProgressDialog.setAutoClose">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QProgressDialog.autoReset">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QProgressDialog.setAutoReset">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QProgressDialog.minimumDuration">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QProgressDialog.labelText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QProgressDialog.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QProgressDialog.value">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QProgressDialog.setRange">
      <Argument typename="int" name="minimum"/>
      <Argument typename="int" name="maximum"/>
    </Function>
    <Function name="QProgressDialog.maximum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QProgressDialog.minimum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QProgressDialog.wasCanceled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QProgressDialog.setBar">
      <Argument typename="QProgressBar" typetype="class" name="bar" transfer="to"/>
    </Function>
    <Function name="QProgressDialog.setCancelButton">
      <Argument typename="QPushButton" typetype="class" name="button" transfer="to"/>
    </Function>
    <Function name="QProgressDialog.setLabel">
      <Argument typename="QLabel" typetype="class" name="label" transfer="to"/>
    </Function>
  </Class>
  <Class name="QProxyStyle" inherits="QCommonStyle">
    <Function name="QProxyStyle.__init__">
      <Argument typename="QStyle" typetype="class" name="style" transfer="to" default="None"/>
    </Function>
    <Function name="QProxyStyle.__init__">
      <Argument typename="QString" typetype="mappedtype" name="key"/>
    </Function>
    <Function name="QProxyStyle.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QProxyStyle.unpolish" virtual="1">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QProxyStyle.unpolish" virtual="1">
      <Argument typename="QApplication" typetype="class" name="app"/>
    </Function>
    <Function name="QProxyStyle.polish" virtual="1">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QProxyStyle.polish" virtual="1">
      <Argument typename="QPalette" typetype="class" name="pal" dir="inout"/>
    </Function>
    <Function name="QProxyStyle.polish" virtual="1">
      <Argument typename="QApplication" typetype="class" name="app"/>
    </Function>
    <Function name="QProxyStyle.standardPalette" virtual="1">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QProxyStyle.generatedIconPixmap" virtual="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QIcon.Mode" typetype="enum" name="iconMode"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
    </Function>
    <Function name="QProxyStyle.standardPixmap" virtual="1">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QStyle.StandardPixmap" typetype="enum" name="standardPixmap"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.standardIcon" virtual="1">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="QStyle.StandardPixmap" typetype="enum" name="standardIcon"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.layoutSpacing" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="control1"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="control2"/>
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.pixelMetric" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QStyle.PixelMetric" typetype="enum" name="metric"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.styleHint" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QStyle.StyleHint" typetype="enum" name="hint"/>
      <Argument typename="QStyleOption" typetype="class" name="option" default="None"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
      <Argument typename="QStyleHintReturn" typetype="class" name="returnData" default="None"/>
    </Function>
    <Function name="QProxyStyle.hitTestComplexControl" virtual="1">
      <Argument typename="QStyle.SubControl" typetype="enum" dir="out"/>
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="control"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="option"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.itemPixmapRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QRect" typetype="class" name="r"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QProxyStyle.itemTextRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QFontMetrics" typetype="class" name="fm"/>
      <Argument typename="QRect" typetype="class" name="r"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="bool" name="enabled"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QProxyStyle.subControlRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
      <Argument typename="QStyle.SubControl" typetype="enum" name="sc"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QProxyStyle.subElementRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QStyle.SubElement" typetype="enum" name="element"/>
      <Argument typename="QStyleOption" typetype="class" name="option"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QProxyStyle.sizeFromContents" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QStyle.ContentsType" typetype="enum" name="type"/>
      <Argument typename="QStyleOption" typetype="class" name="option"/>
      <Argument typename="QSize" typetype="class" name="size"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QProxyStyle.drawItemPixmap" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="int" name="alignment"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QProxyStyle.drawItemText" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="QPalette" typetype="class" name="pal"/>
      <Argument typename="bool" name="enabled"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QPalette.ColorRole" typetype="enum" name="textRole" default="QPalette.NoRole"/>
    </Function>
    <Function name="QProxyStyle.drawComplexControl" virtual="1">
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="control"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="option"/>
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.drawControl" virtual="1">
      <Argument typename="QStyle.ControlElement" typetype="enum" name="element"/>
      <Argument typename="QStyleOption" typetype="class" name="option"/>
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.drawPrimitive" virtual="1">
      <Argument typename="QStyle.PrimitiveElement" typetype="enum" name="element"/>
      <Argument typename="QStyleOption" typetype="class" name="option"/>
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QProxyStyle.setBaseStyle">
      <Argument typename="QStyle" typetype="class" name="style" transfer="to"/>
    </Function>
    <Function name="QProxyStyle.baseStyle">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QRadioButton" inherits="QAbstractButton">
    <Function name="QRadioButton.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QRadioButton.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QRadioButton.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QRadioButton.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QRadioButton.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QRadioButton.hitButton" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPoint" typetype="class"/>
    </Function>
    <Function name="QRadioButton.initStyleOption">
      <Argument typename="QStyleOptionButton" typetype="class" name="button"/>
    </Function>
    <Function name="QRadioButton.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QRadioButton.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QRubberBand" inherits="QWidget">
    <Function name="QRubberBand.__init__">
      <Argument typename="QRubberBand.Shape" typetype="enum"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QRubberBand.Shape">
      <EnumMember name="QRubberBand.Line"/>
      <EnumMember name="QRubberBand.Rectangle"/>
    </Enum>
    <Function name="QRubberBand.moveEvent" virtual="1">
      <Argument typename="QMoveEvent" typetype="class"/>
    </Function>
    <Function name="QRubberBand.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QRubberBand.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QRubberBand.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QRubberBand.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QRubberBand.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QRubberBand.initStyleOption">
      <Argument typename="QStyleOptionRubberBand" typetype="class" name="option"/>
    </Function>
    <Function name="QRubberBand.resize">
      <Argument typename="int" name="w"/>
      <Argument typename="int" name="h"/>
    </Function>
    <Function name="QRubberBand.resize">
      <Argument typename="QSize" typetype="class" name="s"/>
    </Function>
    <Function name="QRubberBand.move">
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QRubberBand.move">
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QRubberBand.setGeometry">
      <Argument typename="QRect" typetype="class" name="r"/>
    </Function>
    <Function name="QRubberBand.setGeometry">
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
      <Argument typename="int" name="aw"/>
      <Argument typename="int" name="ah"/>
    </Function>
    <Function name="QRubberBand.shape">
      <Argument typename="QRubberBand.Shape" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QScrollArea" inherits="QAbstractScrollArea">
    <Function name="QScrollArea.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QScrollArea.viewportSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QScrollArea.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QScrollArea.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QScrollArea.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QScrollArea.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QScrollArea.ensureWidgetVisible">
      <Argument typename="QWidget" typetype="class" name="childWidget"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QScrollArea.ensureVisible">
      <Argument typename="int" name="x"/>
      <Argument typename="int" name="y"/>
      <Argument typename="int" name="xMargin" default="50"/>
      <Argument typename="int" name="yMargin" default="50"/>
    </Function>
    <Function name="QScrollArea.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QScrollArea.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QScrollArea.setAlignment">
      <Argument typename="Qt.Alignment" typetype="class"/>
    </Function>
    <Function name="QScrollArea.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QScrollArea.setWidgetResizable">
      <Argument typename="bool" name="resizable"/>
    </Function>
    <Function name="QScrollArea.widgetResizable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QScrollArea.takeWidget">
      <Argument typename="QWidget" typetype="class" dir="out" transfer="back"/>
    </Function>
    <Function name="QScrollArea.setWidget">
      <Argument typename="QWidget" typetype="class" name="w" transfer="to"/>
    </Function>
    <Function name="QScrollArea.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QScrollBar" inherits="QAbstractSlider">
    <Function name="QScrollBar.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QScrollBar.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QScrollBar.sliderChange" virtual="1">
      <Argument typename="QAbstractSlider.SliderChange" typetype="enum" name="change"/>
    </Function>
    <Function name="QScrollBar.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QScrollBar.initStyleOption">
      <Argument typename="QStyleOptionSlider" typetype="class" name="option"/>
    </Function>
    <Function name="QScrollBar.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QScrollBar.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QScroller" inherits="QObject">
    <Enum name="QScroller.Input">
      <EnumMember name="QScroller.InputPress"/>
      <EnumMember name="QScroller.InputMove"/>
      <EnumMember name="QScroller.InputRelease"/>
    </Enum>
    <Enum name="QScroller.ScrollerGestureType">
      <EnumMember name="QScroller.TouchGesture"/>
      <EnumMember name="QScroller.LeftMouseButtonGesture"/>
      <EnumMember name="QScroller.RightMouseButtonGesture"/>
      <EnumMember name="QScroller.MiddleMouseButtonGesture"/>
    </Enum>
    <Enum name="QScroller.State">
      <EnumMember name="QScroller.Inactive"/>
      <EnumMember name="QScroller.Pressed"/>
      <EnumMember name="QScroller.Dragging"/>
      <EnumMember name="QScroller.Scrolling"/>
    </Enum>
    <Signal default="1" name="QScroller.scrollerPropertiesChanged" sig="void scrollerPropertiesChanged(const  ::QScrollerProperties&amp;)"/>
    <Signal default="1" name="QScroller.stateChanged" sig="void stateChanged( ::QScroller::State)"/>
    <Function name="QScroller.resendPrepareEvent" slot="void resendPrepareEvent()"/>
    <Function name="QScroller.ensureVisible" slot="void ensureVisible(const  ::QRectF&amp;, ::qreal, ::qreal)">
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="float" name="xmargin"/>
      <Argument typename="float" name="ymargin"/>
    </Function>
    <Function name="QScroller.ensureVisible" slot="void ensureVisible(const  ::QRectF&amp;, ::qreal, ::qreal,int)">
      <Argument typename="QRectF" typetype="class" name="rect"/>
      <Argument typename="float" name="xmargin"/>
      <Argument typename="float" name="ymargin"/>
      <Argument typename="int" name="scrollTime"/>
    </Function>
    <Function name="QScroller.scrollTo" slot="void scrollTo(const  ::QPointF&amp;)">
      <Argument typename="QPointF" typetype="class" name="pos"/>
    </Function>
    <Function name="QScroller.scrollTo" slot="void scrollTo(const  ::QPointF&amp;,int)">
      <Argument typename="QPointF" typetype="class" name="pos"/>
      <Argument typename="int" name="scrollTime"/>
    </Function>
    <Function name="QScroller.setScrollerProperties" slot="void setScrollerProperties(const  ::QScrollerProperties&amp;)">
      <Argument typename="QScrollerProperties" typetype="class" name="prop"/>
    </Function>
    <Function name="QScroller.setSnapPositionsY">
      <Argument typename="unknown-type" typetype="mappedtype" name="positions"/>
    </Function>
    <Function name="QScroller.setSnapPositionsY">
      <Argument typename="float" name="first"/>
      <Argument typename="float" name="interval"/>
    </Function>
    <Function name="QScroller.setSnapPositionsX">
      <Argument typename="unknown-type" typetype="mappedtype" name="positions"/>
    </Function>
    <Function name="QScroller.setSnapPositionsX">
      <Argument typename="float" name="first"/>
      <Argument typename="float" name="interval"/>
    </Function>
    <Function name="QScroller.scrollerProperties">
      <Argument typename="QScrollerProperties" typetype="class" dir="out"/>
    </Function>
    <Function name="QScroller.pixelPerMeter">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QScroller.finalPosition">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QScroller.velocity">
      <Argument typename="QPointF" typetype="class" dir="out"/>
    </Function>
    <Function name="QScroller.stop"/>
    <Function name="QScroller.handleInput">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QScroller.Input" typetype="enum" name="input"/>
      <Argument typename="QPointF" typetype="class" name="position"/>
      <Argument typename="int" name="timestamp" default="0"/>
    </Function>
    <Function name="QScroller.state">
      <Argument typename="QScroller.State" typetype="enum" dir="out"/>
    </Function>
    <Function name="QScroller.target">
      <Argument typename="QObject" typetype="class" dir="out"/>
    </Function>
    <Function name="QScroller.activeScrollers" static="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QScroller.ungrabGesture" static="1">
      <Argument typename="QObject" typetype="class" name="target"/>
    </Function>
    <Function name="QScroller.grabbedGesture" static="1">
      <Argument typename="Qt.GestureType" typetype="enum" dir="out"/>
      <Argument typename="QObject" typetype="class" name="target"/>
    </Function>
    <Function name="QScroller.grabGesture" static="1">
      <Argument typename="Qt.GestureType" typetype="enum" dir="out"/>
      <Argument typename="QObject" typetype="class" name="target"/>
      <Argument typename="QScroller.ScrollerGestureType" typetype="enum" name="scrollGestureType" default="QScroller.TouchGesture"/>
    </Function>
    <Function name="QScroller.scroller" static="1">
      <Argument typename="QScroller" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="target"/>
    </Function>
    <Function name="QScroller.hasScroller" static="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="target"/>
    </Function>
  </Class>
  <Class name="QScrollerProperties">
    <Function name="QScrollerProperties.__init__"/>
    <Function name="QScrollerProperties.__init__">
      <Argument typename="QScrollerProperties" typetype="class" name="sp"/>
    </Function>
    <Enum name="QScrollerProperties.ScrollMetric">
      <EnumMember name="QScrollerProperties.MousePressEventDelay"/>
      <EnumMember name="QScrollerProperties.DragStartDistance"/>
      <EnumMember name="QScrollerProperties.DragVelocitySmoothingFactor"/>
      <EnumMember name="QScrollerProperties.AxisLockThreshold"/>
      <EnumMember name="QScrollerProperties.ScrollingCurve"/>
      <EnumMember name="QScrollerProperties.DecelerationFactor"/>
      <EnumMember name="QScrollerProperties.MinimumVelocity"/>
      <EnumMember name="QScrollerProperties.MaximumVelocity"/>
      <EnumMember name="QScrollerProperties.MaximumClickThroughVelocity"/>
      <EnumMember name="QScrollerProperties.AcceleratingFlickMaximumTime"/>
      <EnumMember name="QScrollerProperties.AcceleratingFlickSpeedupFactor"/>
      <EnumMember name="QScrollerProperties.SnapPositionRatio"/>
      <EnumMember name="QScrollerProperties.SnapTime"/>
      <EnumMember name="QScrollerProperties.OvershootDragResistanceFactor"/>
      <EnumMember name="QScrollerProperties.OvershootDragDistanceFactor"/>
      <EnumMember name="QScrollerProperties.OvershootScrollDistanceFactor"/>
      <EnumMember name="QScrollerProperties.OvershootScrollTime"/>
      <EnumMember name="QScrollerProperties.HorizontalOvershootPolicy"/>
      <EnumMember name="QScrollerProperties.VerticalOvershootPolicy"/>
      <EnumMember name="QScrollerProperties.FrameRate"/>
      <EnumMember name="QScrollerProperties.ScrollMetricCount"/>
    </Enum>
    <Enum name="QScrollerProperties.FrameRates">
      <EnumMember name="QScrollerProperties.Standard"/>
      <EnumMember name="QScrollerProperties.Fps60"/>
      <EnumMember name="QScrollerProperties.Fps30"/>
      <EnumMember name="QScrollerProperties.Fps20"/>
    </Enum>
    <Enum name="QScrollerProperties.OvershootPolicy">
      <EnumMember name="QScrollerProperties.OvershootWhenScrollable"/>
      <EnumMember name="QScrollerProperties.OvershootAlwaysOff"/>
      <EnumMember name="QScrollerProperties.OvershootAlwaysOn"/>
    </Enum>
    <Function name="QScrollerProperties.setScrollMetric">
      <Argument typename="QScrollerProperties.ScrollMetric" typetype="enum" name="metric"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QScrollerProperties.scrollMetric">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QScrollerProperties.ScrollMetric" typetype="enum" name="metric"/>
    </Function>
    <Function name="QScrollerProperties.unsetDefaultScrollerProperties" static="1"/>
    <Function name="QScrollerProperties.setDefaultScrollerProperties" static="1">
      <Argument typename="QScrollerProperties" typetype="class" name="sp"/>
    </Function>
    <Function name="QScrollerProperties.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QScrollerProperties" typetype="class" name="sp"/>
    </Function>
    <Function name="QScrollerProperties.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QScrollerProperties" typetype="class" name="sp"/>
    </Function>
  </Class>
  <Class name="QShortcut" inherits="QObject">
    <Function name="QShortcut.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QShortcut.__init__">
      <Argument typename="QKeySequence" typetype="class" name="key"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="object" name="member" default="0"/>
      <Argument typename="object" name="ambiguousMember" default="0"/>
      <Argument typename="Qt.ShortcutContext" typetype="enum" name="context" default="Qt.WindowShortcut"/>
    </Function>
    <Function name="QShortcut.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QShortcut.activatedAmbiguously" sig="void activatedAmbiguously()"/>
    <Signal default="1" name="QShortcut.activated" sig="void activated()"/>
    <Function name="QShortcut.autoRepeat">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QShortcut.setAutoRepeat">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QShortcut.parentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QShortcut.id">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QShortcut.whatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QShortcut.setWhatsThis">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QShortcut.context">
      <Argument typename="Qt.ShortcutContext" typetype="enum" dir="out"/>
    </Function>
    <Function name="QShortcut.setContext">
      <Argument typename="Qt.ShortcutContext" typetype="enum" name="context"/>
    </Function>
    <Function name="QShortcut.isEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QShortcut.setEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QShortcut.key">
      <Argument typename="QKeySequence" typetype="class" dir="out"/>
    </Function>
    <Function name="QShortcut.setKey">
      <Argument typename="QKeySequence" typetype="class" name="key"/>
    </Function>
  </Class>
  <Class name="QSizeGrip" inherits="QWidget">
    <Function name="QSizeGrip.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QSizeGrip.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class" name="hideEvent"/>
    </Function>
    <Function name="QSizeGrip.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="showEvent"/>
    </Function>
    <Function name="QSizeGrip.moveEvent" virtual="1">
      <Argument typename="QMoveEvent" typetype="class" name="moveEvent"/>
    </Function>
    <Function name="QSizeGrip.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QSizeGrip.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QSizeGrip.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QSizeGrip.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="mouseEvent"/>
    </Function>
    <Function name="QSizeGrip.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QSizeGrip.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QSizeGrip.setVisible" virtual="1">
      <Argument typename="bool"/>
    </Function>
    <Function name="QSizeGrip.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QSizePolicy">
    <Function name="QSizePolicy.__init__"/>
    <Function name="QSizePolicy.__init__">
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="horizontal"/>
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="vertical"/>
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="type" default="QSizePolicy.DefaultType"/>
    </Function>
    <Function name="QSizePolicy.__init__">
      <Argument typename="QVariant" typetype="class" name="variant"/>
    </Function>
    <Function name="QSizePolicy.__init__">
      <Argument typename="QSizePolicy" typetype="class"/>
    </Function>
    <Enum name="QSizePolicy.ControlType">
      <EnumMember name="QSizePolicy.DefaultType"/>
      <EnumMember name="QSizePolicy.ButtonBox"/>
      <EnumMember name="QSizePolicy.CheckBox"/>
      <EnumMember name="QSizePolicy.ComboBox"/>
      <EnumMember name="QSizePolicy.Frame"/>
      <EnumMember name="QSizePolicy.GroupBox"/>
      <EnumMember name="QSizePolicy.Label"/>
      <EnumMember name="QSizePolicy.Line"/>
      <EnumMember name="QSizePolicy.LineEdit"/>
      <EnumMember name="QSizePolicy.PushButton"/>
      <EnumMember name="QSizePolicy.RadioButton"/>
      <EnumMember name="QSizePolicy.Slider"/>
      <EnumMember name="QSizePolicy.SpinBox"/>
      <EnumMember name="QSizePolicy.TabWidget"/>
      <EnumMember name="QSizePolicy.ToolButton"/>
    </Enum>
    <Enum name="QSizePolicy.Policy">
      <EnumMember name="QSizePolicy.Fixed"/>
      <EnumMember name="QSizePolicy.Minimum"/>
      <EnumMember name="QSizePolicy.Maximum"/>
      <EnumMember name="QSizePolicy.Preferred"/>
      <EnumMember name="QSizePolicy.MinimumExpanding"/>
      <EnumMember name="QSizePolicy.Expanding"/>
      <EnumMember name="QSizePolicy.Ignored"/>
    </Enum>
    <Enum name="QSizePolicy.PolicyFlag">
      <EnumMember name="QSizePolicy.GrowFlag"/>
      <EnumMember name="QSizePolicy.ExpandFlag"/>
      <EnumMember name="QSizePolicy.ShrinkFlag"/>
      <EnumMember name="QSizePolicy.IgnoreFlag"/>
    </Enum>
    <Function name="QSizePolicy.setRetainSizeWhenHidden">
      <Argument typename="bool" name="retainSize"/>
    </Function>
    <Function name="QSizePolicy.retainSizeWhenHidden">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSizePolicy.hasWidthForHeight">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSizePolicy.setWidthForHeight">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QSizePolicy.setControlType">
      <Argument typename="QSizePolicy.ControlType" typetype="enum" name="type"/>
    </Function>
    <Function name="QSizePolicy.controlType">
      <Argument typename="QSizePolicy.ControlType" typetype="enum" dir="out"/>
    </Function>
    <Function name="QSizePolicy.transpose"/>
    <Function name="QSizePolicy.setVerticalStretch">
      <Argument typename="int" name="stretchFactor"/>
    </Function>
    <Function name="QSizePolicy.setHorizontalStretch">
      <Argument typename="int" name="stretchFactor"/>
    </Function>
    <Function name="QSizePolicy.verticalStretch">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSizePolicy.horizontalStretch">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSizePolicy.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QSizePolicy" typetype="class" name="s"/>
    </Function>
    <Function name="QSizePolicy.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QSizePolicy" typetype="class" name="s"/>
    </Function>
    <Function name="QSizePolicy.hasHeightForWidth">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSizePolicy.setHeightForWidth">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QSizePolicy.expandingDirections">
      <Argument typename="Qt.Orientations" typetype="class" dir="out"/>
    </Function>
    <Function name="QSizePolicy.setVerticalPolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="d"/>
    </Function>
    <Function name="QSizePolicy.setHorizontalPolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" name="d"/>
    </Function>
    <Function name="QSizePolicy.verticalPolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QSizePolicy.horizontalPolicy">
      <Argument typename="QSizePolicy.Policy" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QSizePolicy.ControlTypes" convert="1">
    <Function name="QSizePolicy.ControlTypes.__init__"/>
    <Function name="QSizePolicy.ControlTypes.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__init__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__ixor__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__xor__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__ior__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__or__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__iand__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__and__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__invert__">
      <Argument typename="QSizePolicy.ControlTypes" typetype="class" dir="out"/>
    </Function>
    <Function name="QSizePolicy.ControlTypes.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QSlider" inherits="QAbstractSlider">
    <Function name="QSlider.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QSlider.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QSlider.TickPosition">
      <EnumMember name="QSlider.NoTicks"/>
      <EnumMember name="QSlider.TicksAbove"/>
      <EnumMember name="QSlider.TicksLeft"/>
      <EnumMember name="QSlider.TicksBelow"/>
      <EnumMember name="QSlider.TicksRight"/>
      <EnumMember name="QSlider.TicksBothSides"/>
    </Enum>
    <Function name="QSlider.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QSlider.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QSlider.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QSlider.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QSlider.initStyleOption">
      <Argument typename="QStyleOptionSlider" typetype="class" name="option"/>
    </Function>
    <Function name="QSlider.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QSlider.tickInterval">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSlider.setTickInterval">
      <Argument typename="int" name="ti"/>
    </Function>
    <Function name="QSlider.tickPosition">
      <Argument typename="QSlider.TickPosition" typetype="enum" dir="out"/>
    </Function>
    <Function name="QSlider.setTickPosition">
      <Argument typename="QSlider.TickPosition" typetype="enum" name="position"/>
    </Function>
    <Function name="QSlider.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSlider.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QSpinBox" inherits="QAbstractSpinBox">
    <Function name="QSpinBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QSpinBox.setDisplayIntegerBase">
      <Argument typename="int" name="base"/>
    </Function>
    <Function name="QSpinBox.displayIntegerBase">
      <Argument typename="int" dir="out"/>
    </Function>
    <Signal default="1" name="QSpinBox.valueChanged" sig="void valueChanged(int)"/>
    <Signal name="QSpinBox.valueChanged" sig="void valueChanged(const QString&amp;)"/>
    <Function name="QSpinBox.setValue" slot="void setValue(int)">
      <Argument typename="int" name="val"/>
    </Function>
    <Function name="QSpinBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QSpinBox.fixup" virtual="1">
      <Argument typename="QString" typetype="mappedtype" name="str" dir="inout"/>
    </Function>
    <Function name="QSpinBox.textFromValue" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="v"/>
    </Function>
    <Function name="QSpinBox.valueFromText" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QSpinBox.validate" virtual="1">
      <Argument typename="QValidator.State" typetype="enum" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="input" dir="inout"/>
      <Argument typename="int" name="pos" dir="inout"/>
    </Function>
    <Function name="QSpinBox.setRange">
      <Argument typename="int" name="min"/>
      <Argument typename="int" name="max"/>
    </Function>
    <Function name="QSpinBox.setMaximum">
      <Argument typename="int" name="max"/>
    </Function>
    <Function name="QSpinBox.maximum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSpinBox.setMinimum">
      <Argument typename="int" name="min"/>
    </Function>
    <Function name="QSpinBox.minimum">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSpinBox.setSingleStep">
      <Argument typename="int" name="val"/>
    </Function>
    <Function name="QSpinBox.singleStep">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSpinBox.cleanText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QSpinBox.setSuffix">
      <Argument typename="QString" typetype="mappedtype" name="s"/>
    </Function>
    <Function name="QSpinBox.suffix">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QSpinBox.setPrefix">
      <Argument typename="QString" typetype="mappedtype" name="p"/>
    </Function>
    <Function name="QSpinBox.prefix">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QSpinBox.value">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QDoubleSpinBox" inherits="QAbstractSpinBox">
    <Function name="QDoubleSpinBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Signal default="1" name="QDoubleSpinBox.valueChanged" sig="void valueChanged(double)"/>
    <Signal name="QDoubleSpinBox.valueChanged" sig="void valueChanged(const QString&amp;)"/>
    <Function name="QDoubleSpinBox.setValue" slot="void setValue(double)">
      <Argument typename="float" name="val"/>
    </Function>
    <Function name="QDoubleSpinBox.fixup" virtual="1">
      <Argument typename="QString" typetype="mappedtype" name="str" dir="inout"/>
    </Function>
    <Function name="QDoubleSpinBox.textFromValue" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="float" name="v"/>
    </Function>
    <Function name="QDoubleSpinBox.valueFromText" virtual="1">
      <Argument typename="float" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QDoubleSpinBox.validate" virtual="1">
      <Argument typename="QValidator.State" typetype="enum" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="input" dir="inout"/>
      <Argument typename="int" name="pos" dir="inout"/>
    </Function>
    <Function name="QDoubleSpinBox.setDecimals">
      <Argument typename="int" name="prec"/>
    </Function>
    <Function name="QDoubleSpinBox.decimals">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.setRange">
      <Argument typename="float" name="min"/>
      <Argument typename="float" name="max"/>
    </Function>
    <Function name="QDoubleSpinBox.setMaximum">
      <Argument typename="float" name="max"/>
    </Function>
    <Function name="QDoubleSpinBox.maximum">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.setMinimum">
      <Argument typename="float" name="min"/>
    </Function>
    <Function name="QDoubleSpinBox.minimum">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.setSingleStep">
      <Argument typename="float" name="val"/>
    </Function>
    <Function name="QDoubleSpinBox.singleStep">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.cleanText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.setSuffix">
      <Argument typename="QString" typetype="mappedtype" name="s"/>
    </Function>
    <Function name="QDoubleSpinBox.suffix">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.setPrefix">
      <Argument typename="QString" typetype="mappedtype" name="p"/>
    </Function>
    <Function name="QDoubleSpinBox.prefix">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QDoubleSpinBox.value">
      <Argument typename="float" dir="out"/>
    </Function>
  </Class>
  <Class name="QSplashScreen" inherits="QWidget">
    <Function name="QSplashScreen.__init__">
      <Argument typename="QPixmap" typetype="class" name="pixmap" default="QPixmap()"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QSplashScreen.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap" default="QPixmap()"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QSplashScreen.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QSplashScreen.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QSplashScreen.drawContents" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
    </Function>
    <Signal default="1" name="QSplashScreen.messageChanged" sig="void messageChanged(const QString&amp;)"/>
    <Function name="QSplashScreen.clearMessage" slot="void clearMessage()"/>
    <Function name="QSplashScreen.showMessage" slot="void showMessage(const QString&amp;,int = Qt.AlignLeft,const  ::QColor&amp; = Qt.black)">
      <Argument typename="QString" typetype="mappedtype" name="message"/>
      <Argument typename="int" name="alignment" default="Qt.AlignLeft"/>
      <Argument typename="QColor" typetype="class" name="color" default="Qt.black"/>
    </Function>
    <Function name="QSplashScreen.message">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QSplashScreen.repaint"/>
    <Function name="QSplashScreen.finish">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QSplashScreen.pixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
    </Function>
    <Function name="QSplashScreen.setPixmap">
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
  </Class>
  <Class name="QSplitter" inherits="QFrame">
    <Function name="QSplitter.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QSplitter.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QSplitter.closestLegalPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QSplitter.setRubberBand">
      <Argument typename="int" name="position"/>
    </Function>
    <Function name="QSplitter.moveSplitter">
      <Argument typename="int" name="pos"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QSplitter.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QSplitter.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QSplitter.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QSplitter.childEvent" virtual="1">
      <Argument typename="QChildEvent" typetype="class"/>
    </Function>
    <Function name="QSplitter.createHandle" virtual="1">
      <Argument typename="QSplitterHandle" typetype="class" dir="out"/>
    </Function>
    <Signal default="1" name="QSplitter.splitterMoved" sig="void splitterMoved(int,int)"/>
    <Function name="QSplitter.setStretchFactor">
      <Argument typename="int" name="index"/>
      <Argument typename="int" name="stretch"/>
    </Function>
    <Function name="QSplitter.handle">
      <Argument typename="QSplitterHandle" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QSplitter.getRange">
      <Argument typename="int" name="index"/>
      <Argument typename="int" dir="out"/>
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSplitter.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSplitter.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSplitter.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QSplitter.indexOf">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QSplitter.setHandleWidth">
      <Argument typename="int"/>
    </Function>
    <Function name="QSplitter.handleWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QSplitter.restoreState">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QByteArray" typetype="class" name="state"/>
    </Function>
    <Function name="QSplitter.saveState">
      <Argument typename="QByteArray" typetype="class" dir="out"/>
    </Function>
    <Function name="QSplitter.setSizes">
      <Argument typename="unknown-type" typetype="mappedtype" name="list"/>
    </Function>
    <Function name="QSplitter.sizes">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QSplitter.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSplitter.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSplitter.refresh"/>
    <Function name="QSplitter.opaqueResize">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSplitter.setOpaqueResize">
      <Argument typename="bool" name="opaque" default="True"/>
    </Function>
    <Function name="QSplitter.isCollapsible">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QSplitter.setCollapsible">
      <Argument typename="int" name="index"/>
      <Argument typename="bool"/>
    </Function>
    <Function name="QSplitter.childrenCollapsible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSplitter.setChildrenCollapsible">
      <Argument typename="bool"/>
    </Function>
    <Function name="QSplitter.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QSplitter.setOrientation">
      <Argument typename="Qt.Orientation" typetype="enum"/>
    </Function>
    <Function name="QSplitter.insertWidget">
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QSplitter.addWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
  </Class>
  <Class name="QSplitterHandle" inherits="QWidget">
    <Function name="QSplitterHandle.__init__">
      <Argument typename="Qt.Orientation" typetype="enum" name="o"/>
      <Argument typename="QSplitter" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QSplitterHandle.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QSplitterHandle.closestLegalPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="p"/>
    </Function>
    <Function name="QSplitterHandle.moveSplitter">
      <Argument typename="int" name="p"/>
    </Function>
    <Function name="QSplitterHandle.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QSplitterHandle.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QSplitterHandle.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QSplitterHandle.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QSplitterHandle.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QSplitterHandle.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QSplitterHandle.splitter">
      <Argument typename="QSplitter" typetype="class" dir="out"/>
    </Function>
    <Function name="QSplitterHandle.opaqueResize">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSplitterHandle.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QSplitterHandle.setOrientation">
      <Argument typename="Qt.Orientation" typetype="enum" name="o"/>
    </Function>
  </Class>
  <Class name="QStackedLayout" inherits="QLayout">
    <Function name="QStackedLayout.__init__"/>
    <Function name="QStackedLayout.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QStackedLayout.__init__">
      <Argument typename="QLayout" typetype="class" name="parentLayout" transfer="this"/>
    </Function>
    <Enum name="QStackedLayout.StackingMode">
      <EnumMember name="QStackedLayout.StackOne"/>
      <EnumMember name="QStackedLayout.StackAll"/>
    </Enum>
    <Function name="QStackedLayout.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QStackedLayout.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QStackedLayout.setStackingMode">
      <Argument typename="QStackedLayout.StackingMode" typetype="enum" name="stackingMode"/>
    </Function>
    <Function name="QStackedLayout.stackingMode">
      <Argument typename="QStackedLayout.StackingMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QStackedLayout.setCurrentWidget" slot="void setCurrentWidget( ::QWidget*)">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStackedLayout.setCurrentIndex" slot="void setCurrentIndex(int)">
      <Argument typename="int" name="index"/>
    </Function>
    <Signal default="1" name="QStackedLayout.currentChanged" sig="void currentChanged(int)"/>
    <Signal default="1" name="QStackedLayout.widgetRemoved" sig="void widgetRemoved(int)"/>
    <Function name="QStackedLayout.setGeometry" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
    </Function>
    <Function name="QStackedLayout.takeAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QStackedLayout.itemAt" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QStackedLayout.minimumSize" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QStackedLayout.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QStackedLayout.addItem" virtual="1">
      <Argument typename="QLayoutItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QStackedLayout.count" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStackedLayout.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QStackedLayout.widget" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QStackedLayout.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStackedLayout.currentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QStackedLayout.insertWidget">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStackedLayout.addWidget">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
  </Class>
  <Class name="QStackedWidget" inherits="QFrame">
    <Function name="QStackedWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QStackedWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QStackedWidget.widgetRemoved" sig="void widgetRemoved(int)"/>
    <Signal default="1" name="QStackedWidget.currentChanged" sig="void currentChanged(int)"/>
    <Function name="QStackedWidget.setCurrentWidget" slot="void setCurrentWidget( ::QWidget*)">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStackedWidget.setCurrentIndex" slot="void setCurrentIndex(int)">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QStackedWidget.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStackedWidget.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStackedWidget.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QStackedWidget.indexOf">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class"/>
    </Function>
    <Function name="QStackedWidget.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStackedWidget.currentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QStackedWidget.removeWidget">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStackedWidget.insertWidget">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="w" transfer="to"/>
    </Function>
    <Function name="QStackedWidget.addWidget">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w" transfer="to"/>
    </Function>
  </Class>
  <Class name="QStatusBar" inherits="QWidget">
    <Function name="QStatusBar.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QStatusBar.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QStatusBar.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QStatusBar.hideOrShow"/>
    <Function name="QStatusBar.reformat"/>
    <Function name="QStatusBar.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QStatusBar.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Signal default="1" name="QStatusBar.messageChanged" sig="void messageChanged(const QString&amp;)"/>
    <Function name="QStatusBar.clearMessage" slot="void clearMessage()"/>
    <Function name="QStatusBar.showMessage" slot="void showMessage(const QString&amp;,int = 0)">
      <Argument typename="QString" typetype="mappedtype" name="message"/>
      <Argument typename="int" name="msecs" default="0"/>
    </Function>
    <Function name="QStatusBar.insertPermanentWidget">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QStatusBar.insertWidget">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QStatusBar.currentMessage">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QStatusBar.isSizeGripEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QStatusBar.setSizeGripEnabled">
      <Argument typename="bool"/>
    </Function>
    <Function name="QStatusBar.removeWidget">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QStatusBar.addPermanentWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
    <Function name="QStatusBar.addWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="int" name="stretch" default="0"/>
    </Function>
  </Class>
  <Class name="QStyle.State" convert="1">
    <Function name="QStyle.State.__init__"/>
    <Function name="QStyle.State.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__init__">
      <Argument typename="QStyle.State" typetype="class"/>
    </Function>
    <Function name="QStyle.State.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyle.State.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyle.State.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyle.State" typetype="class" name="f"/>
    </Function>
    <Function name="QStyle.State.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyle.State" typetype="class" name="f"/>
    </Function>
    <Function name="QStyle.State.__ixor__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__xor__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__ior__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__or__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__iand__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__and__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.State.__invert__">
      <Argument typename="QStyle.State" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyle.State.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyle.SubControls" convert="1">
    <Function name="QStyle.SubControls.__init__"/>
    <Function name="QStyle.SubControls.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__init__">
      <Argument typename="QStyle.SubControls" typetype="class"/>
    </Function>
    <Function name="QStyle.SubControls.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyle.SubControls.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyle.SubControls.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyle.SubControls" typetype="class" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyle.SubControls" typetype="class" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__ixor__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__xor__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__ior__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__or__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__iand__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__and__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyle.SubControls.__invert__">
      <Argument typename="QStyle.SubControls" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyle.SubControls.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyledItemDelegate" inherits="QAbstractItemDelegate">
    <Function name="QStyledItemDelegate.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QStyledItemDelegate.editorEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class" name="object"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QStyledItemDelegate.initStyleOption" virtual="1">
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.displayText" virtual="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
      <Argument typename="QLocale" typetype="class" name="locale"/>
    </Function>
    <Function name="QStyledItemDelegate.setItemEditorFactory">
      <Argument typename="QItemEditorFactory" typetype="class" name="factory"/>
    </Function>
    <Function name="QStyledItemDelegate.itemEditorFactory">
      <Argument typename="QItemEditorFactory" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyledItemDelegate.updateEditorGeometry" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.setModelData" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.setEditorData" virtual="1">
      <Argument typename="QWidget" typetype="class" name="editor"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.createEditor" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QStyledItemDelegate.paint" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="option"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
  </Class>
  <Class name="QStyleFactory">
    <Function name="QStyleFactory.__init__"/>
    <Function name="QStyleFactory.__init__">
      <Argument typename="QStyleFactory" typetype="class"/>
    </Function>
    <Function name="QStyleFactory.create" static="1">
      <Argument typename="QStyle" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QStyleFactory.keys" static="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOption">
    <Function name="QStyleOption.__init__">
      <Argument typename="int" name="version" default="QStyleOption.Version"/>
      <Argument typename="int" name="type" default="QStyleOption.SO_Default"/>
    </Function>
    <Function name="QStyleOption.__init__">
      <Argument typename="QStyleOption" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOption.StyleOptionVersion">
      <EnumMember name="QStyleOption.Version"/>
    </Enum>
    <Enum name="QStyleOption.StyleOptionType">
      <EnumMember name="QStyleOption.Type"/>
    </Enum>
    <Enum name="QStyleOption.OptionType">
      <EnumMember name="QStyleOption.SO_Default"/>
      <EnumMember name="QStyleOption.SO_FocusRect"/>
      <EnumMember name="QStyleOption.SO_Button"/>
      <EnumMember name="QStyleOption.SO_Tab"/>
      <EnumMember name="QStyleOption.SO_MenuItem"/>
      <EnumMember name="QStyleOption.SO_Frame"/>
      <EnumMember name="QStyleOption.SO_ProgressBar"/>
      <EnumMember name="QStyleOption.SO_ToolBox"/>
      <EnumMember name="QStyleOption.SO_Header"/>
      <EnumMember name="QStyleOption.SO_DockWidget"/>
      <EnumMember name="QStyleOption.SO_ViewItem"/>
      <EnumMember name="QStyleOption.SO_TabWidgetFrame"/>
      <EnumMember name="QStyleOption.SO_TabBarBase"/>
      <EnumMember name="QStyleOption.SO_RubberBand"/>
      <EnumMember name="QStyleOption.SO_ToolBar"/>
      <EnumMember name="QStyleOption.SO_Complex"/>
      <EnumMember name="QStyleOption.SO_Slider"/>
      <EnumMember name="QStyleOption.SO_SpinBox"/>
      <EnumMember name="QStyleOption.SO_ToolButton"/>
      <EnumMember name="QStyleOption.SO_ComboBox"/>
      <EnumMember name="QStyleOption.SO_TitleBar"/>
      <EnumMember name="QStyleOption.SO_GroupBox"/>
      <EnumMember name="QStyleOption.SO_ComplexCustomBase"/>
      <EnumMember name="QStyleOption.SO_GraphicsItem"/>
      <EnumMember name="QStyleOption.SO_SizeGrip"/>
      <EnumMember name="QStyleOption.SO_CustomBase"/>
    </Enum>
    <Member name="QStyleOption.direction" typename="Qt.LayoutDirection" typetype="enum"/>
    <Member name="QStyleOption.fontMetrics" typename="QFontMetrics" typetype="class"/>
    <Member name="QStyleOption.palette" typename="QPalette" typetype="class"/>
    <Member name="QStyleOption.rect" typename="QRect" typetype="class"/>
    <Member name="QStyleOption.state" typename="QStyle.State" typetype="class"/>
    <Member name="QStyleOption.styleObject" typename="QObject" typetype="class"/>
    <Member name="QStyleOption.type" typename="int"/>
    <Member name="QStyleOption.version" typename="int"/>
    <Function name="QStyleOption.initFrom">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
  </Class>
  <Class name="QStyleOptionFocusRect" inherits="QStyleOption">
    <Function name="QStyleOptionFocusRect.__init__"/>
    <Function name="QStyleOptionFocusRect.__init__">
      <Argument typename="QStyleOptionFocusRect" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionFocusRect.StyleOptionVersion">
      <EnumMember name="QStyleOptionFocusRect.Version"/>
    </Enum>
    <Enum name="QStyleOptionFocusRect.StyleOptionType">
      <EnumMember name="QStyleOptionFocusRect.Type"/>
    </Enum>
    <Member name="QStyleOptionFocusRect.backgroundColor" typename="QColor" typetype="class"/>
  </Class>
  <Class name="QStyleOptionFrame" inherits="QStyleOption">
    <Function name="QStyleOptionFrame.__init__"/>
    <Function name="QStyleOptionFrame.__init__">
      <Argument typename="QStyleOptionFrame" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionFrame.FrameFeature">
      <EnumMember name="QStyleOptionFrame.None_"/>
      <EnumMember name="QStyleOptionFrame.Flat"/>
      <EnumMember name="QStyleOptionFrame.Rounded"/>
    </Enum>
    <Enum name="QStyleOptionFrame.StyleOptionVersion">
      <EnumMember name="QStyleOptionFrame.Version"/>
    </Enum>
    <Enum name="QStyleOptionFrame.StyleOptionType">
      <EnumMember name="QStyleOptionFrame.Type"/>
    </Enum>
    <Member name="QStyleOptionFrame.features" typename="QStyleOptionFrame.FrameFeatures" typetype="class"/>
    <Member name="QStyleOptionFrame.frameShape" typename="QFrame.Shape" typetype="enum"/>
    <Member name="QStyleOptionFrame.lineWidth" typename="int"/>
    <Member name="QStyleOptionFrame.midLineWidth" typename="int"/>
  </Class>
  <Class name="QStyleOptionFrame.FrameFeatures" convert="1">
    <Function name="QStyleOptionFrame.FrameFeatures.__init__"/>
    <Function name="QStyleOptionFrame.FrameFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__init__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__ixor__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__xor__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__ior__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__or__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__iand__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__and__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__invert__">
      <Argument typename="QStyleOptionFrame.FrameFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionFrame.FrameFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionTabWidgetFrame" inherits="QStyleOption">
    <Function name="QStyleOptionTabWidgetFrame.__init__"/>
    <Function name="QStyleOptionTabWidgetFrame.__init__">
      <Argument typename="QStyleOptionTabWidgetFrame" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionTabWidgetFrame.StyleOptionVersion">
      <EnumMember name="QStyleOptionTabWidgetFrame.Version"/>
    </Enum>
    <Enum name="QStyleOptionTabWidgetFrame.StyleOptionType">
      <EnumMember name="QStyleOptionTabWidgetFrame.Type"/>
    </Enum>
    <Member name="QStyleOptionTabWidgetFrame.leftCornerWidgetSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionTabWidgetFrame.lineWidth" typename="int"/>
    <Member name="QStyleOptionTabWidgetFrame.midLineWidth" typename="int"/>
    <Member name="QStyleOptionTabWidgetFrame.rightCornerWidgetSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionTabWidgetFrame.selectedTabRect" typename="QRect" typetype="class"/>
    <Member name="QStyleOptionTabWidgetFrame.shape" typename="QTabBar.Shape" typetype="enum"/>
    <Member name="QStyleOptionTabWidgetFrame.tabBarRect" typename="QRect" typetype="class"/>
    <Member name="QStyleOptionTabWidgetFrame.tabBarSize" typename="QSize" typetype="class"/>
  </Class>
  <Class name="QStyleOptionTabBarBase" inherits="QStyleOption">
    <Function name="QStyleOptionTabBarBase.__init__"/>
    <Function name="QStyleOptionTabBarBase.__init__">
      <Argument typename="QStyleOptionTabBarBase" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionTabBarBase.StyleOptionVersion">
      <EnumMember name="QStyleOptionTabBarBase.Version"/>
    </Enum>
    <Enum name="QStyleOptionTabBarBase.StyleOptionType">
      <EnumMember name="QStyleOptionTabBarBase.Type"/>
    </Enum>
    <Member name="QStyleOptionTabBarBase.documentMode" typename="bool"/>
    <Member name="QStyleOptionTabBarBase.selectedTabRect" typename="QRect" typetype="class"/>
    <Member name="QStyleOptionTabBarBase.shape" typename="QTabBar.Shape" typetype="enum"/>
    <Member name="QStyleOptionTabBarBase.tabBarRect" typename="QRect" typetype="class"/>
  </Class>
  <Class name="QStyleOptionHeader" inherits="QStyleOption">
    <Function name="QStyleOptionHeader.__init__"/>
    <Function name="QStyleOptionHeader.__init__">
      <Argument typename="QStyleOptionHeader" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionHeader.SortIndicator">
      <EnumMember name="QStyleOptionHeader.None_"/>
      <EnumMember name="QStyleOptionHeader.SortUp"/>
      <EnumMember name="QStyleOptionHeader.SortDown"/>
    </Enum>
    <Enum name="QStyleOptionHeader.SelectedPosition">
      <EnumMember name="QStyleOptionHeader.NotAdjacent"/>
      <EnumMember name="QStyleOptionHeader.NextIsSelected"/>
      <EnumMember name="QStyleOptionHeader.PreviousIsSelected"/>
      <EnumMember name="QStyleOptionHeader.NextAndPreviousAreSelected"/>
    </Enum>
    <Enum name="QStyleOptionHeader.SectionPosition">
      <EnumMember name="QStyleOptionHeader.Beginning"/>
      <EnumMember name="QStyleOptionHeader.Middle"/>
      <EnumMember name="QStyleOptionHeader.End"/>
      <EnumMember name="QStyleOptionHeader.OnlyOneSection"/>
    </Enum>
    <Enum name="QStyleOptionHeader.StyleOptionVersion">
      <EnumMember name="QStyleOptionHeader.Version"/>
    </Enum>
    <Enum name="QStyleOptionHeader.StyleOptionType">
      <EnumMember name="QStyleOptionHeader.Type"/>
    </Enum>
    <Member name="QStyleOptionHeader.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionHeader.iconAlignment" typename="Qt.Alignment" typetype="class"/>
    <Member name="QStyleOptionHeader.orientation" typename="Qt.Orientation" typetype="enum"/>
    <Member name="QStyleOptionHeader.position" typename="QStyleOptionHeader.SectionPosition" typetype="enum"/>
    <Member name="QStyleOptionHeader.section" typename="int"/>
    <Member name="QStyleOptionHeader.selectedPosition" typename="QStyleOptionHeader.SelectedPosition" typetype="enum"/>
    <Member name="QStyleOptionHeader.sortIndicator" typename="QStyleOptionHeader.SortIndicator" typetype="enum"/>
    <Member name="QStyleOptionHeader.text" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionHeader.textAlignment" typename="Qt.Alignment" typetype="class"/>
  </Class>
  <Class name="QStyleOptionButton" inherits="QStyleOption">
    <Function name="QStyleOptionButton.__init__"/>
    <Function name="QStyleOptionButton.__init__">
      <Argument typename="QStyleOptionButton" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionButton.ButtonFeature">
      <EnumMember name="QStyleOptionButton.None_"/>
      <EnumMember name="QStyleOptionButton.Flat"/>
      <EnumMember name="QStyleOptionButton.HasMenu"/>
      <EnumMember name="QStyleOptionButton.DefaultButton"/>
      <EnumMember name="QStyleOptionButton.AutoDefaultButton"/>
      <EnumMember name="QStyleOptionButton.CommandLinkButton"/>
    </Enum>
    <Enum name="QStyleOptionButton.StyleOptionVersion">
      <EnumMember name="QStyleOptionButton.Version"/>
    </Enum>
    <Enum name="QStyleOptionButton.StyleOptionType">
      <EnumMember name="QStyleOptionButton.Type"/>
    </Enum>
    <Member name="QStyleOptionButton.features" typename="QStyleOptionButton.ButtonFeatures" typetype="class"/>
    <Member name="QStyleOptionButton.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionButton.iconSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionButton.text" typename="QString" typetype="mappedtype"/>
  </Class>
  <Class name="QStyleOptionButton.ButtonFeatures" convert="1">
    <Function name="QStyleOptionButton.ButtonFeatures.__init__"/>
    <Function name="QStyleOptionButton.ButtonFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__init__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__ixor__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__xor__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__ior__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__or__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__iand__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__and__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__invert__">
      <Argument typename="QStyleOptionButton.ButtonFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionButton.ButtonFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionTab" inherits="QStyleOption">
    <Function name="QStyleOptionTab.__init__"/>
    <Function name="QStyleOptionTab.__init__">
      <Argument typename="QStyleOptionTab" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionTab.TabFeature">
      <EnumMember name="QStyleOptionTab.None_"/>
      <EnumMember name="QStyleOptionTab.HasFrame"/>
    </Enum>
    <Enum name="QStyleOptionTab.CornerWidget">
      <EnumMember name="QStyleOptionTab.NoCornerWidgets"/>
      <EnumMember name="QStyleOptionTab.LeftCornerWidget"/>
      <EnumMember name="QStyleOptionTab.RightCornerWidget"/>
    </Enum>
    <Enum name="QStyleOptionTab.SelectedPosition">
      <EnumMember name="QStyleOptionTab.NotAdjacent"/>
      <EnumMember name="QStyleOptionTab.NextIsSelected"/>
      <EnumMember name="QStyleOptionTab.PreviousIsSelected"/>
    </Enum>
    <Enum name="QStyleOptionTab.TabPosition">
      <EnumMember name="QStyleOptionTab.Beginning"/>
      <EnumMember name="QStyleOptionTab.Middle"/>
      <EnumMember name="QStyleOptionTab.End"/>
      <EnumMember name="QStyleOptionTab.OnlyOneTab"/>
    </Enum>
    <Enum name="QStyleOptionTab.StyleOptionVersion">
      <EnumMember name="QStyleOptionTab.Version"/>
    </Enum>
    <Enum name="QStyleOptionTab.StyleOptionType">
      <EnumMember name="QStyleOptionTab.Type"/>
    </Enum>
    <Member name="QStyleOptionTab.cornerWidgets" typename="QStyleOptionTab.CornerWidgets" typetype="class"/>
    <Member name="QStyleOptionTab.documentMode" typename="bool"/>
    <Member name="QStyleOptionTab.features" typename="QStyleOptionTab.TabFeatures" typetype="class"/>
    <Member name="QStyleOptionTab.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionTab.iconSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionTab.leftButtonSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionTab.position" typename="QStyleOptionTab.TabPosition" typetype="enum"/>
    <Member name="QStyleOptionTab.rightButtonSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionTab.row" typename="int"/>
    <Member name="QStyleOptionTab.selectedPosition" typename="QStyleOptionTab.SelectedPosition" typetype="enum"/>
    <Member name="QStyleOptionTab.shape" typename="QTabBar.Shape" typetype="enum"/>
    <Member name="QStyleOptionTab.text" typename="QString" typetype="mappedtype"/>
  </Class>
  <Class name="QStyleOptionTab.CornerWidgets" convert="1">
    <Function name="QStyleOptionTab.CornerWidgets.__init__"/>
    <Function name="QStyleOptionTab.CornerWidgets.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__init__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__ixor__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__xor__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__ior__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__or__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__iand__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__and__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__invert__">
      <Argument typename="QStyleOptionTab.CornerWidgets" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionTab.CornerWidgets.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionTab.TabFeatures" convert="1">
    <Function name="QStyleOptionTab.TabFeatures.__init__"/>
    <Function name="QStyleOptionTab.TabFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__init__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__ixor__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__xor__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__ior__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__or__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__iand__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__and__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__invert__">
      <Argument typename="QStyleOptionTab.TabFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionTab.TabFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionProgressBar" inherits="QStyleOption">
    <Function name="QStyleOptionProgressBar.__init__"/>
    <Function name="QStyleOptionProgressBar.__init__">
      <Argument typename="QStyleOptionProgressBar" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionProgressBar.StyleOptionVersion">
      <EnumMember name="QStyleOptionProgressBar.Version"/>
    </Enum>
    <Enum name="QStyleOptionProgressBar.StyleOptionType">
      <EnumMember name="QStyleOptionProgressBar.Type"/>
    </Enum>
    <Member name="QStyleOptionProgressBar.bottomToTop" typename="bool"/>
    <Member name="QStyleOptionProgressBar.invertedAppearance" typename="bool"/>
    <Member name="QStyleOptionProgressBar.maximum" typename="int"/>
    <Member name="QStyleOptionProgressBar.minimum" typename="int"/>
    <Member name="QStyleOptionProgressBar.orientation" typename="Qt.Orientation" typetype="enum"/>
    <Member name="QStyleOptionProgressBar.progress" typename="int"/>
    <Member name="QStyleOptionProgressBar.text" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionProgressBar.textAlignment" typename="Qt.Alignment" typetype="class"/>
    <Member name="QStyleOptionProgressBar.textVisible" typename="bool"/>
  </Class>
  <Class name="QStyleOptionMenuItem" inherits="QStyleOption">
    <Function name="QStyleOptionMenuItem.__init__"/>
    <Function name="QStyleOptionMenuItem.__init__">
      <Argument typename="QStyleOptionMenuItem" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionMenuItem.CheckType">
      <EnumMember name="QStyleOptionMenuItem.NotCheckable"/>
      <EnumMember name="QStyleOptionMenuItem.Exclusive"/>
      <EnumMember name="QStyleOptionMenuItem.NonExclusive"/>
    </Enum>
    <Enum name="QStyleOptionMenuItem.MenuItemType">
      <EnumMember name="QStyleOptionMenuItem.Normal"/>
      <EnumMember name="QStyleOptionMenuItem.DefaultItem"/>
      <EnumMember name="QStyleOptionMenuItem.Separator"/>
      <EnumMember name="QStyleOptionMenuItem.SubMenu"/>
      <EnumMember name="QStyleOptionMenuItem.Scroller"/>
      <EnumMember name="QStyleOptionMenuItem.TearOff"/>
      <EnumMember name="QStyleOptionMenuItem.Margin"/>
      <EnumMember name="QStyleOptionMenuItem.EmptyArea"/>
    </Enum>
    <Enum name="QStyleOptionMenuItem.StyleOptionVersion">
      <EnumMember name="QStyleOptionMenuItem.Version"/>
    </Enum>
    <Enum name="QStyleOptionMenuItem.StyleOptionType">
      <EnumMember name="QStyleOptionMenuItem.Type"/>
    </Enum>
    <Member name="QStyleOptionMenuItem.checkType" typename="QStyleOptionMenuItem.CheckType" typetype="enum"/>
    <Member name="QStyleOptionMenuItem.checked" typename="bool"/>
    <Member name="QStyleOptionMenuItem.font" typename="QFont" typetype="class"/>
    <Member name="QStyleOptionMenuItem.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionMenuItem.maxIconWidth" typename="int"/>
    <Member name="QStyleOptionMenuItem.menuHasCheckableItems" typename="bool"/>
    <Member name="QStyleOptionMenuItem.menuItemType" typename="QStyleOptionMenuItem.MenuItemType" typetype="enum"/>
    <Member name="QStyleOptionMenuItem.menuRect" typename="QRect" typetype="class"/>
    <Member name="QStyleOptionMenuItem.tabWidth" typename="int"/>
    <Member name="QStyleOptionMenuItem.text" typename="QString" typetype="mappedtype"/>
  </Class>
  <Class name="QStyleOptionDockWidget" inherits="QStyleOption">
    <Function name="QStyleOptionDockWidget.__init__"/>
    <Function name="QStyleOptionDockWidget.__init__">
      <Argument typename="QStyleOptionDockWidget" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionDockWidget.StyleOptionVersion">
      <EnumMember name="QStyleOptionDockWidget.Version"/>
    </Enum>
    <Enum name="QStyleOptionDockWidget.StyleOptionType">
      <EnumMember name="QStyleOptionDockWidget.Type"/>
    </Enum>
    <Member name="QStyleOptionDockWidget.closable" typename="bool"/>
    <Member name="QStyleOptionDockWidget.floatable" typename="bool"/>
    <Member name="QStyleOptionDockWidget.movable" typename="bool"/>
    <Member name="QStyleOptionDockWidget.title" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionDockWidget.verticalTitleBar" typename="bool"/>
  </Class>
  <Class name="QStyleOptionViewItem" inherits="QStyleOption">
    <Function name="QStyleOptionViewItem.__init__"/>
    <Function name="QStyleOptionViewItem.__init__">
      <Argument typename="QStyleOptionViewItem" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionViewItem.ViewItemPosition">
      <EnumMember name="QStyleOptionViewItem.Invalid"/>
      <EnumMember name="QStyleOptionViewItem.Beginning"/>
      <EnumMember name="QStyleOptionViewItem.Middle"/>
      <EnumMember name="QStyleOptionViewItem.End"/>
      <EnumMember name="QStyleOptionViewItem.OnlyOne"/>
    </Enum>
    <Enum name="QStyleOptionViewItem.ViewItemFeature">
      <EnumMember name="QStyleOptionViewItem.None_"/>
      <EnumMember name="QStyleOptionViewItem.WrapText"/>
      <EnumMember name="QStyleOptionViewItem.Alternate"/>
      <EnumMember name="QStyleOptionViewItem.HasCheckIndicator"/>
      <EnumMember name="QStyleOptionViewItem.HasDisplay"/>
      <EnumMember name="QStyleOptionViewItem.HasDecoration"/>
    </Enum>
    <Enum name="QStyleOptionViewItem.Position">
      <EnumMember name="QStyleOptionViewItem.Left"/>
      <EnumMember name="QStyleOptionViewItem.Right"/>
      <EnumMember name="QStyleOptionViewItem.Top"/>
      <EnumMember name="QStyleOptionViewItem.Bottom"/>
    </Enum>
    <Enum name="QStyleOptionViewItem.StyleOptionVersion">
      <EnumMember name="QStyleOptionViewItem.Version"/>
    </Enum>
    <Enum name="QStyleOptionViewItem.StyleOptionType">
      <EnumMember name="QStyleOptionViewItem.Type"/>
    </Enum>
    <Member name="QStyleOptionViewItem.backgroundBrush" typename="QBrush" typetype="class"/>
    <Member name="QStyleOptionViewItem.checkState" typename="Qt.CheckState" typetype="enum"/>
    <Member name="QStyleOptionViewItem.decorationAlignment" typename="Qt.Alignment" typetype="class"/>
    <Member name="QStyleOptionViewItem.decorationPosition" typename="QStyleOptionViewItem.Position" typetype="enum"/>
    <Member name="QStyleOptionViewItem.decorationSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionViewItem.displayAlignment" typename="Qt.Alignment" typetype="class"/>
    <Member name="QStyleOptionViewItem.features" typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class"/>
    <Member name="QStyleOptionViewItem.font" typename="QFont" typetype="class"/>
    <Member name="QStyleOptionViewItem.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionViewItem.index" typename="QModelIndex" typetype="class"/>
    <Member name="QStyleOptionViewItem.locale" typename="QLocale" typetype="class"/>
    <Member name="QStyleOptionViewItem.showDecorationSelected" typename="bool"/>
    <Member name="QStyleOptionViewItem.text" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionViewItem.textElideMode" typename="Qt.TextElideMode" typetype="enum"/>
    <Member name="QStyleOptionViewItem.viewItemPosition" typename="QStyleOptionViewItem.ViewItemPosition" typetype="enum"/>
    <Member name="QStyleOptionViewItem.widget" const="1" typename="QWidget" typetype="class"/>
  </Class>
  <Class name="QStyleOptionViewItem.ViewItemFeatures" convert="1">
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__init__"/>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__init__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__ixor__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__xor__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__ior__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__or__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__iand__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__and__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__invert__">
      <Argument typename="QStyleOptionViewItem.ViewItemFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionViewItem.ViewItemFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionToolBox" inherits="QStyleOption">
    <Function name="QStyleOptionToolBox.__init__"/>
    <Function name="QStyleOptionToolBox.__init__">
      <Argument typename="QStyleOptionToolBox" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionToolBox.SelectedPosition">
      <EnumMember name="QStyleOptionToolBox.NotAdjacent"/>
      <EnumMember name="QStyleOptionToolBox.NextIsSelected"/>
      <EnumMember name="QStyleOptionToolBox.PreviousIsSelected"/>
    </Enum>
    <Enum name="QStyleOptionToolBox.TabPosition">
      <EnumMember name="QStyleOptionToolBox.Beginning"/>
      <EnumMember name="QStyleOptionToolBox.Middle"/>
      <EnumMember name="QStyleOptionToolBox.End"/>
      <EnumMember name="QStyleOptionToolBox.OnlyOneTab"/>
    </Enum>
    <Enum name="QStyleOptionToolBox.StyleOptionVersion">
      <EnumMember name="QStyleOptionToolBox.Version"/>
    </Enum>
    <Enum name="QStyleOptionToolBox.StyleOptionType">
      <EnumMember name="QStyleOptionToolBox.Type"/>
    </Enum>
    <Member name="QStyleOptionToolBox.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionToolBox.position" typename="QStyleOptionToolBox.TabPosition" typetype="enum"/>
    <Member name="QStyleOptionToolBox.selectedPosition" typename="QStyleOptionToolBox.SelectedPosition" typetype="enum"/>
    <Member name="QStyleOptionToolBox.text" typename="QString" typetype="mappedtype"/>
  </Class>
  <Class name="QStyleOptionRubberBand" inherits="QStyleOption">
    <Function name="QStyleOptionRubberBand.__init__"/>
    <Function name="QStyleOptionRubberBand.__init__">
      <Argument typename="QStyleOptionRubberBand" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionRubberBand.StyleOptionVersion">
      <EnumMember name="QStyleOptionRubberBand.Version"/>
    </Enum>
    <Enum name="QStyleOptionRubberBand.StyleOptionType">
      <EnumMember name="QStyleOptionRubberBand.Type"/>
    </Enum>
    <Member name="QStyleOptionRubberBand.opaque" typename="bool"/>
    <Member name="QStyleOptionRubberBand.shape" typename="QRubberBand.Shape" typetype="enum"/>
  </Class>
  <Class name="QStyleOptionComplex" inherits="QStyleOption">
    <Function name="QStyleOptionComplex.__init__">
      <Argument typename="int" name="version" default="QStyleOptionComplex.Version"/>
      <Argument typename="int" name="type" default="QStyleOption.SO_Complex"/>
    </Function>
    <Function name="QStyleOptionComplex.__init__">
      <Argument typename="QStyleOptionComplex" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionComplex.StyleOptionVersion">
      <EnumMember name="QStyleOptionComplex.Version"/>
    </Enum>
    <Enum name="QStyleOptionComplex.StyleOptionType">
      <EnumMember name="QStyleOptionComplex.Type"/>
    </Enum>
    <Member name="QStyleOptionComplex.activeSubControls" typename="QStyle.SubControls" typetype="class"/>
    <Member name="QStyleOptionComplex.subControls" typename="QStyle.SubControls" typetype="class"/>
  </Class>
  <Class name="QStyleOptionSlider" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionSlider.__init__"/>
    <Function name="QStyleOptionSlider.__init__">
      <Argument typename="QStyleOptionSlider" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionSlider.StyleOptionVersion">
      <EnumMember name="QStyleOptionSlider.Version"/>
    </Enum>
    <Enum name="QStyleOptionSlider.StyleOptionType">
      <EnumMember name="QStyleOptionSlider.Type"/>
    </Enum>
    <Member name="QStyleOptionSlider.dialWrapping" typename="bool"/>
    <Member name="QStyleOptionSlider.maximum" typename="int"/>
    <Member name="QStyleOptionSlider.minimum" typename="int"/>
    <Member name="QStyleOptionSlider.notchTarget" typename="float"/>
    <Member name="QStyleOptionSlider.orientation" typename="Qt.Orientation" typetype="enum"/>
    <Member name="QStyleOptionSlider.pageStep" typename="int"/>
    <Member name="QStyleOptionSlider.singleStep" typename="int"/>
    <Member name="QStyleOptionSlider.sliderPosition" typename="int"/>
    <Member name="QStyleOptionSlider.sliderValue" typename="int"/>
    <Member name="QStyleOptionSlider.tickInterval" typename="int"/>
    <Member name="QStyleOptionSlider.tickPosition" typename="QSlider.TickPosition" typetype="enum"/>
    <Member name="QStyleOptionSlider.upsideDown" typename="bool"/>
  </Class>
  <Class name="QStyleOptionSpinBox" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionSpinBox.__init__"/>
    <Function name="QStyleOptionSpinBox.__init__">
      <Argument typename="QStyleOptionSpinBox" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionSpinBox.StyleOptionVersion">
      <EnumMember name="QStyleOptionSpinBox.Version"/>
    </Enum>
    <Enum name="QStyleOptionSpinBox.StyleOptionType">
      <EnumMember name="QStyleOptionSpinBox.Type"/>
    </Enum>
    <Member name="QStyleOptionSpinBox.buttonSymbols" typename="QAbstractSpinBox.ButtonSymbols" typetype="enum"/>
    <Member name="QStyleOptionSpinBox.frame" typename="bool"/>
    <Member name="QStyleOptionSpinBox.stepEnabled" typename="QAbstractSpinBox.StepEnabled" typetype="class"/>
  </Class>
  <Class name="QStyleOptionToolButton" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionToolButton.__init__"/>
    <Function name="QStyleOptionToolButton.__init__">
      <Argument typename="QStyleOptionToolButton" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionToolButton.ToolButtonFeature">
      <EnumMember name="QStyleOptionToolButton.None_"/>
      <EnumMember name="QStyleOptionToolButton.Arrow"/>
      <EnumMember name="QStyleOptionToolButton.Menu"/>
      <EnumMember name="QStyleOptionToolButton.PopupDelay"/>
      <EnumMember name="QStyleOptionToolButton.MenuButtonPopup"/>
      <EnumMember name="QStyleOptionToolButton.HasMenu"/>
    </Enum>
    <Enum name="QStyleOptionToolButton.StyleOptionVersion">
      <EnumMember name="QStyleOptionToolButton.Version"/>
    </Enum>
    <Enum name="QStyleOptionToolButton.StyleOptionType">
      <EnumMember name="QStyleOptionToolButton.Type"/>
    </Enum>
    <Member name="QStyleOptionToolButton.arrowType" typename="Qt.ArrowType" typetype="enum"/>
    <Member name="QStyleOptionToolButton.features" typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class"/>
    <Member name="QStyleOptionToolButton.font" typename="QFont" typetype="class"/>
    <Member name="QStyleOptionToolButton.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionToolButton.iconSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionToolButton.pos" typename="QPoint" typetype="class"/>
    <Member name="QStyleOptionToolButton.text" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionToolButton.toolButtonStyle" typename="Qt.ToolButtonStyle" typetype="enum"/>
  </Class>
  <Class name="QStyleOptionToolButton.ToolButtonFeatures" convert="1">
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__init__"/>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__init__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__ixor__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__xor__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__ior__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__or__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__iand__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__and__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__invert__">
      <Argument typename="QStyleOptionToolButton.ToolButtonFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionToolButton.ToolButtonFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionComboBox" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionComboBox.__init__"/>
    <Function name="QStyleOptionComboBox.__init__">
      <Argument typename="QStyleOptionComboBox" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionComboBox.StyleOptionVersion">
      <EnumMember name="QStyleOptionComboBox.Version"/>
    </Enum>
    <Enum name="QStyleOptionComboBox.StyleOptionType">
      <EnumMember name="QStyleOptionComboBox.Type"/>
    </Enum>
    <Member name="QStyleOptionComboBox.currentIcon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionComboBox.currentText" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionComboBox.editable" typename="bool"/>
    <Member name="QStyleOptionComboBox.frame" typename="bool"/>
    <Member name="QStyleOptionComboBox.iconSize" typename="QSize" typetype="class"/>
    <Member name="QStyleOptionComboBox.popupRect" typename="QRect" typetype="class"/>
  </Class>
  <Class name="QStyleOptionTitleBar" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionTitleBar.__init__"/>
    <Function name="QStyleOptionTitleBar.__init__">
      <Argument typename="QStyleOptionTitleBar" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionTitleBar.StyleOptionVersion">
      <EnumMember name="QStyleOptionTitleBar.Version"/>
    </Enum>
    <Enum name="QStyleOptionTitleBar.StyleOptionType">
      <EnumMember name="QStyleOptionTitleBar.Type"/>
    </Enum>
    <Member name="QStyleOptionTitleBar.icon" typename="QIcon" typetype="class"/>
    <Member name="QStyleOptionTitleBar.text" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionTitleBar.titleBarFlags" typename="Qt.WindowFlags" typetype="class"/>
    <Member name="QStyleOptionTitleBar.titleBarState" typename="int"/>
  </Class>
  <Class name="QStyleHintReturn">
    <Function name="QStyleHintReturn.__init__">
      <Argument typename="int" name="version" default="QStyleOption.Version"/>
      <Argument typename="int" name="type" default="QStyleHintReturn.SH_Default"/>
    </Function>
    <Function name="QStyleHintReturn.__init__">
      <Argument typename="QStyleHintReturn" typetype="class"/>
    </Function>
    <Enum name="QStyleHintReturn.StyleOptionVersion">
      <EnumMember name="QStyleHintReturn.Version"/>
    </Enum>
    <Enum name="QStyleHintReturn.StyleOptionType">
      <EnumMember name="QStyleHintReturn.Type"/>
    </Enum>
    <Enum name="QStyleHintReturn.HintReturnType">
      <EnumMember name="QStyleHintReturn.SH_Default"/>
      <EnumMember name="QStyleHintReturn.SH_Mask"/>
      <EnumMember name="QStyleHintReturn.SH_Variant"/>
    </Enum>
    <Member name="QStyleHintReturn.type" typename="int"/>
    <Member name="QStyleHintReturn.version" typename="int"/>
  </Class>
  <Class name="QStyleHintReturnMask" inherits="QStyleHintReturn">
    <Function name="QStyleHintReturnMask.__init__"/>
    <Function name="QStyleHintReturnMask.__init__">
      <Argument typename="QStyleHintReturnMask" typetype="class"/>
    </Function>
    <Enum name="QStyleHintReturnMask.StyleOptionVersion">
      <EnumMember name="QStyleHintReturnMask.Version"/>
    </Enum>
    <Enum name="QStyleHintReturnMask.StyleOptionType">
      <EnumMember name="QStyleHintReturnMask.Type"/>
    </Enum>
    <Member name="QStyleHintReturnMask.region" typename="QRegion" typetype="class"/>
  </Class>
  <Class name="QStyleOptionToolBar" inherits="QStyleOption">
    <Function name="QStyleOptionToolBar.__init__"/>
    <Function name="QStyleOptionToolBar.__init__">
      <Argument typename="QStyleOptionToolBar" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionToolBar.ToolBarFeature">
      <EnumMember name="QStyleOptionToolBar.None_"/>
      <EnumMember name="QStyleOptionToolBar.Movable"/>
    </Enum>
    <Enum name="QStyleOptionToolBar.ToolBarPosition">
      <EnumMember name="QStyleOptionToolBar.Beginning"/>
      <EnumMember name="QStyleOptionToolBar.Middle"/>
      <EnumMember name="QStyleOptionToolBar.End"/>
      <EnumMember name="QStyleOptionToolBar.OnlyOne"/>
    </Enum>
    <Enum name="QStyleOptionToolBar.StyleOptionVersion">
      <EnumMember name="QStyleOptionToolBar.Version"/>
    </Enum>
    <Enum name="QStyleOptionToolBar.StyleOptionType">
      <EnumMember name="QStyleOptionToolBar.Type"/>
    </Enum>
    <Member name="QStyleOptionToolBar.features" typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class"/>
    <Member name="QStyleOptionToolBar.lineWidth" typename="int"/>
    <Member name="QStyleOptionToolBar.midLineWidth" typename="int"/>
    <Member name="QStyleOptionToolBar.positionOfLine" typename="QStyleOptionToolBar.ToolBarPosition" typetype="enum"/>
    <Member name="QStyleOptionToolBar.positionWithinLine" typename="QStyleOptionToolBar.ToolBarPosition" typetype="enum"/>
    <Member name="QStyleOptionToolBar.toolBarArea" typename="Qt.ToolBarArea" typetype="enum"/>
  </Class>
  <Class name="QStyleOptionToolBar.ToolBarFeatures" convert="1">
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__init__"/>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__init__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__ixor__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__xor__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__ior__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__or__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__iand__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__and__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__invert__">
      <Argument typename="QStyleOptionToolBar.ToolBarFeatures" typetype="class" dir="out"/>
    </Function>
    <Function name="QStyleOptionToolBar.ToolBarFeatures.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QStyleOptionGroupBox" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionGroupBox.__init__"/>
    <Function name="QStyleOptionGroupBox.__init__">
      <Argument typename="QStyleOptionGroupBox" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionGroupBox.StyleOptionVersion">
      <EnumMember name="QStyleOptionGroupBox.Version"/>
    </Enum>
    <Enum name="QStyleOptionGroupBox.StyleOptionType">
      <EnumMember name="QStyleOptionGroupBox.Type"/>
    </Enum>
    <Member name="QStyleOptionGroupBox.features" typename="QStyleOptionFrame.FrameFeatures" typetype="class"/>
    <Member name="QStyleOptionGroupBox.lineWidth" typename="int"/>
    <Member name="QStyleOptionGroupBox.midLineWidth" typename="int"/>
    <Member name="QStyleOptionGroupBox.text" typename="QString" typetype="mappedtype"/>
    <Member name="QStyleOptionGroupBox.textAlignment" typename="Qt.Alignment" typetype="class"/>
    <Member name="QStyleOptionGroupBox.textColor" typename="QColor" typetype="class"/>
  </Class>
  <Class name="QStyleOptionSizeGrip" inherits="QStyleOptionComplex">
    <Function name="QStyleOptionSizeGrip.__init__"/>
    <Function name="QStyleOptionSizeGrip.__init__">
      <Argument typename="QStyleOptionSizeGrip" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionSizeGrip.StyleOptionVersion">
      <EnumMember name="QStyleOptionSizeGrip.Version"/>
    </Enum>
    <Enum name="QStyleOptionSizeGrip.StyleOptionType">
      <EnumMember name="QStyleOptionSizeGrip.Type"/>
    </Enum>
    <Member name="QStyleOptionSizeGrip.corner" typename="Qt.Corner" typetype="enum"/>
  </Class>
  <Class name="QStyleOptionGraphicsItem" inherits="QStyleOption">
    <Function name="QStyleOptionGraphicsItem.__init__"/>
    <Function name="QStyleOptionGraphicsItem.__init__">
      <Argument typename="QStyleOptionGraphicsItem" typetype="class" name="other"/>
    </Function>
    <Enum name="QStyleOptionGraphicsItem.StyleOptionVersion">
      <EnumMember name="QStyleOptionGraphicsItem.Version"/>
    </Enum>
    <Enum name="QStyleOptionGraphicsItem.StyleOptionType">
      <EnumMember name="QStyleOptionGraphicsItem.Type"/>
    </Enum>
    <Member name="QStyleOptionGraphicsItem.exposedRect" typename="QRectF" typetype="class"/>
    <Function name="QStyleOptionGraphicsItem.levelOfDetailFromTransform" static="1">
      <Argument typename="float" dir="out"/>
      <Argument typename="QTransform" typetype="class" name="worldTransform"/>
    </Function>
  </Class>
  <Class name="QStyleHintReturnVariant" inherits="QStyleHintReturn">
    <Function name="QStyleHintReturnVariant.__init__"/>
    <Function name="QStyleHintReturnVariant.__init__">
      <Argument typename="QStyleHintReturnVariant" typetype="class"/>
    </Function>
    <Enum name="QStyleHintReturnVariant.StyleOptionVersion">
      <EnumMember name="QStyleHintReturnVariant.Version"/>
    </Enum>
    <Enum name="QStyleHintReturnVariant.StyleOptionType">
      <EnumMember name="QStyleHintReturnVariant.Type"/>
    </Enum>
    <Member name="QStyleHintReturnVariant.variant" typename="QVariant" typetype="class"/>
  </Class>
  <Class name="QStylePainter" inherits="QPainter">
    <Function name="QStylePainter.__init__"/>
    <Function name="QStylePainter.__init__">
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStylePainter.__init__">
      <Argument typename="QPaintDevice" typetype="class" name="pd"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStylePainter.drawItemPixmap">
      <Argument typename="QRect" typetype="class" name="r"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QStylePainter.drawItemText">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="int" name="flags"/>
      <Argument typename="QPalette" typetype="class" name="pal"/>
      <Argument typename="bool" name="enabled"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QPalette.ColorRole" typetype="enum" name="textRole" default="QPalette.NoRole"/>
    </Function>
    <Function name="QStylePainter.drawComplexControl">
      <Argument typename="QStyle.ComplexControl" typetype="enum" name="cc"/>
      <Argument typename="QStyleOptionComplex" typetype="class" name="opt"/>
    </Function>
    <Function name="QStylePainter.drawControl">
      <Argument typename="QStyle.ControlElement" typetype="enum" name="ce"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
    </Function>
    <Function name="QStylePainter.drawPrimitive">
      <Argument typename="QStyle.PrimitiveElement" typetype="enum" name="pe"/>
      <Argument typename="QStyleOption" typetype="class" name="opt"/>
    </Function>
    <Function name="QStylePainter.style">
      <Argument typename="QStyle" typetype="class" dir="out"/>
    </Function>
    <Function name="QStylePainter.begin">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
    <Function name="QStylePainter.begin">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPaintDevice" typetype="class" name="pd"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
    </Function>
  </Class>
  <Class name="QSystemTrayIcon" inherits="QObject">
    <Function name="QSystemTrayIcon.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QSystemTrayIcon.__init__">
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QSystemTrayIcon.MessageIcon">
      <EnumMember name="QSystemTrayIcon.NoIcon"/>
      <EnumMember name="QSystemTrayIcon.Information"/>
      <EnumMember name="QSystemTrayIcon.Warning"/>
      <EnumMember name="QSystemTrayIcon.Critical"/>
    </Enum>
    <Enum name="QSystemTrayIcon.ActivationReason">
      <EnumMember name="QSystemTrayIcon.Unknown"/>
      <EnumMember name="QSystemTrayIcon.Context"/>
      <EnumMember name="QSystemTrayIcon.DoubleClick"/>
      <EnumMember name="QSystemTrayIcon.Trigger"/>
      <EnumMember name="QSystemTrayIcon.MiddleClick"/>
    </Enum>
    <Function name="QSystemTrayIcon.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Signal default="1" name="QSystemTrayIcon.messageClicked" sig="void messageClicked()"/>
    <Signal default="1" name="QSystemTrayIcon.activated" sig="void activated( ::QSystemTrayIcon::ActivationReason)"/>
    <Function name="QSystemTrayIcon.show" slot="void show()"/>
    <Function name="QSystemTrayIcon.setVisible" slot="void setVisible(bool)">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QSystemTrayIcon.hide" slot="void hide()"/>
    <Function name="QSystemTrayIcon.isVisible">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.showMessage" slot="void showMessage(const QString&amp;,const QString&amp;, ::QSystemTrayIcon::MessageIcon = QSystemTrayIcon.Information,int = 10000)">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QString" typetype="mappedtype" name="msg"/>
      <Argument typename="QSystemTrayIcon.MessageIcon" typetype="enum" name="icon" default="QSystemTrayIcon.Information"/>
      <Argument typename="int" name="msecs" default="10000"/>
    </Function>
    <Function name="QSystemTrayIcon.supportsMessages" static="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.isSystemTrayAvailable" static="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.setToolTip">
      <Argument typename="QString" typetype="mappedtype" name="tip"/>
    </Function>
    <Function name="QSystemTrayIcon.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.setIcon">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QSystemTrayIcon.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.geometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.contextMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QSystemTrayIcon.setContextMenu">
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
  </Class>
  <Class name="QTabBar" inherits="QWidget">
    <Function name="QTabBar.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QTabBar.SelectionBehavior">
      <EnumMember name="QTabBar.SelectLeftTab"/>
      <EnumMember name="QTabBar.SelectRightTab"/>
      <EnumMember name="QTabBar.SelectPreviousTab"/>
    </Enum>
    <Enum name="QTabBar.ButtonPosition">
      <EnumMember name="QTabBar.LeftSide"/>
      <EnumMember name="QTabBar.RightSide"/>
    </Enum>
    <Enum name="QTabBar.Shape">
      <EnumMember name="QTabBar.RoundedNorth"/>
      <EnumMember name="QTabBar.RoundedSouth"/>
      <EnumMember name="QTabBar.RoundedWest"/>
      <EnumMember name="QTabBar.RoundedEast"/>
      <EnumMember name="QTabBar.TriangularNorth"/>
      <EnumMember name="QTabBar.TriangularSouth"/>
      <EnumMember name="QTabBar.TriangularWest"/>
      <EnumMember name="QTabBar.TriangularEast"/>
    </Enum>
    <Function name="QTabBar.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTabBar.setChangeCurrentOnDrag">
      <Argument typename="bool" name="change"/>
    </Function>
    <Function name="QTabBar.changeCurrentOnDrag">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.setAutoHide">
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QTabBar.autoHide">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Signal default="1" name="QTabBar.tabBarDoubleClicked" sig="void tabBarDoubleClicked(int)"/>
    <Signal default="1" name="QTabBar.tabBarClicked" sig="void tabBarClicked(int)"/>
    <Function name="QTabBar.minimumTabSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTabBar.hideEvent" virtual="1">
      <Argument typename="QHideEvent" typetype="class"/>
    </Function>
    <Signal default="1" name="QTabBar.tabMoved" sig="void tabMoved(int,int)"/>
    <Signal default="1" name="QTabBar.tabCloseRequested" sig="void tabCloseRequested(int)"/>
    <Function name="QTabBar.setDocumentMode">
      <Argument typename="bool" name="set"/>
    </Function>
    <Function name="QTabBar.documentMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.setMovable">
      <Argument typename="bool" name="movable"/>
    </Function>
    <Function name="QTabBar.isMovable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.setExpanding">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QTabBar.expanding">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.setSelectionBehaviorOnRemove">
      <Argument typename="QTabBar.SelectionBehavior" typetype="enum" name="behavior"/>
    </Function>
    <Function name="QTabBar.selectionBehaviorOnRemove">
      <Argument typename="QTabBar.SelectionBehavior" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTabBar.tabButton">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QTabBar.ButtonPosition" typetype="enum" name="position"/>
    </Function>
    <Function name="QTabBar.setTabButton">
      <Argument typename="int" name="index"/>
      <Argument typename="QTabBar.ButtonPosition" typetype="enum" name="position"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QTabBar.setTabsClosable">
      <Argument typename="bool" name="closable"/>
    </Function>
    <Function name="QTabBar.tabsClosable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.moveTab">
      <Argument typename="int" name="from"/>
      <Argument typename="int" name="to"/>
    </Function>
    <Function name="QTabBar.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QTabBar.tabLayoutChange" virtual="1"/>
    <Function name="QTabBar.tabRemoved" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.tabInserted" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.tabSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.initStyleOption">
      <Argument typename="QStyleOptionTab" typetype="class" name="option"/>
      <Argument typename="int" name="tabIndex"/>
    </Function>
    <Signal default="1" name="QTabBar.currentChanged" sig="void currentChanged(int)"/>
    <Function name="QTabBar.setCurrentIndex" slot="void setCurrentIndex(int)">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.usesScrollButtons">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.setUsesScrollButtons">
      <Argument typename="bool" name="useButtons"/>
    </Function>
    <Function name="QTabBar.setElideMode">
      <Argument typename="Qt.TextElideMode" typetype="enum"/>
    </Function>
    <Function name="QTabBar.elideMode">
      <Argument typename="Qt.TextElideMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTabBar.setIconSize">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QTabBar.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabBar.drawBase">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabBar.setDrawBase">
      <Argument typename="bool" name="drawTheBase"/>
    </Function>
    <Function name="QTabBar.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabBar.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabBar.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTabBar.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTabBar.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTabBar.tabRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.tabAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QTabBar.tabData">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.setTabData">
      <Argument typename="int" name="index"/>
      <Argument typename="QVariant" typetype="class" name="data"/>
    </Function>
    <Function name="QTabBar.tabWhatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.setTabWhatsThis">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabBar.tabToolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.setTabToolTip">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="tip"/>
    </Function>
    <Function name="QTabBar.setTabIcon">
      <Argument typename="int" name="index"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QTabBar.tabIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.setTabTextColor">
      <Argument typename="int" name="index"/>
      <Argument typename="QColor" typetype="class" name="color"/>
    </Function>
    <Function name="QTabBar.tabTextColor">
      <Argument typename="QColor" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.setTabText">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabBar.tabText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.setTabEnabled">
      <Argument typename="int" name="index"/>
      <Argument typename="bool"/>
    </Function>
    <Function name="QTabBar.isTabEnabled">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.removeTab">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabBar.insertTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabBar.insertTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabBar.addTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabBar.addTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabBar.setShape">
      <Argument typename="QTabBar.Shape" typetype="enum" name="shape"/>
    </Function>
    <Function name="QTabBar.shape">
      <Argument typename="QTabBar.Shape" typetype="enum" dir="out"/>
    </Function>
  </Class>
  <Class name="QTableView" inherits="QAbstractItemView">
    <Function name="QTableView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTableView.currentChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="current"/>
      <Argument typename="QModelIndex" typetype="class" name="previous"/>
    </Function>
    <Function name="QTableView.selectionChanged" virtual="1">
      <Argument typename="QItemSelection" typetype="class" name="selected"/>
      <Argument typename="QItemSelection" typetype="class" name="deselected"/>
    </Function>
    <Function name="QTableView.clearSpans"/>
    <Function name="QTableView.isCornerButtonEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTableView.setCornerButtonEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTableView.wordWrap">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTableView.setWordWrap">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QTableView.sortByColumn">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order"/>
    </Function>
    <Function name="QTableView.columnSpan">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.rowSpan">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.setSpan">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="rowSpan"/>
      <Argument typename="int" name="columnSpan"/>
    </Function>
    <Function name="QTableView.isSortingEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTableView.setSortingEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTableView.viewportSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableView.isIndexHidden" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTableView.horizontalScrollbarAction" virtual="1">
      <Argument typename="int" name="action"/>
    </Function>
    <Function name="QTableView.verticalScrollbarAction" virtual="1">
      <Argument typename="int" name="action"/>
    </Function>
    <Function name="QTableView.sizeHintForColumn" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.sizeHintForRow" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.updateGeometries" virtual="1"/>
    <Function name="QTableView.selectedIndexes" virtual="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableView.visualRegionForSelection" virtual="1">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QItemSelection" typetype="class" name="selection"/>
    </Function>
    <Function name="QTableView.setSelection" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QTableView.moveCursor" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QAbstractItemView.CursorAction" typetype="enum" name="cursorAction"/>
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Function name="QTableView.verticalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableView.horizontalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableView.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTableView.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTableView.viewOptions" virtual="1">
      <Argument typename="QStyleOptionViewItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableView.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QTableView.columnCountChanged" slot="void columnCountChanged(int,int)">
      <Argument typename="int" name="oldCount"/>
      <Argument typename="int" name="newCount"/>
    </Function>
    <Function name="QTableView.rowCountChanged" slot="void rowCountChanged(int,int)">
      <Argument typename="int" name="oldCount"/>
      <Argument typename="int" name="newCount"/>
    </Function>
    <Function name="QTableView.columnResized" slot="void columnResized(int,int,int)">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="oldWidth"/>
      <Argument typename="int" name="newWidth"/>
    </Function>
    <Function name="QTableView.rowResized" slot="void rowResized(int,int,int)">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="oldHeight"/>
      <Argument typename="int" name="newHeight"/>
    </Function>
    <Function name="QTableView.columnMoved" slot="void columnMoved(int,int,int)">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="oldIndex"/>
      <Argument typename="int" name="newIndex"/>
    </Function>
    <Function name="QTableView.rowMoved" slot="void rowMoved(int,int,int)">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="oldIndex"/>
      <Argument typename="int" name="newIndex"/>
    </Function>
    <Function name="QTableView.resizeColumnsToContents" slot="void resizeColumnsToContents()"/>
    <Function name="QTableView.resizeColumnToContents" slot="void resizeColumnToContents(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.resizeRowsToContents" slot="void resizeRowsToContents()"/>
    <Function name="QTableView.resizeRowToContents" slot="void resizeRowToContents(int)">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.showColumn" slot="void showColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.showRow" slot="void showRow(int)">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.hideColumn" slot="void hideColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.hideRow" slot="void hideRow(int)">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.selectColumn" slot="void selectColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.selectRow" slot="void selectRow(int)">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.indexAt" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QTableView.scrollTo" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QTableView.visualRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTableView.setGridStyle">
      <Argument typename="Qt.PenStyle" typetype="enum" name="style"/>
    </Function>
    <Function name="QTableView.gridStyle">
      <Argument typename="Qt.PenStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTableView.setShowGrid">
      <Argument typename="bool" name="show"/>
    </Function>
    <Function name="QTableView.showGrid">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTableView.setColumnHidden">
      <Argument typename="int" name="column"/>
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QTableView.isColumnHidden">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.setRowHidden">
      <Argument typename="int" name="row"/>
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QTableView.isRowHidden">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.columnAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="x"/>
    </Function>
    <Function name="QTableView.columnWidth">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.setColumnWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QTableView.columnViewportPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableView.rowAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="y"/>
    </Function>
    <Function name="QTableView.rowHeight">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.setRowHeight">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="height"/>
    </Function>
    <Function name="QTableView.rowViewportPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableView.setVerticalHeader">
      <Argument typename="QHeaderView" typetype="class" name="header" transfer="to"/>
    </Function>
    <Function name="QTableView.setHorizontalHeader">
      <Argument typename="QHeaderView" typetype="class" name="header" transfer="to"/>
    </Function>
    <Function name="QTableView.verticalHeader">
      <Argument typename="QHeaderView" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableView.horizontalHeader">
      <Argument typename="QHeaderView" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableView.setSelectionModel" virtual="1">
      <Argument typename="QItemSelectionModel" typetype="class" name="selectionModel"/>
    </Function>
    <Function name="QTableView.setRootIndex" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTableView.setModel" virtual="1">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
  </Class>
  <Class name="QTableWidgetSelectionRange">
    <Function name="QTableWidgetSelectionRange.__init__"/>
    <Function name="QTableWidgetSelectionRange.__init__">
      <Argument typename="int" name="top"/>
      <Argument typename="int" name="left"/>
      <Argument typename="int" name="bottom"/>
      <Argument typename="int" name="right"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.__init__">
      <Argument typename="QTableWidgetSelectionRange" typetype="class" name="other"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.rowCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.rightColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.leftColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.bottomRow">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetSelectionRange.topRow">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QTableWidgetItem">
    <Function name="QTableWidgetItem.__init__">
      <Argument typename="int" name="type" default="QTableWidgetItem.Type"/>
    </Function>
    <Function name="QTableWidgetItem.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="int" name="type" default="QTableWidgetItem.Type"/>
    </Function>
    <Function name="QTableWidgetItem.__init__">
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="int" name="type" default="QTableWidgetItem.Type"/>
    </Function>
    <Function name="QTableWidgetItem.__init__">
      <Argument typename="QTableWidgetItem" typetype="class" name="other"/>
    </Function>
    <Enum name="QTableWidgetItem.ItemType">
      <EnumMember name="QTableWidgetItem.Type"/>
      <EnumMember name="QTableWidgetItem.UserType"/>
    </Enum>
    <Function name="QTableWidgetItem.__ge__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="other"/>
    </Function>
    <Function name="QTableWidgetItem.isSelected">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.setSelected">
      <Argument typename="bool" name="aselect"/>
    </Function>
    <Function name="QTableWidgetItem.column">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.row">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.setForeground">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QTableWidgetItem.foreground">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.setBackground">
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QTableWidgetItem.background">
      <Argument typename="QBrush" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.setSizeHint">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QTableWidgetItem.sizeHint">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.setFont">
      <Argument typename="QFont" typetype="class" name="afont"/>
    </Function>
    <Function name="QTableWidgetItem.setWhatsThis">
      <Argument typename="QString" typetype="mappedtype" name="awhatsThis"/>
    </Function>
    <Function name="QTableWidgetItem.setToolTip">
      <Argument typename="QString" typetype="mappedtype" name="atoolTip"/>
    </Function>
    <Function name="QTableWidgetItem.setStatusTip">
      <Argument typename="QString" typetype="mappedtype" name="astatusTip"/>
    </Function>
    <Function name="QTableWidgetItem.setIcon">
      <Argument typename="QIcon" typetype="class" name="aicon"/>
    </Function>
    <Function name="QTableWidgetItem.setText">
      <Argument typename="QString" typetype="mappedtype" name="atext"/>
    </Function>
    <Function name="QTableWidgetItem.setFlags">
      <Argument typename="Qt.ItemFlags" typetype="class" name="aflags"/>
    </Function>
    <Function name="QTableWidgetItem.type">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.write" virtual="1">
      <Argument typename="QDataStream" typetype="class" name="out"/>
    </Function>
    <Function name="QTableWidgetItem.read" virtual="1">
      <Argument typename="QDataStream" typetype="class" name="in"/>
    </Function>
    <Function name="QTableWidgetItem.__lt__" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="other"/>
    </Function>
    <Function name="QTableWidgetItem.setData" virtual="1">
      <Argument typename="int" name="role"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QTableWidgetItem.data" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="role"/>
    </Function>
    <Function name="QTableWidgetItem.setCheckState">
      <Argument typename="Qt.CheckState" typetype="enum" name="state"/>
    </Function>
    <Function name="QTableWidgetItem.checkState">
      <Argument typename="Qt.CheckState" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.setTextAlignment">
      <Argument typename="int" name="alignment"/>
    </Function>
    <Function name="QTableWidgetItem.textAlignment">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.whatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.statusTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.flags">
      <Argument typename="Qt.ItemFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.tableWidget">
      <Argument typename="QTableWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidgetItem.clone" virtual="1">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QTableWidget" inherits="QTableView">
    <Function name="QTableWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTableWidget.__init__">
      <Argument typename="int" name="rows"/>
      <Argument typename="int" name="columns"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTableWidget.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTableWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTableWidget.itemFromIndex">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTableWidget.indexFromItem">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.items">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
    </Function>
    <Function name="QTableWidget.supportedDropActions" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidget.dropMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
      <Argument typename="Qt.DropAction" typetype="enum" name="action"/>
    </Function>
    <Function name="QTableWidget.mimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out" transfer="back"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="items"/>
    </Function>
    <Function name="QTableWidget.mimeTypes" virtual="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Signal default="1" name="QTableWidget.currentCellChanged" sig="void currentCellChanged(int,int,int,int)"/>
    <Signal default="1" name="QTableWidget.cellChanged" sig="void cellChanged(int,int)"/>
    <Signal default="1" name="QTableWidget.cellEntered" sig="void cellEntered(int,int)"/>
    <Signal default="1" name="QTableWidget.cellActivated" sig="void cellActivated(int,int)"/>
    <Signal default="1" name="QTableWidget.cellDoubleClicked" sig="void cellDoubleClicked(int,int)"/>
    <Signal default="1" name="QTableWidget.cellClicked" sig="void cellClicked(int,int)"/>
    <Signal default="1" name="QTableWidget.cellPressed" sig="void cellPressed(int,int)"/>
    <Signal default="1" name="QTableWidget.itemSelectionChanged" sig="void itemSelectionChanged()"/>
    <Signal default="1" name="QTableWidget.currentItemChanged" sig="void currentItemChanged( ::QTableWidgetItem*, ::QTableWidgetItem*)"/>
    <Signal default="1" name="QTableWidget.itemChanged" sig="void itemChanged( ::QTableWidgetItem*)"/>
    <Signal default="1" name="QTableWidget.itemEntered" sig="void itemEntered( ::QTableWidgetItem*)"/>
    <Signal default="1" name="QTableWidget.itemActivated" sig="void itemActivated( ::QTableWidgetItem*)"/>
    <Signal default="1" name="QTableWidget.itemDoubleClicked" sig="void itemDoubleClicked( ::QTableWidgetItem*)"/>
    <Signal default="1" name="QTableWidget.itemClicked" sig="void itemClicked( ::QTableWidgetItem*)"/>
    <Signal default="1" name="QTableWidget.itemPressed" sig="void itemPressed( ::QTableWidgetItem*)"/>
    <Function name="QTableWidget.clearContents" slot="void clearContents()"/>
    <Function name="QTableWidget.clear" slot="void clear()"/>
    <Function name="QTableWidget.removeColumn" slot="void removeColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.removeRow" slot="void removeRow(int)">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableWidget.insertColumn" slot="void insertColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.insertRow" slot="void insertRow(int)">
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableWidget.scrollToItem" slot="void scrollToItem(const  ::QTableWidgetItem*, ::QAbstractItemView::ScrollHint = QAbstractItemView.EnsureVisible)">
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QTableWidget.setItemPrototype">
      <Argument typename="QTableWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTableWidget.itemPrototype">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidget.visualItemRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.itemAt">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QTableWidget.itemAt">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QTableWidget.visualColumn">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalColumn"/>
    </Function>
    <Function name="QTableWidget.visualRow">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="logicalRow"/>
    </Function>
    <Function name="QTableWidget.findItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="Qt.MatchFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QTableWidget.selectedItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableWidget.selectedRanges">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTableWidget.setRangeSelected">
      <Argument typename="QTableWidgetSelectionRange" typetype="class" name="range"/>
      <Argument typename="bool" name="select"/>
    </Function>
    <Function name="QTableWidget.removeCellWidget">
      <Argument typename="int" name="arow"/>
      <Argument typename="int" name="acolumn"/>
    </Function>
    <Function name="QTableWidget.setCellWidget">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QTableWidget.cellWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.closePersistentEditor">
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.openPersistentEditor">
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.editItem">
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.isSortingEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTableWidget.setSortingEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTableWidget.sortItems">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order" default="Qt.AscendingOrder"/>
    </Function>
    <Function name="QTableWidget.setCurrentCell">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.setCurrentCell">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QTableWidget.setCurrentItem">
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.setCurrentItem">
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QTableWidget.currentItem">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTableWidget.currentColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidget.currentRow">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidget.setHorizontalHeaderLabels">
      <Argument typename="QStringList" typetype="mappedtype" name="labels"/>
    </Function>
    <Function name="QTableWidget.setVerticalHeaderLabels">
      <Argument typename="QStringList" typetype="mappedtype" name="labels"/>
    </Function>
    <Function name="QTableWidget.takeHorizontalHeaderItem">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.setHorizontalHeaderItem">
      <Argument typename="int" name="column"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTableWidget.horizontalHeaderItem">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.takeVerticalHeaderItem">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableWidget.setVerticalHeaderItem">
      <Argument typename="int" name="row"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTableWidget.verticalHeaderItem">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
    </Function>
    <Function name="QTableWidget.takeItem">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.setItem">
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTableWidget.item">
      <Argument typename="QTableWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTableWidget.column">
      <Argument typename="int" dir="out"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.row">
      <Argument typename="int" dir="out"/>
      <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTableWidget.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidget.setColumnCount">
      <Argument typename="int" name="columns"/>
    </Function>
    <Function name="QTableWidget.rowCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTableWidget.setRowCount">
      <Argument typename="int" name="rows"/>
    </Function>
  </Class>
  <Class name="QTabWidget" inherits="QWidget">
    <Function name="QTabWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QTabWidget.TabShape">
      <EnumMember name="QTabWidget.Rounded"/>
      <EnumMember name="QTabWidget.Triangular"/>
    </Enum>
    <Enum name="QTabWidget.TabPosition">
      <EnumMember name="QTabWidget.North"/>
      <EnumMember name="QTabWidget.South"/>
      <EnumMember name="QTabWidget.West"/>
      <EnumMember name="QTabWidget.East"/>
    </Enum>
    <Function name="QTabWidget.setTabBarAutoHide">
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QTabWidget.tabBarAutoHide">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Signal default="1" name="QTabWidget.tabBarDoubleClicked" sig="void tabBarDoubleClicked(int)"/>
    <Signal default="1" name="QTabWidget.tabBarClicked" sig="void tabBarClicked(int)"/>
    <Function name="QTabWidget.hasHeightForWidth" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabWidget.heightForWidth" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="width"/>
    </Function>
    <Signal default="1" name="QTabWidget.tabCloseRequested" sig="void tabCloseRequested(int)"/>
    <Function name="QTabWidget.setDocumentMode">
      <Argument typename="bool" name="set"/>
    </Function>
    <Function name="QTabWidget.documentMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabWidget.setMovable">
      <Argument typename="bool" name="movable"/>
    </Function>
    <Function name="QTabWidget.isMovable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabWidget.setTabsClosable">
      <Argument typename="bool" name="closeable"/>
    </Function>
    <Function name="QTabWidget.tabsClosable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabWidget.setUsesScrollButtons">
      <Argument typename="bool" name="useButtons"/>
    </Function>
    <Function name="QTabWidget.usesScrollButtons">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTabWidget.setIconSize">
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QTabWidget.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabWidget.setElideMode">
      <Argument typename="Qt.TextElideMode" typetype="enum"/>
    </Function>
    <Function name="QTabWidget.elideMode">
      <Argument typename="Qt.TextElideMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTabWidget.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QTabWidget.tabBar">
      <Argument typename="QTabBar" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabWidget.setTabBar">
      <Argument typename="QTabBar" typetype="class" transfer="to"/>
    </Function>
    <Function name="QTabWidget.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QTabWidget.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class"/>
    </Function>
    <Function name="QTabWidget.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QTabWidget.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QTabWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QTabWidget.tabRemoved" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.tabInserted" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.initStyleOption">
      <Argument typename="QStyleOptionTabWidgetFrame" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QTabWidget.currentChanged" sig="void currentChanged(int)"/>
    <Function name="QTabWidget.setCurrentWidget" slot="void setCurrentWidget( ::QWidget*)">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QTabWidget.setCurrentIndex" slot="void setCurrentIndex(int)">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.cornerWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="Qt.Corner" typetype="enum" name="corner" default="Qt.TopRightCorner"/>
    </Function>
    <Function name="QTabWidget.setCornerWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="Qt.Corner" typetype="enum" name="corner" default="Qt.TopRightCorner"/>
    </Function>
    <Function name="QTabWidget.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabWidget.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabWidget.setTabShape">
      <Argument typename="QTabWidget.TabShape" typetype="enum" name="s"/>
    </Function>
    <Function name="QTabWidget.tabShape">
      <Argument typename="QTabWidget.TabShape" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTabWidget.setTabPosition">
      <Argument typename="QTabWidget.TabPosition" typetype="enum"/>
    </Function>
    <Function name="QTabWidget.tabPosition">
      <Argument typename="QTabWidget.TabPosition" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTabWidget.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTabWidget.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTabWidget.indexOf">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QTabWidget.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.currentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QTabWidget.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTabWidget.tabWhatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.setTabWhatsThis">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTabWidget.tabToolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.setTabToolTip">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="tip"/>
    </Function>
    <Function name="QTabWidget.setTabIcon">
      <Argument typename="int" name="index"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QTabWidget.tabIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.setTabText">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QTabWidget.tabText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.setTabEnabled">
      <Argument typename="int" name="index"/>
      <Argument typename="bool"/>
    </Function>
    <Function name="QTabWidget.isTabEnabled">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.removeTab">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTabWidget.insertTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QTabWidget.insertTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
    </Function>
    <Function name="QTabWidget.addTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="QString" typetype="mappedtype"/>
    </Function>
    <Function name="QTabWidget.addTab">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="label"/>
    </Function>
    <Function name="QTabWidget.clear"/>
  </Class>
  <Class name="QTextEdit" inherits="QAbstractScrollArea">
    <Function name="QTextEdit.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTextEdit.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QTextEdit.AutoFormattingFlag">
      <EnumMember name="QTextEdit.AutoNone"/>
      <EnumMember name="QTextEdit.AutoBulletList"/>
      <EnumMember name="QTextEdit.AutoAll"/>
    </Enum>
    <Enum name="QTextEdit.LineWrapMode">
      <EnumMember name="QTextEdit.NoWrap"/>
      <EnumMember name="QTextEdit.WidgetWidth"/>
      <EnumMember name="QTextEdit.FixedPixelWidth"/>
      <EnumMember name="QTextEdit.FixedColumnWidth"/>
    </Enum>
    <Function name="QTextEdit.placeholderText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextEdit.setPlaceholderText">
      <Argument typename="QString" typetype="mappedtype" name="placeholderText"/>
    </Function>
    <Function name="QTextEdit.setTextBackgroundColor" slot="void setTextBackgroundColor(const  ::QColor&amp;)">
      <Argument typename="QColor" typetype="class" name="c"/>
    </Function>
    <Function name="QTextEdit.textBackgroundColor">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QTextEdit.inputMethodQuery" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="property"/>
    </Function>
    <Function name="QTextEdit.inputMethodQuery">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="Qt.InputMethodQuery" typetype="enum" name="query"/>
      <Argument typename="QVariant" typetype="class" name="argument"/>
    </Function>
    <Function name="QTextEdit.inputMethodEvent" virtual="1">
      <Argument typename="QInputMethodEvent" typetype="class"/>
    </Function>
    <Function name="QTextEdit.insertFromMimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" name="source"/>
    </Function>
    <Function name="QTextEdit.canInsertFromMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QMimeData" typetype="class" name="source"/>
    </Function>
    <Function name="QTextEdit.createMimeDataFromSelection" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.wheelEvent" virtual="1">
      <Argument typename="QWheelEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class"/>
    </Function>
    <Function name="QTextEdit.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.focusInEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.dragLeaveEvent" virtual="1">
      <Argument typename="QDragLeaveEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.dragEnterEvent" virtual="1">
      <Argument typename="QDragEnterEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.contextMenuEvent" virtual="1">
      <Argument typename="QContextMenuEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QTextEdit.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class"/>
    </Function>
    <Function name="QTextEdit.keyReleaseEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextEdit.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QTextEdit.cursorPositionChanged" sig="void cursorPositionChanged()"/>
    <Signal default="1" name="QTextEdit.selectionChanged" sig="void selectionChanged()"/>
    <Signal default="1" name="QTextEdit.copyAvailable" sig="void copyAvailable(bool)"/>
    <Signal default="1" name="QTextEdit.currentCharFormatChanged" sig="void currentCharFormatChanged(const  ::QTextCharFormat&amp;)"/>
    <Signal default="1" name="QTextEdit.redoAvailable" sig="void redoAvailable(bool)"/>
    <Signal default="1" name="QTextEdit.undoAvailable" sig="void undoAvailable(bool)"/>
    <Signal default="1" name="QTextEdit.textChanged" sig="void textChanged()"/>
    <Function name="QTextEdit.zoomOut" slot="void zoomOut(int = 1)">
      <Argument typename="int" name="range" default="1"/>
    </Function>
    <Function name="QTextEdit.zoomIn" slot="void zoomIn(int = 1)">
      <Argument typename="int" name="range" default="1"/>
    </Function>
    <Function name="QTextEdit.undo" slot="void undo()"/>
    <Function name="QTextEdit.redo" slot="void redo()"/>
    <Function name="QTextEdit.scrollToAnchor" slot="void scrollToAnchor(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="name"/>
    </Function>
    <Function name="QTextEdit.insertHtml" slot="void insertHtml(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTextEdit.insertPlainText" slot="void insertPlainText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTextEdit.selectAll" slot="void selectAll()"/>
    <Function name="QTextEdit.clear" slot="void clear()"/>
    <Function name="QTextEdit.paste" slot="void paste()"/>
    <Function name="QTextEdit.copy" slot="void copy()"/>
    <Function name="QTextEdit.cut" slot="void cut()"/>
    <Function name="QTextEdit.setHtml" slot="void setHtml(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTextEdit.setPlainText" slot="void setPlainText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTextEdit.setAlignment" slot="void setAlignment( ::Qt::Alignment)">
      <Argument typename="Qt.Alignment" typetype="class" name="a"/>
    </Function>
    <Function name="QTextEdit.setCurrentFont" slot="void setCurrentFont(const  ::QFont&amp;)">
      <Argument typename="QFont" typetype="class" name="f"/>
    </Function>
    <Function name="QTextEdit.setTextColor" slot="void setTextColor(const  ::QColor&amp;)">
      <Argument typename="QColor" typetype="class" name="c"/>
    </Function>
    <Function name="QTextEdit.setText" slot="void setText(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTextEdit.setFontItalic" slot="void setFontItalic(bool)">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QTextEdit.setFontUnderline" slot="void setFontUnderline(bool)">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QTextEdit.setFontWeight" slot="void setFontWeight(int)">
      <Argument typename="int" name="w"/>
    </Function>
    <Function name="QTextEdit.setFontFamily" slot="void setFontFamily(const QString&amp;)">
      <Argument typename="QString" typetype="mappedtype" name="fontFamily"/>
    </Function>
    <Function name="QTextEdit.setFontPointSize" slot="void setFontPointSize( ::qreal)">
      <Argument typename="float" name="s"/>
    </Function>
    <Function name="QTextEdit.print">
      <Argument typename="QPagedPaintDevice" typetype="class" name="printer"/>
    </Function>
    <Function name="QTextEdit.print_">
      <Argument typename="QPagedPaintDevice" typetype="class" name="printer"/>
    </Function>
    <Function name="QTextEdit.moveCursor">
      <Argument typename="QTextCursor.MoveOperation" typetype="enum" name="operation"/>
      <Argument typename="QTextCursor.MoveMode" typetype="enum" name="mode" default="QTextCursor.MoveAnchor"/>
    </Function>
    <Function name="QTextEdit.canPaste">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.extraSelections">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextEdit.setExtraSelections">
      <Argument typename="unknown-type" typetype="mappedtype" name="selections"/>
    </Function>
    <Function name="QTextEdit.cursorWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextEdit.setCursorWidth">
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QTextEdit.textInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.setTextInteractionFlags">
      <Argument typename="Qt.TextInteractionFlags" typetype="class" name="flags"/>
    </Function>
    <Function name="QTextEdit.setAcceptRichText">
      <Argument typename="bool" name="accept"/>
    </Function>
    <Function name="QTextEdit.acceptRichText">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.setTabStopWidth">
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QTextEdit.tabStopWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextEdit.setOverwriteMode">
      <Argument typename="bool" name="overwrite"/>
    </Function>
    <Function name="QTextEdit.overwriteMode">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.anchorAt">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QTextEdit.cursorRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QTextCursor" typetype="class" name="cursor"/>
    </Function>
    <Function name="QTextEdit.cursorRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.cursorForPosition">
      <Argument typename="QTextCursor" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QTextEdit.createStandardContextMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.createStandardContextMenu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="position"/>
    </Function>
    <Function name="QTextEdit.loadResource" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="type"/>
      <Argument typename="QUrl" typetype="class" name="name"/>
    </Function>
    <Function name="QTextEdit.ensureCursorVisible"/>
    <Function name="QTextEdit.append">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QTextEdit.toHtml">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextEdit.toPlainText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextEdit.find">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="exp"/>
      <Argument typename="QTextDocument.FindFlags" typetype="class" name="options" default="QTextDocument.FindFlags()"/>
    </Function>
    <Function name="QTextEdit.find">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QRegExp" typetype="class" name="exp"/>
      <Argument typename="QTextDocument.FindFlags" typetype="class" name="options" default="QTextDocument.FindFlags()"/>
    </Function>
    <Function name="QTextEdit.setWordWrapMode">
      <Argument typename="QTextOption.WrapMode" typetype="enum" name="policy"/>
    </Function>
    <Function name="QTextEdit.wordWrapMode">
      <Argument typename="QTextOption.WrapMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTextEdit.setLineWrapColumnOrWidth">
      <Argument typename="int" name="w"/>
    </Function>
    <Function name="QTextEdit.lineWrapColumnOrWidth">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextEdit.setLineWrapMode">
      <Argument typename="QTextEdit.LineWrapMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QTextEdit.lineWrapMode">
      <Argument typename="QTextEdit.LineWrapMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTextEdit.setUndoRedoEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTextEdit.isUndoRedoEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.documentTitle">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextEdit.setDocumentTitle">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
    <Function name="QTextEdit.setTabChangesFocus">
      <Argument typename="bool" name="b"/>
    </Function>
    <Function name="QTextEdit.tabChangesFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.setAutoFormatting">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" name="features"/>
    </Function>
    <Function name="QTextEdit.autoFormatting">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.currentCharFormat">
      <Argument typename="QTextCharFormat" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.setCurrentCharFormat">
      <Argument typename="QTextCharFormat" typetype="class" name="format"/>
    </Function>
    <Function name="QTextEdit.mergeCurrentCharFormat">
      <Argument typename="QTextCharFormat" typetype="class" name="modifier"/>
    </Function>
    <Function name="QTextEdit.alignment">
      <Argument typename="Qt.Alignment" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.currentFont">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.textColor">
      <Argument typename="QColor" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.fontItalic">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.fontUnderline">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.fontWeight">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextEdit.fontFamily">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextEdit.fontPointSize">
      <Argument typename="float" dir="out"/>
    </Function>
    <Function name="QTextEdit.setReadOnly">
      <Argument typename="bool" name="ro"/>
    </Function>
    <Function name="QTextEdit.isReadOnly">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextEdit.textCursor">
      <Argument typename="QTextCursor" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.setTextCursor">
      <Argument typename="QTextCursor" typetype="class" name="cursor"/>
    </Function>
    <Function name="QTextEdit.document">
      <Argument typename="QTextDocument" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.setDocument">
      <Argument typename="QTextDocument" typetype="class" name="document"/>
    </Function>
  </Class>
  <Class name="QTextBrowser" inherits="QTextEdit">
    <Function name="QTextBrowser.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Signal default="1" name="QTextBrowser.historyChanged" sig="void historyChanged()"/>
    <Function name="QTextBrowser.forwardHistoryCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextBrowser.backwardHistoryCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextBrowser.historyUrl">
      <Argument typename="QUrl" typetype="class" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QTextBrowser.historyTitle">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int"/>
    </Function>
    <Function name="QTextBrowser.setOpenLinks">
      <Argument typename="bool" name="open"/>
    </Function>
    <Function name="QTextBrowser.openLinks">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextBrowser.setOpenExternalLinks">
      <Argument typename="bool" name="open"/>
    </Function>
    <Function name="QTextBrowser.openExternalLinks">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextBrowser.clearHistory"/>
    <Function name="QTextBrowser.isForwardAvailable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextBrowser.isBackwardAvailable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTextBrowser.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTextBrowser.focusNextPrevChild" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="bool" name="next"/>
    </Function>
    <Function name="QTextBrowser.focusOutEvent" virtual="1">
      <Argument typename="QFocusEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QTextBrowser.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QTextBrowser.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QTextBrowser.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QTextBrowser.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="ev"/>
    </Function>
    <Function name="QTextBrowser.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Signal default="1" name="QTextBrowser.anchorClicked" sig="void anchorClicked(const  ::QUrl&amp;)"/>
    <Signal default="1" name="QTextBrowser.highlighted" sig="void highlighted(const  ::QUrl&amp;)"/>
    <Signal name="QTextBrowser.highlighted" sig="void highlighted(const QString&amp;)"/>
    <Signal default="1" name="QTextBrowser.sourceChanged" sig="void sourceChanged(const  ::QUrl&amp;)"/>
    <Signal default="1" name="QTextBrowser.forwardAvailable" sig="void forwardAvailable(bool)"/>
    <Signal default="1" name="QTextBrowser.backwardAvailable" sig="void backwardAvailable(bool)"/>
    <Function name="QTextBrowser.reload" slot="void reload()" virtual="1"/>
    <Function name="QTextBrowser.home" slot="void home()" virtual="1"/>
    <Function name="QTextBrowser.forward" slot="void forward()" virtual="1"/>
    <Function name="QTextBrowser.backward" slot="void backward()" virtual="1"/>
    <Function name="QTextBrowser.setSource" slot="void setSource(const  ::QUrl&amp;)" virtual="1">
      <Argument typename="QUrl" typetype="class" name="name"/>
    </Function>
    <Function name="QTextBrowser.loadResource" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="type"/>
      <Argument typename="QUrl" typetype="class" name="name"/>
    </Function>
    <Function name="QTextBrowser.setSearchPaths">
      <Argument typename="QStringList" typetype="mappedtype" name="paths"/>
    </Function>
    <Function name="QTextBrowser.searchPaths">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTextBrowser.source">
      <Argument typename="QUrl" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QTextEdit.ExtraSelection">
    <Function name="QTextEdit.ExtraSelection.__init__"/>
    <Function name="QTextEdit.ExtraSelection.__init__">
      <Argument typename="QTextEdit.ExtraSelection" typetype="class"/>
    </Function>
    <Member name="QTextEdit.ExtraSelection.cursor" typename="QTextCursor" typetype="class"/>
    <Member name="QTextEdit.ExtraSelection.format" typename="QTextCharFormat" typetype="class"/>
  </Class>
  <Class name="QTextEdit.AutoFormatting" convert="1">
    <Function name="QTextEdit.AutoFormatting.__init__"/>
    <Function name="QTextEdit.AutoFormatting.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__init__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__ixor__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__xor__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__ior__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__or__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__iand__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__and__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__invert__">
      <Argument typename="QTextEdit.AutoFormatting" typetype="class" dir="out"/>
    </Function>
    <Function name="QTextEdit.AutoFormatting.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QToolBar" inherits="QWidget">
    <Function name="QToolBar.__init__">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QToolBar.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QToolBar.isFloating">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QToolBar.setFloatable">
      <Argument typename="bool" name="floatable"/>
    </Function>
    <Function name="QToolBar.isFloatable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QToolBar.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QToolBar.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QToolBar.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QToolBar.actionEvent" virtual="1">
      <Argument typename="QActionEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QToolBar.initStyleOption">
      <Argument typename="QStyleOptionToolBar" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QToolBar.visibilityChanged" sig="void visibilityChanged(bool)"/>
    <Signal default="1" name="QToolBar.topLevelChanged" sig="void topLevelChanged(bool)"/>
    <Signal default="1" name="QToolBar.toolButtonStyleChanged" sig="void toolButtonStyleChanged( ::Qt::ToolButtonStyle)"/>
    <Signal default="1" name="QToolBar.iconSizeChanged" sig="void iconSizeChanged(const  ::QSize&amp;)"/>
    <Signal default="1" name="QToolBar.orientationChanged" sig="void orientationChanged( ::Qt::Orientation)"/>
    <Signal default="1" name="QToolBar.allowedAreasChanged" sig="void allowedAreasChanged( ::Qt::ToolBarAreas)"/>
    <Signal default="1" name="QToolBar.movableChanged" sig="void movableChanged(bool)"/>
    <Signal default="1" name="QToolBar.actionTriggered" sig="void actionTriggered( ::QAction*)"/>
    <Function name="QToolBar.setToolButtonStyle" slot="void setToolButtonStyle( ::Qt::ToolButtonStyle)">
      <Argument typename="Qt.ToolButtonStyle" typetype="enum" name="toolButtonStyle"/>
    </Function>
    <Function name="QToolBar.setIconSize" slot="void setIconSize(const  ::QSize&amp;)">
      <Argument typename="QSize" typetype="class" name="iconSize"/>
    </Function>
    <Function name="QToolBar.widgetForAction">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QToolBar.toolButtonStyle">
      <Argument typename="Qt.ToolButtonStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QToolBar.iconSize">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolBar.toggleViewAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolBar.actionAt">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QToolBar.actionAt">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QToolBar.actionGeometry">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QToolBar.insertWidget">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QToolBar.addWidget">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QToolBar.insertSeparator">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QAction" typetype="class" name="before"/>
    </Function>
    <Function name="QToolBar.addSeparator">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolBar.addAction">
      <Argument typename="QAction" typetype="class" name="action"/>
    </Function>
    <Function name="QToolBar.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QToolBar.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QToolBar.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QToolBar.addAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="object" name="slot"/>
    </Function>
    <Function name="QToolBar.clear"/>
    <Function name="QToolBar.orientation">
      <Argument typename="Qt.Orientation" typetype="enum" dir="out"/>
    </Function>
    <Function name="QToolBar.setOrientation">
      <Argument typename="Qt.Orientation" typetype="enum" name="orientation"/>
    </Function>
    <Function name="QToolBar.isAreaAllowed">
      <Argument typename="bool" dir="out"/>
      <Argument typename="Qt.ToolBarArea" typetype="enum" name="area"/>
    </Function>
    <Function name="QToolBar.allowedAreas">
      <Argument typename="Qt.ToolBarAreas" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolBar.setAllowedAreas">
      <Argument typename="Qt.ToolBarAreas" typetype="class" name="areas"/>
    </Function>
    <Function name="QToolBar.isMovable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QToolBar.setMovable">
      <Argument typename="bool" name="movable"/>
    </Function>
  </Class>
  <Class name="QToolBox" inherits="QFrame">
    <Function name="QToolBox.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Function name="QToolBox.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QToolBox.showEvent" virtual="1">
      <Argument typename="QShowEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QToolBox.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QToolBox.itemRemoved" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.itemInserted" virtual="1">
      <Argument typename="int" name="index"/>
    </Function>
    <Signal default="1" name="QToolBox.currentChanged" sig="void currentChanged(int)"/>
    <Function name="QToolBox.setCurrentWidget" slot="void setCurrentWidget( ::QWidget*)">
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QToolBox.setCurrentIndex" slot="void setCurrentIndex(int)">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QToolBox.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QToolBox.indexOf">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
    </Function>
    <Function name="QToolBox.widget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.currentWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolBox.currentIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QToolBox.itemToolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.setItemToolTip">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="toolTip"/>
    </Function>
    <Function name="QToolBox.itemIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.setItemIcon">
      <Argument typename="int" name="index"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QToolBox.itemText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.setItemText">
      <Argument typename="int" name="index"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QToolBox.isItemEnabled">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.setItemEnabled">
      <Argument typename="int" name="index"/>
      <Argument typename="bool" name="enabled"/>
    </Function>
    <Function name="QToolBox.removeItem">
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QToolBox.insertItem">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="item" transfer="to"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QToolBox.insertItem">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
      <Argument typename="QIcon" typetype="class" name="icon"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QToolBox.addItem">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="item" transfer="to"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QToolBox.addItem">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="item" transfer="to"/>
      <Argument typename="QIcon" typetype="class" name="iconSet"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
  </Class>
  <Class name="QToolButton" inherits="QAbstractButton">
    <Function name="QToolButton.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Enum name="QToolButton.ToolButtonPopupMode">
      <EnumMember name="QToolButton.DelayedPopup"/>
      <EnumMember name="QToolButton.MenuButtonPopup"/>
      <EnumMember name="QToolButton.InstantPopup"/>
    </Enum>
    <Function name="QToolButton.hitButton" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="pos"/>
    </Function>
    <Function name="QToolButton.nextCheckState" virtual="1"/>
    <Function name="QToolButton.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.changeEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.leaveEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.enterEvent" virtual="1">
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.actionEvent" virtual="1">
      <Argument typename="QActionEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class"/>
    </Function>
    <Function name="QToolButton.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QToolButton.initStyleOption">
      <Argument typename="QStyleOptionToolButton" typetype="class" name="option"/>
    </Function>
    <Signal default="1" name="QToolButton.triggered" sig="void triggered( ::QAction*)"/>
    <Function name="QToolButton.setDefaultAction" slot="void setDefaultAction( ::QAction*)">
      <Argument typename="QAction" typetype="class"/>
    </Function>
    <Function name="QToolButton.setToolButtonStyle" slot="void setToolButtonStyle( ::Qt::ToolButtonStyle)">
      <Argument typename="Qt.ToolButtonStyle" typetype="enum" name="style"/>
    </Function>
    <Function name="QToolButton.showMenu" slot="void showMenu()"/>
    <Function name="QToolButton.autoRaise">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QToolButton.setAutoRaise">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QToolButton.defaultAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolButton.popupMode">
      <Argument typename="QToolButton.ToolButtonPopupMode" typetype="enum" dir="out"/>
    </Function>
    <Function name="QToolButton.setPopupMode">
      <Argument typename="QToolButton.ToolButtonPopupMode" typetype="enum" name="mode"/>
    </Function>
    <Function name="QToolButton.menu">
      <Argument typename="QMenu" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolButton.setMenu">
      <Argument typename="QMenu" typetype="class" name="menu"/>
    </Function>
    <Function name="QToolButton.setArrowType">
      <Argument typename="Qt.ArrowType" typetype="enum" name="type"/>
    </Function>
    <Function name="QToolButton.arrowType">
      <Argument typename="Qt.ArrowType" typetype="enum" dir="out"/>
    </Function>
    <Function name="QToolButton.toolButtonStyle">
      <Argument typename="Qt.ToolButtonStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QToolButton.minimumSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolButton.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QToolTip">
    <Function name="QToolTip.__init__">
      <Argument typename="QToolTip" typetype="class"/>
    </Function>
    <Function name="QToolTip.text" static="1">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QToolTip.isVisible" static="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QToolTip.setFont" static="1">
      <Argument typename="QFont" typetype="class"/>
    </Function>
    <Function name="QToolTip.font" static="1">
      <Argument typename="QFont" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolTip.setPalette" static="1">
      <Argument typename="QPalette" typetype="class"/>
    </Function>
    <Function name="QToolTip.hideText" static="1"/>
    <Function name="QToolTip.palette" static="1">
      <Argument typename="QPalette" typetype="class" dir="out"/>
    </Function>
    <Function name="QToolTip.showText" static="1">
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QToolTip.showText" static="1">
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
    </Function>
    <Function name="QToolTip.showText" static="1">
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="w"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="int" name="msecShowTime"/>
    </Function>
  </Class>
  <Class name="QTreeView" inherits="QAbstractItemView">
    <Function name="QTreeView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTreeView.resetIndentation"/>
    <Function name="QTreeView.viewportSizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeView.treePosition">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeView.setTreePosition">
      <Argument typename="int" name="logicalIndex"/>
    </Function>
    <Function name="QTreeView.setHeaderHidden">
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QTreeView.isHeaderHidden">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setExpandsOnDoubleClick">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTreeView.expandsOnDoubleClick">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.currentChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="current"/>
      <Argument typename="QModelIndex" typetype="class" name="previous"/>
    </Function>
    <Function name="QTreeView.selectionChanged" virtual="1">
      <Argument typename="QItemSelection" typetype="class" name="selected"/>
      <Argument typename="QItemSelection" typetype="class" name="deselected"/>
    </Function>
    <Function name="QTreeView.rowHeight">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.viewportEvent" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeView.dragMoveEvent" virtual="1">
      <Argument typename="QDragMoveEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeView.expandToDepth" slot="void expandToDepth(int)">
      <Argument typename="int" name="depth"/>
    </Function>
    <Function name="QTreeView.wordWrap">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setWordWrap">
      <Argument typename="bool" name="on"/>
    </Function>
    <Function name="QTreeView.setFirstColumnSpanned">
      <Argument typename="int" name="row"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="bool" name="span"/>
    </Function>
    <Function name="QTreeView.isFirstColumnSpanned">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
    </Function>
    <Function name="QTreeView.setAutoExpandDelay">
      <Argument typename="int" name="delay"/>
    </Function>
    <Function name="QTreeView.autoExpandDelay">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeView.sortByColumn">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order"/>
    </Function>
    <Function name="QTreeView.allColumnsShowFocus">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setAllColumnsShowFocus">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTreeView.isAnimated">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setAnimated">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTreeView.isSortingEnabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setSortingEnabled">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTreeView.setColumnWidth">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="width"/>
    </Function>
    <Function name="QTreeView.isIndexHidden" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.horizontalScrollbarAction" virtual="1">
      <Argument typename="int" name="action"/>
    </Function>
    <Function name="QTreeView.indexRowSizeHint">
      <Argument typename="int" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.sizeHintForColumn" virtual="1">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.updateGeometries" virtual="1"/>
    <Function name="QTreeView.keyPressEvent" virtual="1">
      <Argument typename="QKeyEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeView.mouseDoubleClickEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTreeView.mouseMoveEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeView.mousePressEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTreeView.drawTree">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRegion" typetype="class" name="region"/>
    </Function>
    <Function name="QTreeView.drawBranches" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.drawRow" virtual="1">
      <Argument typename="QPainter" typetype="class" name="painter"/>
      <Argument typename="QStyleOptionViewItem" typetype="class" name="options"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.mouseReleaseEvent" virtual="1">
      <Argument typename="QMouseEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeView.timerEvent" virtual="1">
      <Argument typename="QTimerEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeView.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTreeView.selectedIndexes" virtual="1">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTreeView.visualRegionForSelection" virtual="1">
      <Argument typename="QRegion" typetype="class" dir="out"/>
      <Argument typename="QItemSelection" typetype="class" name="selection"/>
    </Function>
    <Function name="QTreeView.setSelection" virtual="1">
      <Argument typename="QRect" typetype="class" name="rect"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QTreeView.verticalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeView.horizontalOffset" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeView.moveCursor" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QAbstractItemView.CursorAction" typetype="enum" name="cursorAction"/>
      <Argument typename="Qt.KeyboardModifiers" typetype="class" name="modifiers"/>
    </Function>
    <Function name="QTreeView.rowsAboutToBeRemoved" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QTreeView.rowsInserted" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="start"/>
      <Argument typename="int" name="end"/>
    </Function>
    <Function name="QTreeView.scrollContentsBy" virtual="1">
      <Argument typename="int" name="dx"/>
      <Argument typename="int" name="dy"/>
    </Function>
    <Function name="QTreeView.rowsRemoved" slot="void rowsRemoved(const  ::QModelIndex&amp;,int,int)">
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="int" name="first"/>
      <Argument typename="int" name="last"/>
    </Function>
    <Function name="QTreeView.reexpand" slot="void reexpand()"/>
    <Function name="QTreeView.columnMoved" slot="void columnMoved()"/>
    <Function name="QTreeView.columnCountChanged" slot="void columnCountChanged(int,int)">
      <Argument typename="int" name="oldCount"/>
      <Argument typename="int" name="newCount"/>
    </Function>
    <Function name="QTreeView.columnResized" slot="void columnResized(int,int,int)">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="oldSize"/>
      <Argument typename="int" name="newSize"/>
    </Function>
    <Function name="QTreeView.selectAll" slot="void selectAll()" virtual="1"/>
    <Function name="QTreeView.resizeColumnToContents" slot="void resizeColumnToContents(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.collapseAll" slot="void collapseAll()"/>
    <Function name="QTreeView.collapse" slot="void collapse(const  ::QModelIndex&amp;)">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.expandAll" slot="void expandAll()"/>
    <Function name="QTreeView.expand" slot="void expand(const  ::QModelIndex&amp;)">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.showColumn" slot="void showColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.hideColumn" slot="void hideColumn(int)">
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.dataChanged" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="topLeft"/>
      <Argument typename="QModelIndex" typetype="class" name="bottomRight"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="roles" default="[]"/>
    </Function>
    <Signal default="1" name="QTreeView.collapsed" sig="void collapsed(const  ::QModelIndex&amp;)"/>
    <Signal default="1" name="QTreeView.expanded" sig="void expanded(const  ::QModelIndex&amp;)"/>
    <Function name="QTreeView.reset" virtual="1"/>
    <Function name="QTreeView.indexBelow">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.indexAbove">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.indexAt" virtual="1">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QTreeView.scrollTo" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QTreeView.visualRect" virtual="1">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.keyboardSearch" virtual="1">
      <Argument typename="QString" typetype="mappedtype" name="search"/>
    </Function>
    <Function name="QTreeView.setExpanded">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
      <Argument typename="bool" name="expand"/>
    </Function>
    <Function name="QTreeView.isExpanded">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.setRowHidden">
      <Argument typename="int" name="row"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QTreeView.isRowHidden">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="row"/>
      <Argument typename="QModelIndex" typetype="class" name="parent"/>
    </Function>
    <Function name="QTreeView.setColumnHidden">
      <Argument typename="int" name="column"/>
      <Argument typename="bool" name="hide"/>
    </Function>
    <Function name="QTreeView.isColumnHidden">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.columnAt">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="x"/>
    </Function>
    <Function name="QTreeView.columnWidth">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.columnViewportPosition">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeView.setItemsExpandable">
      <Argument typename="bool" name="enable"/>
    </Function>
    <Function name="QTreeView.itemsExpandable">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setUniformRowHeights">
      <Argument typename="bool" name="uniform"/>
    </Function>
    <Function name="QTreeView.uniformRowHeights">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setRootIsDecorated">
      <Argument typename="bool" name="show"/>
    </Function>
    <Function name="QTreeView.rootIsDecorated">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeView.setIndentation">
      <Argument typename="int" name="i"/>
    </Function>
    <Function name="QTreeView.indentation">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeView.setHeader">
      <Argument typename="QHeaderView" typetype="class" name="header" transfer="to"/>
    </Function>
    <Function name="QTreeView.header">
      <Argument typename="QHeaderView" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeView.setSelectionModel" virtual="1">
      <Argument typename="QItemSelectionModel" typetype="class" name="selectionModel"/>
    </Function>
    <Function name="QTreeView.setRootIndex" virtual="1">
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeView.setModel" virtual="1">
      <Argument typename="QAbstractItemModel" typetype="class" name="model"/>
    </Function>
  </Class>
  <Class name="QTreeWidgetItem">
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QStringList" typetype="mappedtype" name="strings"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QStringList" typetype="mappedtype" name="strings"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidget" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="preceding"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidgetItem" typetype="class" name="parent" transfer="this"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidgetItem" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QStringList" typetype="mappedtype" name="strings"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidgetItem" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="preceding"/>
      <Argument typename="int" name="type" default="QTreeWidgetItem.Type"/>
    </Function>
    <Function name="QTreeWidgetItem.__init__">
      <Argument typename="QTreeWidgetItem" typetype="class" name="other"/>
    </Function>
    <Enum name="QTreeWidgetItem.ChildIndicatorPolicy">
      <EnumMember name="QTreeWidgetItem.ShowIndicator"/>
      <EnumMember name="QTreeWidgetItem.DontShowIndicator"/>
      <EnumMember name="QTreeWidgetItem.DontShowIndicatorWhenChildless"/>
    </Enum>
    <Enum name="QTreeWidgetItem.ItemType">
      <EnumMember name="QTreeWidgetItem.Type"/>
      <EnumMember name="QTreeWidgetItem.UserType"/>
    </Enum>
    <Function name="QTreeWidgetItem.__ge__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="other"/>
    </Function>
    <Function name="QTreeWidgetItem.emitDataChanged"/>
    <Function name="QTreeWidgetItem.isDisabled">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.setDisabled">
      <Argument typename="bool" name="disabled"/>
    </Function>
    <Function name="QTreeWidgetItem.isFirstColumnSpanned">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.setFirstColumnSpanned">
      <Argument typename="bool" name="aspan"/>
    </Function>
    <Function name="QTreeWidgetItem.removeChild">
      <Argument typename="QTreeWidgetItem" typetype="class" name="child" transfer="back"/>
    </Function>
    <Function name="QTreeWidgetItem.childIndicatorPolicy">
      <Argument typename="QTreeWidgetItem.ChildIndicatorPolicy" typetype="enum" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.setChildIndicatorPolicy">
      <Argument typename="QTreeWidgetItem.ChildIndicatorPolicy" typetype="enum" name="policy"/>
    </Function>
    <Function name="QTreeWidgetItem.isExpanded">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.setExpanded">
      <Argument typename="bool" name="aexpand"/>
    </Function>
    <Function name="QTreeWidgetItem.isHidden">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.setHidden">
      <Argument typename="bool" name="ahide"/>
    </Function>
    <Function name="QTreeWidgetItem.isSelected">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.setSelected">
      <Argument typename="bool" name="aselect"/>
    </Function>
    <Function name="QTreeWidgetItem.sortChildren">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order"/>
    </Function>
    <Function name="QTreeWidgetItem.setForeground">
      <Argument typename="int" name="column"/>
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QTreeWidgetItem.foreground">
      <Argument typename="QBrush" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.setBackground">
      <Argument typename="int" name="column"/>
      <Argument typename="QBrush" typetype="class" name="brush"/>
    </Function>
    <Function name="QTreeWidgetItem.background">
      <Argument typename="QBrush" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.takeChildren">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out" transfer="back"/>
    </Function>
    <Function name="QTreeWidgetItem.insertChildren">
      <Argument typename="int" name="index"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="children" transfer="to"/>
    </Function>
    <Function name="QTreeWidgetItem.addChildren">
      <Argument typename="unknown-type" typetype="mappedtype" name="children" transfer="to"/>
    </Function>
    <Function name="QTreeWidgetItem.setSizeHint">
      <Argument typename="int" name="column"/>
      <Argument typename="QSize" typetype="class" name="size"/>
    </Function>
    <Function name="QTreeWidgetItem.sizeHint">
      <Argument typename="QSize" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.indexOfChild">
      <Argument typename="int" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="achild"/>
    </Function>
    <Function name="QTreeWidgetItem.setFont">
      <Argument typename="int" name="column"/>
      <Argument typename="QFont" typetype="class" name="afont"/>
    </Function>
    <Function name="QTreeWidgetItem.setWhatsThis">
      <Argument typename="int" name="column"/>
      <Argument typename="QString" typetype="mappedtype" name="awhatsThis"/>
    </Function>
    <Function name="QTreeWidgetItem.setToolTip">
      <Argument typename="int" name="column"/>
      <Argument typename="QString" typetype="mappedtype" name="atoolTip"/>
    </Function>
    <Function name="QTreeWidgetItem.setStatusTip">
      <Argument typename="int" name="column"/>
      <Argument typename="QString" typetype="mappedtype" name="astatusTip"/>
    </Function>
    <Function name="QTreeWidgetItem.setIcon">
      <Argument typename="int" name="column"/>
      <Argument typename="QIcon" typetype="class" name="aicon"/>
    </Function>
    <Function name="QTreeWidgetItem.setText">
      <Argument typename="int" name="column"/>
      <Argument typename="QString" typetype="mappedtype" name="atext"/>
    </Function>
    <Function name="QTreeWidgetItem.setFlags">
      <Argument typename="Qt.ItemFlags" typetype="class" name="aflags"/>
    </Function>
    <Function name="QTreeWidgetItem.type">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.takeChild">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTreeWidgetItem.insertChild">
      <Argument typename="int" name="index"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="child" transfer="to"/>
    </Function>
    <Function name="QTreeWidgetItem.addChild">
      <Argument typename="QTreeWidgetItem" typetype="class" name="child" transfer="to"/>
    </Function>
    <Function name="QTreeWidgetItem.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.childCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.child">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTreeWidgetItem.parent">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.write" virtual="1">
      <Argument typename="QDataStream" typetype="class" name="out"/>
    </Function>
    <Function name="QTreeWidgetItem.read" virtual="1">
      <Argument typename="QDataStream" typetype="class" name="in"/>
    </Function>
    <Function name="QTreeWidgetItem.__lt__" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="other"/>
    </Function>
    <Function name="QTreeWidgetItem.setData" virtual="1">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="role"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QTreeWidgetItem.data" virtual="1">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="role"/>
    </Function>
    <Function name="QTreeWidgetItem.setCheckState">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.CheckState" typetype="enum" name="state"/>
    </Function>
    <Function name="QTreeWidgetItem.checkState">
      <Argument typename="Qt.CheckState" typetype="enum" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.setTextAlignment">
      <Argument typename="int" name="column"/>
      <Argument typename="int" name="alignment"/>
    </Function>
    <Function name="QTreeWidgetItem.textAlignment">
      <Argument typename="int" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.font">
      <Argument typename="QFont" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.whatsThis">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.toolTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.statusTip">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.icon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidgetItem.flags">
      <Argument typename="Qt.ItemFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.treeWidget">
      <Argument typename="QTreeWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItem.clone" virtual="1">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QTreeWidget" inherits="QTreeView">
    <Function name="QTreeWidget.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QTreeWidget.setSelectionModel" virtual="1">
      <Argument typename="QItemSelectionModel" typetype="class" name="selectionModel"/>
    </Function>
    <Function name="QTreeWidget.removeItemWidget">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidget.itemBelow">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.itemAbove">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.setFirstItemColumnSpanned">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="bool" name="span"/>
    </Function>
    <Function name="QTreeWidget.isFirstItemColumnSpanned">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.setHeaderLabel">
      <Argument typename="QString" typetype="mappedtype" name="alabel"/>
    </Function>
    <Function name="QTreeWidget.invisibleRootItem">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidget.dropEvent" virtual="1">
      <Argument typename="QDropEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QTreeWidget.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="e"/>
    </Function>
    <Function name="QTreeWidget.itemFromIndex">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QModelIndex" typetype="class" name="index"/>
    </Function>
    <Function name="QTreeWidget.indexFromItem">
      <Argument typename="QModelIndex" typetype="class" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
    <Function name="QTreeWidget.supportedDropActions" virtual="1">
      <Argument typename="Qt.DropActions" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidget.dropMimeData" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="parent"/>
      <Argument typename="int" name="index"/>
      <Argument typename="QMimeData" typetype="class" name="data"/>
      <Argument typename="Qt.DropAction" typetype="enum" name="action"/>
    </Function>
    <Function name="QTreeWidget.mimeData" virtual="1">
      <Argument typename="QMimeData" typetype="class" dir="out" transfer="back"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="items"/>
    </Function>
    <Function name="QTreeWidget.mimeTypes" virtual="1">
      <Argument typename="QStringList" typetype="mappedtype" dir="out"/>
    </Function>
    <Signal default="1" name="QTreeWidget.itemSelectionChanged" sig="void itemSelectionChanged()"/>
    <Signal default="1" name="QTreeWidget.currentItemChanged" sig="void currentItemChanged( ::QTreeWidgetItem*, ::QTreeWidgetItem*)"/>
    <Signal default="1" name="QTreeWidget.itemCollapsed" sig="void itemCollapsed( ::QTreeWidgetItem*)"/>
    <Signal default="1" name="QTreeWidget.itemExpanded" sig="void itemExpanded( ::QTreeWidgetItem*)"/>
    <Signal default="1" name="QTreeWidget.itemChanged" sig="void itemChanged( ::QTreeWidgetItem*,int)"/>
    <Signal default="1" name="QTreeWidget.itemEntered" sig="void itemEntered( ::QTreeWidgetItem*,int)"/>
    <Signal default="1" name="QTreeWidget.itemActivated" sig="void itemActivated( ::QTreeWidgetItem*,int)"/>
    <Signal default="1" name="QTreeWidget.itemDoubleClicked" sig="void itemDoubleClicked( ::QTreeWidgetItem*,int)"/>
    <Signal default="1" name="QTreeWidget.itemClicked" sig="void itemClicked( ::QTreeWidgetItem*,int)"/>
    <Signal default="1" name="QTreeWidget.itemPressed" sig="void itemPressed( ::QTreeWidgetItem*,int)"/>
    <Function name="QTreeWidget.clear" slot="void clear()"/>
    <Function name="QTreeWidget.collapseItem" slot="void collapseItem(const  ::QTreeWidgetItem*)">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.expandItem" slot="void expandItem(const  ::QTreeWidgetItem*)">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.scrollToItem" slot="void scrollToItem(const  ::QTreeWidgetItem*, ::QAbstractItemView::ScrollHint = QAbstractItemView.EnsureVisible)">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="QAbstractItemView.ScrollHint" typetype="enum" name="hint" default="QAbstractItemView.EnsureVisible"/>
    </Function>
    <Function name="QTreeWidget.findItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="Qt.MatchFlags" typetype="class" name="flags"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
    <Function name="QTreeWidget.selectedItems">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QTreeWidget.setItemWidget">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QTreeWidget.itemWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidget.closePersistentEditor">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
    <Function name="QTreeWidget.openPersistentEditor">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
    <Function name="QTreeWidget.editItem">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column" default="0"/>
    </Function>
    <Function name="QTreeWidget.sortItems">
      <Argument typename="int" name="column"/>
      <Argument typename="Qt.SortOrder" typetype="enum" name="order"/>
    </Function>
    <Function name="QTreeWidget.sortColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidget.visualItemRect">
      <Argument typename="QRect" typetype="class" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.itemAt">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="QPoint" typetype="class" name="p"/>
    </Function>
    <Function name="QTreeWidget.itemAt">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="ax"/>
      <Argument typename="int" name="ay"/>
    </Function>
    <Function name="QTreeWidget.setCurrentItem">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.setCurrentItem">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column"/>
    </Function>
    <Function name="QTreeWidget.setCurrentItem">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="int" name="column"/>
      <Argument typename="QItemSelectionModel.SelectionFlags" typetype="class" name="command"/>
    </Function>
    <Function name="QTreeWidget.currentColumn">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidget.currentItem">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidget.setHeaderLabels">
      <Argument typename="QStringList" typetype="mappedtype" name="labels"/>
    </Function>
    <Function name="QTreeWidget.setHeaderItem">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTreeWidget.headerItem">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidget.addTopLevelItems">
      <Argument typename="unknown-type" typetype="mappedtype" name="items" transfer="to"/>
    </Function>
    <Function name="QTreeWidget.insertTopLevelItems">
      <Argument typename="int" name="index"/>
      <Argument typename="unknown-type" typetype="mappedtype" name="items" transfer="to"/>
    </Function>
    <Function name="QTreeWidget.indexOfTopLevelItem">
      <Argument typename="int" dir="out"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
    </Function>
    <Function name="QTreeWidget.takeTopLevelItem">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out" transfer="back"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTreeWidget.addTopLevelItem">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTreeWidget.insertTopLevelItem">
      <Argument typename="int" name="index"/>
      <Argument typename="QTreeWidgetItem" typetype="class" name="item" transfer="to"/>
    </Function>
    <Function name="QTreeWidget.topLevelItemCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidget.topLevelItem">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QTreeWidget.setColumnCount">
      <Argument typename="int" name="columns"/>
    </Function>
    <Function name="QTreeWidget.columnCount">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QTreeWidgetItemIterator">
    <Function name="QTreeWidgetItemIterator.__init__">
      <Argument typename="QTreeWidgetItemIterator" typetype="class" name="it"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.__init__">
      <Argument typename="QTreeWidget" typetype="class" name="widget"/>
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" name="flags" default="QTreeWidgetItemIterator.All"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.__init__">
      <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" name="flags" default="QTreeWidgetItemIterator.All"/>
    </Function>
    <Enum name="QTreeWidgetItemIterator.IteratorFlag">
      <EnumMember name="QTreeWidgetItemIterator.All"/>
      <EnumMember name="QTreeWidgetItemIterator.Hidden"/>
      <EnumMember name="QTreeWidgetItemIterator.NotHidden"/>
      <EnumMember name="QTreeWidgetItemIterator.Selected"/>
      <EnumMember name="QTreeWidgetItemIterator.Unselected"/>
      <EnumMember name="QTreeWidgetItemIterator.Selectable"/>
      <EnumMember name="QTreeWidgetItemIterator.NotSelectable"/>
      <EnumMember name="QTreeWidgetItemIterator.DragEnabled"/>
      <EnumMember name="QTreeWidgetItemIterator.DragDisabled"/>
      <EnumMember name="QTreeWidgetItemIterator.DropEnabled"/>
      <EnumMember name="QTreeWidgetItemIterator.DropDisabled"/>
      <EnumMember name="QTreeWidgetItemIterator.HasChildren"/>
      <EnumMember name="QTreeWidgetItemIterator.NoChildren"/>
      <EnumMember name="QTreeWidgetItemIterator.Checked"/>
      <EnumMember name="QTreeWidgetItemIterator.NotChecked"/>
      <EnumMember name="QTreeWidgetItemIterator.Enabled"/>
      <EnumMember name="QTreeWidgetItemIterator.Disabled"/>
      <EnumMember name="QTreeWidgetItemIterator.Editable"/>
      <EnumMember name="QTreeWidgetItemIterator.NotEditable"/>
      <EnumMember name="QTreeWidgetItemIterator.UserFlag"/>
    </Enum>
    <Function name="QTreeWidgetItemIterator.__isub__">
      <Argument typename="QTreeWidgetItemIterator" typetype="class" dir="out"/>
      <Argument typename="int" name="n"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.__iadd__">
      <Argument typename="QTreeWidgetItemIterator" typetype="class" dir="out"/>
      <Argument typename="int" name="n"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.value">
      <Argument typename="QTreeWidgetItem" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QTreeWidgetItemIterator.IteratorFlags" convert="1">
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__init__"/>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__init__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__ixor__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__xor__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__ior__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__or__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__iand__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__and__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__invert__">
      <Argument typename="QTreeWidgetItemIterator.IteratorFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QTreeWidgetItemIterator.IteratorFlags.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QUndoGroup" inherits="QObject">
    <Function name="QUndoGroup.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Signal default="1" name="QUndoGroup.undoTextChanged" sig="void undoTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QUndoGroup.redoTextChanged" sig="void redoTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QUndoGroup.indexChanged" sig="void indexChanged(int)"/>
    <Signal default="1" name="QUndoGroup.cleanChanged" sig="void cleanChanged(bool)"/>
    <Signal default="1" name="QUndoGroup.canUndoChanged" sig="void canUndoChanged(bool)"/>
    <Signal default="1" name="QUndoGroup.canRedoChanged" sig="void canRedoChanged(bool)"/>
    <Signal default="1" name="QUndoGroup.activeStackChanged" sig="void activeStackChanged( ::QUndoStack*)"/>
    <Function name="QUndoGroup.undo" slot="void undo()"/>
    <Function name="QUndoGroup.setActiveStack" slot="void setActiveStack( ::QUndoStack*)">
      <Argument typename="QUndoStack" typetype="class" name="stack"/>
    </Function>
    <Function name="QUndoGroup.redo" slot="void redo()"/>
    <Function name="QUndoGroup.isClean">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoGroup.redoText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoGroup.undoText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoGroup.canRedo">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoGroup.canUndo">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoGroup.createUndoAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QString" typetype="mappedtype" name="prefix" default="''"/>
    </Function>
    <Function name="QUndoGroup.createRedoAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QString" typetype="mappedtype" name="prefix" default="''"/>
    </Function>
    <Function name="QUndoGroup.activeStack">
      <Argument typename="QUndoStack" typetype="class" dir="out"/>
    </Function>
    <Function name="QUndoGroup.stacks">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoGroup.removeStack">
      <Argument typename="QUndoStack" typetype="class" name="stack"/>
    </Function>
    <Function name="QUndoGroup.addStack">
      <Argument typename="QUndoStack" typetype="class" name="stack"/>
    </Function>
  </Class>
  <Class name="QUndoCommand">
    <Function name="QUndoCommand.__init__">
      <Argument typename="QUndoCommand" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QUndoCommand.__init__">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QUndoCommand" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QUndoCommand.actionText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoCommand.child">
      <Argument typename="QUndoCommand" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QUndoCommand.childCount">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QUndoCommand.undo" virtual="1"/>
    <Function name="QUndoCommand.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoCommand.setText">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QUndoCommand.redo" virtual="1"/>
    <Function name="QUndoCommand.mergeWith" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QUndoCommand" typetype="class" name="other"/>
    </Function>
    <Function name="QUndoCommand.id" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QUndoStack" inherits="QObject">
    <Function name="QUndoStack.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QUndoStack.command">
      <Argument typename="QUndoCommand" typetype="class" dir="out"/>
      <Argument typename="int" name="index"/>
    </Function>
    <Function name="QUndoStack.undoLimit">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QUndoStack.setUndoLimit">
      <Argument typename="int" name="limit"/>
    </Function>
    <Signal default="1" name="QUndoStack.undoTextChanged" sig="void undoTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QUndoStack.redoTextChanged" sig="void redoTextChanged(const QString&amp;)"/>
    <Signal default="1" name="QUndoStack.indexChanged" sig="void indexChanged(int)"/>
    <Signal default="1" name="QUndoStack.cleanChanged" sig="void cleanChanged(bool)"/>
    <Signal default="1" name="QUndoStack.canUndoChanged" sig="void canUndoChanged(bool)"/>
    <Signal default="1" name="QUndoStack.canRedoChanged" sig="void canRedoChanged(bool)"/>
    <Function name="QUndoStack.undo" slot="void undo()"/>
    <Function name="QUndoStack.setIndex" slot="void setIndex(int)">
      <Argument typename="int" name="idx"/>
    </Function>
    <Function name="QUndoStack.setClean" slot="void setClean()"/>
    <Function name="QUndoStack.setActive" slot="void setActive(bool = 1)">
      <Argument typename="bool" name="active" default="True"/>
    </Function>
    <Function name="QUndoStack.redo" slot="void redo()"/>
    <Function name="QUndoStack.endMacro"/>
    <Function name="QUndoStack.beginMacro">
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QUndoStack.cleanIndex">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QUndoStack.isClean">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoStack.isActive">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoStack.createRedoAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QString" typetype="mappedtype" name="prefix" default="''"/>
    </Function>
    <Function name="QUndoStack.createUndoAction">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
      <Argument typename="QString" typetype="mappedtype" name="prefix" default="''"/>
    </Function>
    <Function name="QUndoStack.text">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="int" name="idx"/>
    </Function>
    <Function name="QUndoStack.index">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QUndoStack.__len__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QUndoStack.count">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QUndoStack.redoText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoStack.undoText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoStack.canRedo">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoStack.canUndo">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QUndoStack.push">
      <Argument typename="QUndoCommand" typetype="class" name="cmd" transfer="to"/>
    </Function>
    <Function name="QUndoStack.clear"/>
  </Class>
  <Class name="QUndoView" inherits="QListView">
    <Function name="QUndoView.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QUndoView.__init__">
      <Argument typename="QUndoStack" typetype="class" name="stack"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QUndoView.__init__">
      <Argument typename="QUndoGroup" typetype="class" name="group"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QUndoView.setGroup" slot="void setGroup( ::QUndoGroup*)">
      <Argument typename="QUndoGroup" typetype="class" name="group"/>
    </Function>
    <Function name="QUndoView.setStack" slot="void setStack( ::QUndoStack*)">
      <Argument typename="QUndoStack" typetype="class" name="stack"/>
    </Function>
    <Function name="QUndoView.cleanIcon">
      <Argument typename="QIcon" typetype="class" dir="out"/>
    </Function>
    <Function name="QUndoView.setCleanIcon">
      <Argument typename="QIcon" typetype="class" name="icon"/>
    </Function>
    <Function name="QUndoView.emptyLabel">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QUndoView.setEmptyLabel">
      <Argument typename="QString" typetype="mappedtype" name="label"/>
    </Function>
    <Function name="QUndoView.group">
      <Argument typename="QUndoGroup" typetype="class" dir="out"/>
    </Function>
    <Function name="QUndoView.stack">
      <Argument typename="QUndoStack" typetype="class" dir="out"/>
    </Function>
  </Class>
  <Class name="QWhatsThis">
    <Function name="QWhatsThis.__init__">
      <Argument typename="QWhatsThis" typetype="class"/>
    </Function>
    <Function name="QWhatsThis.createAction" static="1">
      <Argument typename="QAction" typetype="class" dir="out"/>
      <Argument typename="QObject" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QWhatsThis.hideText" static="1"/>
    <Function name="QWhatsThis.showText" static="1">
      <Argument typename="QPoint" typetype="class" name="pos"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
      <Argument typename="QWidget" typetype="class" name="widget" default="None"/>
    </Function>
    <Function name="QWhatsThis.leaveWhatsThisMode" static="1"/>
    <Function name="QWhatsThis.inWhatsThisMode" static="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWhatsThis.enterWhatsThisMode" static="1"/>
  </Class>
  <Class name="QWidget.RenderFlags" convert="1">
    <Function name="QWidget.RenderFlags.__init__"/>
    <Function name="QWidget.RenderFlags.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__init__">
      <Argument typename="QWidget.RenderFlags" typetype="class"/>
    </Function>
    <Function name="QWidget.RenderFlags.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.RenderFlags.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWidget.RenderFlags.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget.RenderFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWidget.RenderFlags" typetype="class" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__ixor__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__xor__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__ior__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__or__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__iand__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__and__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWidget.RenderFlags.__invert__">
      <Argument typename="QWidget.RenderFlags" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidget.RenderFlags.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QWidgetAction" inherits="QAction">
    <Function name="QWidgetAction.__init__">
      <Argument typename="QObject" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QWidgetAction.createdWidgets">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWidgetAction.deleteWidget" virtual="1">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QWidgetAction.createWidget" virtual="1">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QWidgetAction.eventFilter" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QObject" typetype="class"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QWidgetAction.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class"/>
    </Function>
    <Function name="QWidgetAction.releaseWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="back"/>
    </Function>
    <Function name="QWidgetAction.requestWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this"/>
    </Function>
    <Function name="QWidgetAction.defaultWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWidgetAction.setDefaultWidget">
      <Argument typename="QWidget" typetype="class" name="w" transfer="to"/>
    </Function>
  </Class>
  <Class name="QWizard" inherits="QDialog">
    <Function name="QWizard.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
      <Argument typename="Qt.WindowFlags" typetype="class" name="flags" default="Qt.WindowFlags()"/>
    </Function>
    <Enum name="QWizard.WizardOption">
      <EnumMember name="QWizard.IndependentPages"/>
      <EnumMember name="QWizard.IgnoreSubTitles"/>
      <EnumMember name="QWizard.ExtendedWatermarkPixmap"/>
      <EnumMember name="QWizard.NoDefaultButton"/>
      <EnumMember name="QWizard.NoBackButtonOnStartPage"/>
      <EnumMember name="QWizard.NoBackButtonOnLastPage"/>
      <EnumMember name="QWizard.DisabledBackButtonOnLastPage"/>
      <EnumMember name="QWizard.HaveNextButtonOnLastPage"/>
      <EnumMember name="QWizard.HaveFinishButtonOnEarlyPages"/>
      <EnumMember name="QWizard.NoCancelButton"/>
      <EnumMember name="QWizard.CancelButtonOnLeft"/>
      <EnumMember name="QWizard.HaveHelpButton"/>
      <EnumMember name="QWizard.HelpButtonOnRight"/>
      <EnumMember name="QWizard.HaveCustomButton1"/>
      <EnumMember name="QWizard.HaveCustomButton2"/>
      <EnumMember name="QWizard.HaveCustomButton3"/>
      <EnumMember name="QWizard.NoCancelButtonOnLastPage"/>
    </Enum>
    <Enum name="QWizard.WizardStyle">
      <EnumMember name="QWizard.ClassicStyle"/>
      <EnumMember name="QWizard.ModernStyle"/>
      <EnumMember name="QWizard.MacStyle"/>
      <EnumMember name="QWizard.AeroStyle"/>
    </Enum>
    <Enum name="QWizard.WizardPixmap">
      <EnumMember name="QWizard.WatermarkPixmap"/>
      <EnumMember name="QWizard.LogoPixmap"/>
      <EnumMember name="QWizard.BannerPixmap"/>
      <EnumMember name="QWizard.BackgroundPixmap"/>
    </Enum>
    <Enum name="QWizard.WizardButton">
      <EnumMember name="QWizard.BackButton"/>
      <EnumMember name="QWizard.NextButton"/>
      <EnumMember name="QWizard.CommitButton"/>
      <EnumMember name="QWizard.FinishButton"/>
      <EnumMember name="QWizard.CancelButton"/>
      <EnumMember name="QWizard.HelpButton"/>
      <EnumMember name="QWizard.CustomButton1"/>
      <EnumMember name="QWizard.CustomButton2"/>
      <EnumMember name="QWizard.CustomButton3"/>
      <EnumMember name="QWizard.Stretch"/>
    </Enum>
    <Signal default="1" name="QWizard.pageRemoved" sig="void pageRemoved(int)"/>
    <Signal default="1" name="QWizard.pageAdded" sig="void pageAdded(int)"/>
    <Function name="QWizard.sideWidget">
      <Argument typename="QWidget" typetype="class" dir="out"/>
    </Function>
    <Function name="QWizard.setSideWidget">
      <Argument typename="QWidget" typetype="class" name="widget" transfer="to"/>
    </Function>
    <Function name="QWizard.pageIds">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWizard.removePage">
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWizard.cleanupPage" virtual="1">
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWizard.initializePage" virtual="1">
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWizard.done" virtual="1">
      <Argument typename="int" name="result"/>
    </Function>
    <Function name="QWizard.paintEvent" virtual="1">
      <Argument typename="QPaintEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QWizard.resizeEvent" virtual="1">
      <Argument typename="QResizeEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QWizard.event" virtual="1">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QEvent" typetype="class" name="event"/>
    </Function>
    <Function name="QWizard.restart" slot="void restart()"/>
    <Function name="QWizard.next" slot="void next()"/>
    <Function name="QWizard.back" slot="void back()"/>
    <Signal default="1" name="QWizard.customButtonClicked" sig="void customButtonClicked(int)"/>
    <Signal default="1" name="QWizard.helpRequested" sig="void helpRequested()"/>
    <Signal default="1" name="QWizard.currentIdChanged" sig="void currentIdChanged(int)"/>
    <Function name="QWizard.sizeHint" virtual="1">
      <Argument typename="QSize" typetype="class" dir="out"/>
    </Function>
    <Function name="QWizard.setVisible" virtual="1">
      <Argument typename="bool" name="visible"/>
    </Function>
    <Function name="QWizard.setDefaultProperty">
      <Argument typename="str" name="className"/>
      <Argument typename="str" name="property"/>
      <Argument typename="object" name="changedSignal"/>
    </Function>
    <Function name="QWizard.pixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QWizard.WizardPixmap" typetype="enum" name="which"/>
    </Function>
    <Function name="QWizard.setPixmap">
      <Argument typename="QWizard.WizardPixmap" typetype="enum" name="which"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QWizard.subTitleFormat">
      <Argument typename="Qt.TextFormat" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWizard.setSubTitleFormat">
      <Argument typename="Qt.TextFormat" typetype="enum" name="format"/>
    </Function>
    <Function name="QWizard.titleFormat">
      <Argument typename="Qt.TextFormat" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWizard.setTitleFormat">
      <Argument typename="Qt.TextFormat" typetype="enum" name="format"/>
    </Function>
    <Function name="QWizard.button">
      <Argument typename="QAbstractButton" typetype="class" dir="out"/>
      <Argument typename="QWizard.WizardButton" typetype="enum" name="which"/>
    </Function>
    <Function name="QWizard.setButton">
      <Argument typename="QWizard.WizardButton" typetype="enum" name="which"/>
      <Argument typename="QAbstractButton" typetype="class" name="button" transfer="to"/>
    </Function>
    <Function name="QWizard.setButtonLayout">
      <Argument typename="unknown-type" typetype="mappedtype" name="layout"/>
    </Function>
    <Function name="QWizard.buttonText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QWizard.WizardButton" typetype="enum" name="which"/>
    </Function>
    <Function name="QWizard.setButtonText">
      <Argument typename="QWizard.WizardButton" typetype="enum" name="which"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QWizard.options">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QWizard.setOptions">
      <Argument typename="QWizard.WizardOptions" typetype="class" name="options"/>
    </Function>
    <Function name="QWizard.testOption">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWizard.WizardOption" typetype="enum" name="option"/>
    </Function>
    <Function name="QWizard.setOption">
      <Argument typename="QWizard.WizardOption" typetype="enum" name="option"/>
      <Argument typename="bool" name="on" default="True"/>
    </Function>
    <Function name="QWizard.wizardStyle">
      <Argument typename="QWizard.WizardStyle" typetype="enum" dir="out"/>
    </Function>
    <Function name="QWizard.setWizardStyle">
      <Argument typename="QWizard.WizardStyle" typetype="enum" name="style"/>
    </Function>
    <Function name="QWizard.field">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="name"/>
    </Function>
    <Function name="QWizard.setField">
      <Argument typename="QString" typetype="mappedtype" name="name"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Function name="QWizard.nextId" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWizard.validateCurrentPage" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWizard.currentId">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWizard.currentPage">
      <Argument typename="QWizardPage" typetype="class" dir="out"/>
    </Function>
    <Function name="QWizard.startId">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWizard.setStartId">
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWizard.visitedPages">
      <Argument typename="unknown-type" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWizard.hasVisitedPage">
      <Argument typename="bool" dir="out"/>
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWizard.page">
      <Argument typename="QWizardPage" typetype="class" dir="out"/>
      <Argument typename="int" name="id"/>
    </Function>
    <Function name="QWizard.setPage">
      <Argument typename="int" name="id"/>
      <Argument typename="QWizardPage" typetype="class" name="page" transfer="to"/>
    </Function>
    <Function name="QWizard.addPage">
      <Argument typename="int" dir="out"/>
      <Argument typename="QWizardPage" typetype="class" name="page" transfer="to"/>
    </Function>
  </Class>
  <Class name="QWizard.WizardOptions" convert="1">
    <Function name="QWizard.WizardOptions.__init__"/>
    <Function name="QWizard.WizardOptions.__init__">
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__init__">
      <Argument typename="QWizard.WizardOptions" typetype="class"/>
    </Function>
    <Function name="QWizard.WizardOptions.__hash__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWizard.WizardOptions.__bool__">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWizard.WizardOptions.__ne__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWizard.WizardOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__eq__">
      <Argument typename="bool" dir="out"/>
      <Argument typename="QWizard.WizardOptions" typetype="class" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__ixor__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__xor__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__ior__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__or__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__iand__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__and__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
      <Argument typename="int" name="f"/>
    </Function>
    <Function name="QWizard.WizardOptions.__invert__">
      <Argument typename="QWizard.WizardOptions" typetype="class" dir="out"/>
    </Function>
    <Function name="QWizard.WizardOptions.__int__">
      <Argument typename="int" dir="out"/>
    </Function>
  </Class>
  <Class name="QWizardPage" inherits="QWidget">
    <Function name="QWizardPage.__init__">
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QWizardPage.wizard">
      <Argument typename="QWizard" typetype="class" dir="out"/>
    </Function>
    <Function name="QWizardPage.registerField">
      <Argument typename="QString" typetype="mappedtype" name="name"/>
      <Argument typename="QWidget" typetype="class" name="widget"/>
      <Argument typename="str" name="property" default="None"/>
      <Argument typename="object" name="changedSignal" default="0"/>
    </Function>
    <Function name="QWizardPage.field">
      <Argument typename="QVariant" typetype="class" dir="out"/>
      <Argument typename="QString" typetype="mappedtype" name="name"/>
    </Function>
    <Function name="QWizardPage.setField">
      <Argument typename="QString" typetype="mappedtype" name="name"/>
      <Argument typename="QVariant" typetype="class" name="value"/>
    </Function>
    <Signal default="1" name="QWizardPage.completeChanged" sig="void completeChanged()"/>
    <Function name="QWizardPage.nextId" virtual="1">
      <Argument typename="int" dir="out"/>
    </Function>
    <Function name="QWizardPage.isComplete" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWizardPage.validatePage" virtual="1">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWizardPage.cleanupPage" virtual="1"/>
    <Function name="QWizardPage.initializePage" virtual="1"/>
    <Function name="QWizardPage.buttonText">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
      <Argument typename="QWizard.WizardButton" typetype="enum" name="which"/>
    </Function>
    <Function name="QWizardPage.setButtonText">
      <Argument typename="QWizard.WizardButton" typetype="enum" name="which"/>
      <Argument typename="QString" typetype="mappedtype" name="text"/>
    </Function>
    <Function name="QWizardPage.isCommitPage">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWizardPage.setCommitPage">
      <Argument typename="bool" name="commitPage"/>
    </Function>
    <Function name="QWizardPage.isFinalPage">
      <Argument typename="bool" dir="out"/>
    </Function>
    <Function name="QWizardPage.setFinalPage">
      <Argument typename="bool" name="finalPage"/>
    </Function>
    <Function name="QWizardPage.pixmap">
      <Argument typename="QPixmap" typetype="class" dir="out"/>
      <Argument typename="QWizard.WizardPixmap" typetype="enum" name="which"/>
    </Function>
    <Function name="QWizardPage.setPixmap">
      <Argument typename="QWizard.WizardPixmap" typetype="enum" name="which"/>
      <Argument typename="QPixmap" typetype="class" name="pixmap"/>
    </Function>
    <Function name="QWizardPage.subTitle">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWizardPage.setSubTitle">
      <Argument typename="QString" typetype="mappedtype" name="subTitle"/>
    </Function>
    <Function name="QWizardPage.title">
      <Argument typename="QString" typetype="mappedtype" dir="out"/>
    </Function>
    <Function name="QWizardPage.setTitle">
      <Argument typename="QString" typetype="mappedtype" name="title"/>
    </Function>
  </Class>
  <Class name="QMacCocoaViewContainer" inherits="QWidget">
    <Function name="QMacCocoaViewContainer.__init__">
      <Argument typename="sip.voidptr" name="cocoaViewToWrap"/>
      <Argument typename="QWidget" typetype="class" name="parent" transfer="this" default="None"/>
    </Function>
    <Function name="QMacCocoaViewContainer.cocoaView">
      <Argument typename="sip.voidptr" dir="out"/>
    </Function>
    <Function name="QMacCocoaViewContainer.setCocoaView">
      <Argument typename="sip.voidptr" name="cocoaViewToWrap"/>
    </Function>
  </Class>
  <Member name="QWIDGETSIZE_MAX" const="1" typename="int"/>
  <Member name="qApp" const="1" typename="QApplication" typetype="class"/>
  <Function name="__rshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QListWidgetItem" typetype="class" name="item"/>
  </Function>
  <Function name="__rshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QSizePolicy" typetype="class"/>
  </Function>
  <Function name="__rshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
  </Function>
  <Function name="__rshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
  </Function>
  <Function name="__lshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QListWidgetItem" typetype="class" name="item"/>
  </Function>
  <Function name="__lshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QSizePolicy" typetype="class"/>
  </Function>
  <Function name="__lshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QTableWidgetItem" typetype="class" name="item"/>
  </Function>
  <Function name="__lshift__" extends="QDataStream">
    <Argument typename="QDataStream" typetype="class" dir="out"/>
    <Argument typename="QTreeWidgetItem" typetype="class" name="item"/>
  </Function>
  <Function name="qDrawBorderPixmap" static="1">
    <Argument typename="QPainter" typetype="class" name="painter"/>
    <Argument typename="QRect" typetype="class" name="target"/>
    <Argument typename="QMargins" typetype="class" name="margins"/>
    <Argument typename="QPixmap" typetype="class" name="pixmap"/>
  </Function>
  <Function name="qDrawPlainRect" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="int" name="x"/>
    <Argument typename="int" name="y"/>
    <Argument typename="int" name="w"/>
    <Argument typename="int" name="h"/>
    <Argument typename="QColor" typetype="class"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawPlainRect" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="QRect" typetype="class" name="r"/>
    <Argument typename="QColor" typetype="class"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawWinPanel" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="int" name="x"/>
    <Argument typename="int" name="y"/>
    <Argument typename="int" name="w"/>
    <Argument typename="int" name="h"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawWinPanel" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="QRect" typetype="class" name="r"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawWinButton" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="int" name="x"/>
    <Argument typename="int" name="y"/>
    <Argument typename="int" name="w"/>
    <Argument typename="int" name="h"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawWinButton" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="QRect" typetype="class" name="r"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawShadePanel" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="int" name="x"/>
    <Argument typename="int" name="y"/>
    <Argument typename="int" name="w"/>
    <Argument typename="int" name="h"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawShadePanel" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="QRect" typetype="class" name="r"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawShadeRect" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="int" name="x"/>
    <Argument typename="int" name="y"/>
    <Argument typename="int" name="w"/>
    <Argument typename="int" name="h"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="int" name="midLineWidth" default="0"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawShadeRect" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="QRect" typetype="class" name="r"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="False"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="int" name="midLineWidth" default="0"/>
    <Argument typename="QBrush" typetype="class" name="fill" default="None"/>
  </Function>
  <Function name="qDrawShadeLine" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="int" name="x1"/>
    <Argument typename="int" name="y1"/>
    <Argument typename="int" name="x2"/>
    <Argument typename="int" name="y2"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="True"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="int" name="midLineWidth" default="0"/>
  </Function>
  <Function name="qDrawShadeLine" static="1">
    <Argument typename="QPainter" typetype="class" name="p"/>
    <Argument typename="QPoint" typetype="class" name="p1"/>
    <Argument typename="QPoint" typetype="class" name="p2"/>
    <Argument typename="QPalette" typetype="class" name="pal"/>
    <Argument typename="bool" name="sunken" default="True"/>
    <Argument typename="int" name="lineWidth" default="1"/>
    <Argument typename="int" name="midLineWidth" default="0"/>
  </Function>
</Module>
